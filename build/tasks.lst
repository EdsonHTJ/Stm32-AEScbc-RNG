ARM GAS  /tmp/ccODOtJH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	prvTaskIsTaskSuspended:
  26              	.LVL0:
  27              	.LFB15:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
ARM GAS  /tmp/ccODOtJH.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
ARM GAS  /tmp/ccODOtJH.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
ARM GAS  /tmp/ccODOtJH.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
ARM GAS  /tmp/ccODOtJH.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccODOtJH.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
ARM GAS  /tmp/ccODOtJH.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = { 0 };/*< Prioritised rea
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = { 0 };						/*< Delayed tasks. */
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = { 0 };						/*< Delayed tasks (two lists are used
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;				/*< Points to the delayed tas
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;		/*< Points to the delay
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = { 0 };						/*< Tasks that have been readied whil
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xTasksWaitingTermination = { 0 };				/*< Tasks that have been deleted
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = { 0 };					/*< Tasks that are currently suspend
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
ARM GAS  /tmp/ccODOtJH.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/ccODOtJH.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  /tmp/ccODOtJH.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccODOtJH.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
ARM GAS  /tmp/ccODOtJH.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
ARM GAS  /tmp/ccODOtJH.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
ARM GAS  /tmp/ccODOtJH.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccODOtJH.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
ARM GAS  /tmp/ccODOtJH.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccODOtJH.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccODOtJH.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/ccODOtJH.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
ARM GAS  /tmp/ccODOtJH.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
ARM GAS  /tmp/ccODOtJH.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccODOtJH.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  /tmp/ccODOtJH.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
ARM GAS  /tmp/ccODOtJH.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
ARM GAS  /tmp/ccODOtJH.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
ARM GAS  /tmp/ccODOtJH.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  29              		.loc 1 1798 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1799 2 view .LVU1
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1800 2 view .LVU2
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  36              		.loc 1 1806 3 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
  38              		.loc 1 1806 24 discriminator 2 view .LVU4
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1809 3 discriminator 2 view .LVU5
  40              		.loc 1 1809 7 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1809 5 discriminator 2 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1799 13 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1799 13 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1806 3 is_stmt 1 view .LVU10
  54              	.LBB108:
  55              	.LBI108:
  56              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  /tmp/ccODOtJH.s 			page 34


  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccODOtJH.s 			page 35


  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccODOtJH.s 			page 36


 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccODOtJH.s 			page 37


 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 191 30 view .LVU11
  58              	.LBB109:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  59              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  60              		.loc 2 195 2 view .LVU13
  61              		.syntax unified
  62              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              	.LVL3:
  70              		.thumb
  71              		.syntax unified
  72              	.L3:
  73              		.loc 2 195 2 is_stmt 0 view .LVU14
  74              	.LBE109:
  75              	.LBE108:
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  76              		.loc 1 1806 3 is_stmt 1 discriminator 1 view .LVU15
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  77              		.loc 1 1806 3 discriminator 1 view .LVU16
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78              		.loc 1 1806 3 discriminator 1 view .LVU17
  79 001e FEE7     		b	.L3
  80              	.L9:
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  81              		.loc 1 1812 4 view .LVU18
  82              		.loc 1 1812 8 is_stmt 0 view .LVU19
  83 0020 836A     		ldr	r3, [r0, #40]
  84              		.loc 1 1812 6 view .LVU20
  85 0022 064A     		ldr	r2, .L10+4
  86 0024 9342     		cmp	r3, r2
  87 0026 02D0     		beq	.L6
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  88              		.loc 1 1816 5 is_stmt 1 view .LVU21
  89              		.loc 1 1816 7 is_stmt 0 view .LVU22
  90 0028 1BB1     		cbz	r3, .L7
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  91              		.loc 1 1799 13 view .LVU23
  92 002a 0020     		movs	r0, #0
ARM GAS  /tmp/ccODOtJH.s 			page 38


  93              	.LVL4:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  94              		.loc 1 1799 13 view .LVU24
  95 002c 7047     		bx	lr
  96              	.LVL5:
  97              	.L6:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  98              		.loc 1 1799 13 view .LVU25
  99 002e 0020     		movs	r0, #0
 100              	.LVL6:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 101              		.loc 1 1799 13 view .LVU26
 102 0030 7047     		bx	lr
 103              	.LVL7:
 104              	.L7:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 105              		.loc 1 1818 14 view .LVU27
 106 0032 0120     		movs	r0, #1
 107              	.LVL8:
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 108              		.loc 1 1832 28 is_stmt 1 view .LVU28
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 109              		.loc 1 1835 3 view .LVU29
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 110              		.loc 1 1836 2 is_stmt 0 view .LVU30
 111 0034 7047     		bx	lr
 112              	.L11:
 113 0036 00BF     		.align	2
 114              	.L10:
 115 0038 00000000 		.word	.LANCHOR0
 116 003c 00000000 		.word	.LANCHOR1
 117              		.cfi_endproc
 118              	.LFE15:
 120              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 121              		.align	1
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv4-sp-d16
 127              	prvResetNextTaskUnblockTime:
 128              	.LFB40:
ARM GAS  /tmp/ccODOtJH.s 			page 39


1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccODOtJH.s 			page 40


1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
ARM GAS  /tmp/ccODOtJH.s 			page 41


1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccODOtJH.s 			page 42


2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
ARM GAS  /tmp/ccODOtJH.s 			page 43


2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
ARM GAS  /tmp/ccODOtJH.s 			page 44


2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 45


2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
ARM GAS  /tmp/ccODOtJH.s 			page 46


2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccODOtJH.s 			page 47


2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 48


2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccODOtJH.s 			page 49


2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
ARM GAS  /tmp/ccODOtJH.s 			page 50


2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
ARM GAS  /tmp/ccODOtJH.s 			page 51


2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccODOtJH.s 			page 52


2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
ARM GAS  /tmp/ccODOtJH.s 			page 53


2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccODOtJH.s 			page 54


2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccODOtJH.s 			page 55


2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
ARM GAS  /tmp/ccODOtJH.s 			page 56


2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 57


2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
ARM GAS  /tmp/ccODOtJH.s 			page 58


2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 59


2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
ARM GAS  /tmp/ccODOtJH.s 			page 60


3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 61


3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  /tmp/ccODOtJH.s 			page 62


3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
ARM GAS  /tmp/ccODOtJH.s 			page 63


3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccODOtJH.s 			page 64


3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccODOtJH.s 			page 65


3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 66


3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
ARM GAS  /tmp/ccODOtJH.s 			page 67


3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccODOtJH.s 			page 68


3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
ARM GAS  /tmp/ccODOtJH.s 			page 69


3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
ARM GAS  /tmp/ccODOtJH.s 			page 70


3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
ARM GAS  /tmp/ccODOtJH.s 			page 71


3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
ARM GAS  /tmp/ccODOtJH.s 			page 72


3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
ARM GAS  /tmp/ccODOtJH.s 			page 73


3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
ARM GAS  /tmp/ccODOtJH.s 			page 74


3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 129              		.loc 1 3881 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 134              		.loc 1 3882 1 view .LVU32
ARM GAS  /tmp/ccODOtJH.s 			page 75


3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 135              		.loc 1 3884 2 view .LVU33
 136              		.loc 1 3884 6 is_stmt 0 view .LVU34
 137 0000 084B     		ldr	r3, .L15
 138 0002 1B68     		ldr	r3, [r3]
 139 0004 1B68     		ldr	r3, [r3]
 140              		.loc 1 3884 4 view .LVU35
 141 0006 23B9     		cbnz	r3, .L13
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 142              		.loc 1 3890 3 is_stmt 1 view .LVU36
 143              		.loc 1 3890 24 is_stmt 0 view .LVU37
 144 0008 074B     		ldr	r3, .L15+4
 145 000a 4FF0FF32 		mov	r2, #-1
 146 000e 1A60     		str	r2, [r3]
 147 0010 7047     		bx	lr
 148              	.L13:
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 149              		.loc 1 3898 3 is_stmt 1 view .LVU38
 150              		.loc 1 3898 15 is_stmt 0 view .LVU39
 151 0012 044B     		ldr	r3, .L15
 152 0014 1B68     		ldr	r3, [r3]
 153 0016 DB68     		ldr	r3, [r3, #12]
 154              		.loc 1 3898 13 view .LVU40
 155 0018 DB68     		ldr	r3, [r3, #12]
 156              	.LVL9:
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 157              		.loc 1 3899 3 is_stmt 1 view .LVU41
 158              		.loc 1 3899 26 is_stmt 0 view .LVU42
 159 001a 5A68     		ldr	r2, [r3, #4]
 160              		.loc 1 3899 24 view .LVU43
 161 001c 024B     		ldr	r3, .L15+4
 162              	.LVL10:
 163              		.loc 1 3899 24 view .LVU44
 164 001e 1A60     		str	r2, [r3]
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 165              		.loc 1 3901 1 view .LVU45
 166 0020 7047     		bx	lr
 167              	.L16:
 168 0022 00BF     		.align	2
 169              	.L15:
 170 0024 00000000 		.word	.LANCHOR2
 171 0028 00000000 		.word	.LANCHOR3
 172              		.cfi_endproc
ARM GAS  /tmp/ccODOtJH.s 			page 76


 173              	.LFE40:
 175              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	prvInitialiseNewTask:
 183              	.LVL11:
 184              	.LFB7:
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 185              		.loc 1 829 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 16, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 189              		.loc 1 829 1 is_stmt 0 view .LVU47
 190 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 191              	.LCFI0:
 192              		.cfi_def_cfa_offset 32
 193              		.cfi_offset 4, -32
 194              		.cfi_offset 5, -28
 195              		.cfi_offset 6, -24
 196              		.cfi_offset 7, -20
 197              		.cfi_offset 8, -16
 198              		.cfi_offset 9, -12
 199              		.cfi_offset 10, -8
 200              		.cfi_offset 14, -4
 201 0004 0746     		mov	r7, r0
 202 0006 9846     		mov	r8, r3
 203 0008 089D     		ldr	r5, [sp, #32]
 204 000a DDF82490 		ldr	r9, [sp, #36]
 205 000e 0A9C     		ldr	r4, [sp, #40]
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 206              		.loc 1 830 1 is_stmt 1 view .LVU48
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 207              		.loc 1 831 1 view .LVU49
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 208              		.loc 1 861 3 view .LVU50
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 209              		.loc 1 861 29 is_stmt 0 view .LVU51
 210 0010 266B     		ldr	r6, [r4, #48]
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 211              		.loc 1 861 38 view .LVU52
 212 0012 02F18042 		add	r2, r2, #1073741824
 213              	.LVL12:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 214              		.loc 1 861 38 view .LVU53
 215 0016 013A     		subs	r2, r2, #1
 216              	.LVL13:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 217              		.loc 1 861 16 view .LVU54
 218 0018 06EB8206 		add	r6, r6, r2, lsl #2
 219              	.LVL14:
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220              		.loc 1 862 3 is_stmt 1 view .LVU55
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 77


 221              		.loc 1 862 81 is_stmt 0 view .LVU56
 222 001c 26F00706 		bic	r6, r6, #7
 223              	.LVL15:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 224              		.loc 1 865 3 is_stmt 1 view .LVU57
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225              		.loc 1 865 124 view .LVU58
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 226              		.loc 1 889 2 view .LVU59
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 227              		.loc 1 889 4 is_stmt 0 view .LVU60
 228 0020 0029     		cmp	r1, #0
 229 0022 3AD0     		beq	.L29
 230 0024 8E46     		mov	lr, r1
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 231              		.loc 1 891 10 view .LVU61
 232 0026 4FF0000C 		mov	ip, #0
 233              	.LVL16:
 234              	.L18:
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 235              		.loc 1 891 31 is_stmt 1 discriminator 1 view .LVU62
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 236              		.loc 1 891 3 is_stmt 0 discriminator 1 view .LVU63
 237 002a BCF10F0F 		cmp	ip, #15
 238 002e 0BD8     		bhi	.L20
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 239              		.loc 1 893 4 is_stmt 1 view .LVU64
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 240              		.loc 1 893 38 is_stmt 0 view .LVU65
 241 0030 1EF80C20 		ldrb	r2, [lr, ip]	@ zero_extendqisi2
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242              		.loc 1 893 30 view .LVU66
 243 0034 04EB0C03 		add	r3, r4, ip
 244 0038 83F83420 		strb	r2, [r3, #52]
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 245              		.loc 1 898 4 is_stmt 1 view .LVU67
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 246              		.loc 1 898 14 is_stmt 0 view .LVU68
 247 003c 1EF80C30 		ldrb	r3, [lr, ip]	@ zero_extendqisi2
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 248              		.loc 1 898 6 view .LVU69
 249 0040 13B1     		cbz	r3, .L20
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 250              		.loc 1 904 29 is_stmt 1 discriminator 2 view .LVU70
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 251              		.loc 1 891 76 discriminator 2 view .LVU71
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 252              		.loc 1 891 77 is_stmt 0 discriminator 2 view .LVU72
 253 0042 0CF1010C 		add	ip, ip, #1
 254              	.LVL17:
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 255              		.loc 1 891 77 discriminator 2 view .LVU73
 256 0046 F0E7     		b	.L18
 257              	.L20:
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 258              		.loc 1 910 3 is_stmt 1 view .LVU74
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccODOtJH.s 			page 78


 259              		.loc 1 910 55 is_stmt 0 view .LVU75
 260 0048 0023     		movs	r3, #0
 261 004a 84F84330 		strb	r3, [r4, #67]
 262              	.LVL18:
 263              	.L22:
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 264              		.loc 1 921 2 is_stmt 1 view .LVU76
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 265              		.loc 1 921 4 is_stmt 0 view .LVU77
 266 004e 062D     		cmp	r5, #6
 267 0050 00D9     		bls	.L23
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 268              		.loc 1 923 14 view .LVU78
 269 0052 0625     		movs	r5, #6
 270              	.L23:
 271              	.LVL19:
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 272              		.loc 1 927 27 is_stmt 1 view .LVU79
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 273              		.loc 1 930 2 view .LVU80
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 274              		.loc 1 930 23 is_stmt 0 view .LVU81
 275 0054 E562     		str	r5, [r4, #44]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 276              		.loc 1 933 3 is_stmt 1 view .LVU82
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 277              		.loc 1 933 28 is_stmt 0 view .LVU83
 278 0056 6564     		str	r5, [r4, #68]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 279              		.loc 1 934 3 is_stmt 1 view .LVU84
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 280              		.loc 1 934 27 is_stmt 0 view .LVU85
 281 0058 4FF0000A 		mov	r10, #0
 282 005c C4F848A0 		str	r10, [r4, #72]
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 283              		.loc 1 938 2 is_stmt 1 view .LVU86
 284 0060 201D     		adds	r0, r4, #4
 285              	.LVL20:
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 286              		.loc 1 938 2 is_stmt 0 view .LVU87
 287 0062 FFF7FEFF 		bl	vListInitialiseItem
 288              	.LVL21:
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 289              		.loc 1 939 2 is_stmt 1 view .LVU88
 290 0066 04F11800 		add	r0, r4, #24
 291 006a FFF7FEFF 		bl	vListInitialiseItem
 292              	.LVL22:
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 293              		.loc 1 943 2 view .LVU89
 294 006e 2461     		str	r4, [r4, #16]
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 295              		.loc 1 946 2 view .LVU90
 296 0070 C5F10705 		rsb	r5, r5, #7
 297              	.LVL23:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 298              		.loc 1 946 2 is_stmt 0 view .LVU91
 299 0074 A561     		str	r5, [r4, #24]
ARM GAS  /tmp/ccODOtJH.s 			page 79


 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 300              		.loc 1 947 2 is_stmt 1 view .LVU92
 301 0076 6462     		str	r4, [r4, #36]
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 302              		.loc 1 974 3 view .LVU93
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 303              		.loc 1 989 3 view .LVU94
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 304              		.loc 1 989 29 is_stmt 0 view .LVU95
 305 0078 C4F84CA0 		str	r10, [r4, #76]
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 306              		.loc 1 990 3 is_stmt 1 view .LVU96
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 307              		.loc 1 990 27 is_stmt 0 view .LVU97
 308 007c 84F850A0 		strb	r10, [r4, #80]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 309              		.loc 1 1053 4 is_stmt 1 view .LVU98
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 310              		.loc 1 1053 29 is_stmt 0 view .LVU99
 311 0080 4246     		mov	r2, r8
 312 0082 3946     		mov	r1, r7
 313 0084 3046     		mov	r0, r6
 314 0086 FFF7FEFF 		bl	pxPortInitialiseStack
 315              	.LVL24:
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 316              		.loc 1 1053 27 view .LVU100
 317 008a 2060     		str	r0, [r4]
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 318              		.loc 1 1059 2 is_stmt 1 view .LVU101
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 319              		.loc 1 1059 4 is_stmt 0 view .LVU102
 320 008c B9F1000F 		cmp	r9, #0
 321 0090 01D0     		beq	.L17
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 322              		.loc 1 1063 3 is_stmt 1 view .LVU103
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 323              		.loc 1 1063 18 is_stmt 0 view .LVU104
 324 0092 C9F80040 		str	r4, [r9]
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 325              		.loc 1 1067 27 is_stmt 1 view .LVU105
 326              	.L17:
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 327              		.loc 1 1069 1 is_stmt 0 view .LVU106
 328 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 329              	.LVL25:
 330              	.L29:
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 331              		.loc 1 916 3 is_stmt 1 view .LVU107
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 332              		.loc 1 916 29 is_stmt 0 view .LVU108
 333 009a 0023     		movs	r3, #0
 334              	.LVL26:
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 335              		.loc 1 916 29 view .LVU109
 336 009c 84F83430 		strb	r3, [r4, #52]
 337 00a0 D5E7     		b	.L22
 338              		.cfi_endproc
ARM GAS  /tmp/ccODOtJH.s 			page 80


 339              	.LFE7:
 341              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 342              		.align	1
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 346              		.fpu fpv4-sp-d16
 348              	prvInitialiseTaskLists:
 349              	.LFB37:
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 350              		.loc 1 3547 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 38B5     		push	{r3, r4, r5, lr}
 355              	.LCFI1:
 356              		.cfi_def_cfa_offset 16
 357              		.cfi_offset 3, -16
 358              		.cfi_offset 4, -12
 359              		.cfi_offset 5, -8
 360              		.cfi_offset 14, -4
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361              		.loc 1 3548 1 view .LVU111
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 362              		.loc 1 3550 2 view .LVU112
 363              	.LVL27:
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 364              		.loc 1 3550 18 is_stmt 0 view .LVU113
 365 0002 0024     		movs	r4, #0
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 366              		.loc 1 3550 2 view .LVU114
 367 0004 07E0     		b	.L31
 368              	.LVL28:
 369              	.L32:
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 370              		.loc 1 3552 3 is_stmt 1 discriminator 3 view .LVU115
 371 0006 04EB8402 		add	r2, r4, r4, lsl #2
 372 000a 9300     		lsls	r3, r2, #2
 373 000c 0E48     		ldr	r0, .L34
 374 000e 1844     		add	r0, r0, r3
 375 0010 FFF7FEFF 		bl	vListInitialise
 376              	.LVL29:
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 377              		.loc 1 3550 91 discriminator 3 view .LVU116
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 378              		.loc 1 3550 101 is_stmt 0 discriminator 3 view .LVU117
 379 0014 0134     		adds	r4, r4, #1
 380              	.LVL30:
 381              	.L31:
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 382              		.loc 1 3550 40 is_stmt 1 discriminator 1 view .LVU118
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 383              		.loc 1 3550 2 is_stmt 0 discriminator 1 view .LVU119
 384 0016 062C     		cmp	r4, #6
 385 0018 F5D9     		bls	.L32
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 386              		.loc 1 3555 2 is_stmt 1 view .LVU120
ARM GAS  /tmp/ccODOtJH.s 			page 81


 387 001a 0C4D     		ldr	r5, .L34+4
 388 001c 2846     		mov	r0, r5
 389 001e FFF7FEFF 		bl	vListInitialise
 390              	.LVL31:
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 391              		.loc 1 3556 2 view .LVU121
 392 0022 0B4C     		ldr	r4, .L34+8
 393              	.LVL32:
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 394              		.loc 1 3556 2 is_stmt 0 view .LVU122
 395 0024 2046     		mov	r0, r4
 396 0026 FFF7FEFF 		bl	vListInitialise
 397              	.LVL33:
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398              		.loc 1 3557 2 is_stmt 1 view .LVU123
 399 002a 0A48     		ldr	r0, .L34+12
 400 002c FFF7FEFF 		bl	vListInitialise
 401              	.LVL34:
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 402              		.loc 1 3561 3 view .LVU124
 403 0030 0948     		ldr	r0, .L34+16
 404 0032 FFF7FEFF 		bl	vListInitialise
 405              	.LVL35:
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 406              		.loc 1 3567 3 view .LVU125
 407 0036 0948     		ldr	r0, .L34+20
 408 0038 FFF7FEFF 		bl	vListInitialise
 409              	.LVL36:
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 410              		.loc 1 3573 2 view .LVU126
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 411              		.loc 1 3573 20 is_stmt 0 view .LVU127
 412 003c 084B     		ldr	r3, .L34+24
 413 003e 1D60     		str	r5, [r3]
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 414              		.loc 1 3574 2 is_stmt 1 view .LVU128
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 415              		.loc 1 3574 28 is_stmt 0 view .LVU129
 416 0040 084B     		ldr	r3, .L34+28
 417 0042 1C60     		str	r4, [r3]
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 418              		.loc 1 3575 1 view .LVU130
 419 0044 38BD     		pop	{r3, r4, r5, pc}
 420              	.L35:
 421 0046 00BF     		.align	2
 422              	.L34:
 423 0048 00000000 		.word	.LANCHOR4
 424 004c 00000000 		.word	.LANCHOR5
 425 0050 00000000 		.word	.LANCHOR6
 426 0054 00000000 		.word	.LANCHOR1
 427 0058 00000000 		.word	.LANCHOR7
 428 005c 00000000 		.word	.LANCHOR0
 429 0060 00000000 		.word	.LANCHOR2
 430 0064 00000000 		.word	.LANCHOR8
 431              		.cfi_endproc
 432              	.LFE37:
 434              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
ARM GAS  /tmp/ccODOtJH.s 			page 82


 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	prvAddNewTaskToReadyList:
 442              	.LVL37:
 443              	.LFB8:
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 444              		.loc 1 1073 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 448              		.loc 1 1073 1 is_stmt 0 view .LVU132
 449 0000 10B5     		push	{r4, lr}
 450              	.LCFI2:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 4, -8
 453              		.cfi_offset 14, -4
 454 0002 0446     		mov	r4, r0
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 455              		.loc 1 1076 2 is_stmt 1 view .LVU133
 456 0004 FFF7FEFF 		bl	vPortEnterCritical
 457              	.LVL38:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 458              		.loc 1 1078 3 view .LVU134
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 459              		.loc 1 1078 25 is_stmt 0 view .LVU135
 460 0008 214A     		ldr	r2, .L43
 461 000a 1368     		ldr	r3, [r2]
 462 000c 0133     		adds	r3, r3, #1
 463 000e 1360     		str	r3, [r2]
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 464              		.loc 1 1079 3 is_stmt 1 view .LVU136
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 465              		.loc 1 1079 20 is_stmt 0 view .LVU137
 466 0010 204B     		ldr	r3, .L43+4
 467 0012 1B68     		ldr	r3, [r3]
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 468              		.loc 1 1079 5 view .LVU138
 469 0014 5BB1     		cbz	r3, .L41
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 470              		.loc 1 1102 4 is_stmt 1 view .LVU139
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 471              		.loc 1 1102 26 is_stmt 0 view .LVU140
 472 0016 204B     		ldr	r3, .L43+8
 473 0018 1B68     		ldr	r3, [r3]
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 474              		.loc 1 1102 6 view .LVU141
 475 001a 6BB9     		cbnz	r3, .L38
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 476              		.loc 1 1104 5 is_stmt 1 view .LVU142
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 477              		.loc 1 1104 21 is_stmt 0 view .LVU143
 478 001c 1D4B     		ldr	r3, .L43+4
 479 001e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccODOtJH.s 			page 83


 480 0020 DA6A     		ldr	r2, [r3, #44]
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 481              		.loc 1 1104 45 view .LVU144
 482 0022 E36A     		ldr	r3, [r4, #44]
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 483              		.loc 1 1104 7 view .LVU145
 484 0024 9A42     		cmp	r2, r3
 485 0026 07D8     		bhi	.L38
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 486              		.loc 1 1106 6 is_stmt 1 view .LVU146
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 487              		.loc 1 1106 19 is_stmt 0 view .LVU147
 488 0028 1A4B     		ldr	r3, .L43+4
 489 002a 1C60     		str	r4, [r3]
 490 002c 04E0     		b	.L38
 491              	.L41:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 492              		.loc 1 1083 4 is_stmt 1 view .LVU148
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493              		.loc 1 1083 17 is_stmt 0 view .LVU149
 494 002e 194B     		ldr	r3, .L43+4
 495 0030 1C60     		str	r4, [r3]
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 496              		.loc 1 1085 4 is_stmt 1 view .LVU150
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 497              		.loc 1 1085 31 is_stmt 0 view .LVU151
 498 0032 1368     		ldr	r3, [r2]
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 499              		.loc 1 1085 6 view .LVU152
 500 0034 012B     		cmp	r3, #1
 501 0036 28D0     		beq	.L42
 502              	.L38:
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 503              		.loc 1 1115 29 is_stmt 1 view .LVU153
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 504              		.loc 1 1119 3 view .LVU154
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505              		.loc 1 1119 15 is_stmt 0 view .LVU155
 506 0038 184A     		ldr	r2, .L43+12
 507 003a 1368     		ldr	r3, [r2]
 508 003c 0133     		adds	r3, r3, #1
 509 003e 1360     		str	r3, [r2]
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510              		.loc 1 1127 31 is_stmt 1 view .LVU156
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511              		.loc 1 1129 3 view .LVU157
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512              		.loc 1 1129 3 view .LVU158
 513 0040 E06A     		ldr	r0, [r4, #44]
 514 0042 0123     		movs	r3, #1
 515 0044 8340     		lsls	r3, r3, r0
 516 0046 164A     		ldr	r2, .L43+16
 517 0048 1168     		ldr	r1, [r2]
 518 004a 0B43     		orrs	r3, r3, r1
 519 004c 1360     		str	r3, [r2]
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 520              		.loc 1 1129 3 view .LVU159
ARM GAS  /tmp/ccODOtJH.s 			page 84


 521 004e 00EB8000 		add	r0, r0, r0, lsl #2
 522 0052 211D     		adds	r1, r4, #4
 523 0054 134B     		ldr	r3, .L43+20
 524 0056 03EB8000 		add	r0, r3, r0, lsl #2
 525 005a FFF7FEFF 		bl	vListInsertEnd
 526              	.LVL39:
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527              		.loc 1 1129 36 view .LVU160
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 528              		.loc 1 1131 3 view .LVU161
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529              		.loc 1 1133 2 view .LVU162
 530 005e FFF7FEFF 		bl	vPortExitCritical
 531              	.LVL40:
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 532              		.loc 1 1135 2 view .LVU163
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 533              		.loc 1 1135 24 is_stmt 0 view .LVU164
 534 0062 0D4B     		ldr	r3, .L43+8
 535 0064 1B68     		ldr	r3, [r3]
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 536              		.loc 1 1135 4 view .LVU165
 537 0066 7BB1     		cbz	r3, .L36
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 538              		.loc 1 1139 3 is_stmt 1 view .LVU166
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 539              		.loc 1 1139 19 is_stmt 0 view .LVU167
 540 0068 0A4B     		ldr	r3, .L43+4
 541 006a 1B68     		ldr	r3, [r3]
 542 006c DA6A     		ldr	r2, [r3, #44]
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 543              		.loc 1 1139 42 view .LVU168
 544 006e E36A     		ldr	r3, [r4, #44]
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 545              		.loc 1 1139 5 view .LVU169
 546 0070 9A42     		cmp	r2, r3
 547 0072 09D2     		bcs	.L36
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 548              		.loc 1 1141 4 is_stmt 1 view .LVU170
 549 0074 4FF0E023 		mov	r3, #-536813568
 550 0078 4FF08052 		mov	r2, #268435456
 551 007c C3F8042D 		str	r2, [r3, #3332]
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 552              		.loc 1 1141 4 view .LVU171
 553              		.syntax unified
 554              	@ 1141 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 555 0080 BFF34F8F 		dsb
 556              	@ 0 "" 2
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 557              		.loc 1 1141 4 view .LVU172
 558              	@ 1141 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 559 0084 BFF36F8F 		isb
 560              	@ 0 "" 2
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 561              		.loc 1 1141 35 view .LVU173
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 562              		.loc 1 1150 27 view .LVU174
ARM GAS  /tmp/ccODOtJH.s 			page 85


 563              		.thumb
 564              		.syntax unified
 565              	.L36:
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 566              		.loc 1 1152 1 is_stmt 0 view .LVU175
 567 0088 10BD     		pop	{r4, pc}
 568              	.LVL41:
 569              	.L42:
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 570              		.loc 1 1090 5 is_stmt 1 view .LVU176
 571 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 572              	.LVL42:
 573 008e D3E7     		b	.L38
 574              	.L44:
 575              		.align	2
 576              	.L43:
 577 0090 00000000 		.word	.LANCHOR9
 578 0094 00000000 		.word	.LANCHOR10
 579 0098 00000000 		.word	.LANCHOR11
 580 009c 00000000 		.word	.LANCHOR12
 581 00a0 00000000 		.word	.LANCHOR13
 582 00a4 00000000 		.word	.LANCHOR4
 583              		.cfi_endproc
 584              	.LFE8:
 586              		.section	.text.prvDeleteTCB,"ax",%progbits
 587              		.align	1
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 591              		.fpu fpv4-sp-d16
 593              	prvDeleteTCB:
 594              	.LVL43:
 595              	.LFB39:
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 596              		.loc 1 3827 2 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 600              		.loc 1 3827 2 is_stmt 0 view .LVU178
 601 0000 10B5     		push	{r4, lr}
 602              	.LCFI3:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 4, -8
 605              		.cfi_offset 14, -4
 606 0002 0446     		mov	r4, r0
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607              		.loc 1 3831 3 is_stmt 1 view .LVU179
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 608              		.loc 1 3853 4 view .LVU180
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609              		.loc 1 3853 13 is_stmt 0 view .LVU181
 610 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 611              		.loc 1 3853 6 view .LVU182
 612 0008 63B1     		cbz	r3, .L51
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 86


 613              		.loc 1 3860 9 is_stmt 1 view .LVU183
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 614              		.loc 1 3860 11 is_stmt 0 view .LVU184
 615 000a 012B     		cmp	r3, #1
 616 000c 11D0     		beq	.L52
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 617              		.loc 1 3870 5 is_stmt 1 view .LVU185
 618 000e 022B     		cmp	r3, #2
 619 0010 0ED0     		beq	.L45
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 620              		.loc 1 3870 5 view .LVU186
 621              	.LBB110:
 622              	.LBI110:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 623              		.loc 2 191 30 view .LVU187
 624              	.LBB111:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 625              		.loc 2 193 1 view .LVU188
 626              		.loc 2 195 2 view .LVU189
 627              		.syntax unified
 628              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 629 0012 4FF05003 			mov r3, #80												
 630 0016 83F31188 		msr basepri, r3											
 631 001a BFF36F8F 		isb														
 632 001e BFF34F8F 		dsb														
 633              	
 634              	@ 0 "" 2
 635              	.LVL44:
 636              		.thumb
 637              		.syntax unified
 638              	.L49:
 639              		.loc 2 195 2 is_stmt 0 view .LVU190
 640              	.LBE111:
 641              	.LBE110:
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 642              		.loc 1 3870 5 is_stmt 1 discriminator 1 view .LVU191
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 643              		.loc 1 3870 5 discriminator 1 view .LVU192
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 644              		.loc 1 3870 5 discriminator 1 view .LVU193
 645 0022 FEE7     		b	.L49
 646              	.L51:
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 647              		.loc 1 3857 5 view .LVU194
 648 0024 006B     		ldr	r0, [r0, #48]
 649              	.LVL45:
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 650              		.loc 1 3857 5 is_stmt 0 view .LVU195
 651 0026 FFF7FEFF 		bl	vPortFree
 652              	.LVL46:
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 653              		.loc 1 3858 5 is_stmt 1 view .LVU196
 654 002a 2046     		mov	r0, r4
 655 002c FFF7FEFF 		bl	vPortFree
 656              	.LVL47:
 657              	.L45:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 87


 658              		.loc 1 3875 2 is_stmt 0 view .LVU197
 659 0030 10BD     		pop	{r4, pc}
 660              	.LVL48:
 661              	.L52:
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662              		.loc 1 3864 5 is_stmt 1 view .LVU198
 663 0032 FFF7FEFF 		bl	vPortFree
 664              	.LVL49:
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 665              		.loc 1 3864 5 is_stmt 0 view .LVU199
 666 0036 FBE7     		b	.L45
 667              		.cfi_endproc
 668              	.LFE39:
 670              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 671              		.align	1
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 677              	prvCheckTasksWaitingTermination:
 678              	.LFB38:
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679              		.loc 1 3579 1 is_stmt 1 view -0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              	.LBB112:
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684              		.loc 1 3585 3 view .LVU201
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 685              		.loc 1 3589 3 view .LVU202
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686              		.loc 1 3589 8 view .LVU203
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 687              		.loc 1 3589 39 is_stmt 0 view .LVU204
 688 0000 0F4B     		ldr	r3, .L60
 689 0002 1B68     		ldr	r3, [r3]
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 690              		.loc 1 3589 8 view .LVU205
 691 0004 D3B1     		cbz	r3, .L59
 692              	.LBE112:
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 693              		.loc 1 3579 1 view .LVU206
 694 0006 10B5     		push	{r4, lr}
 695              	.LCFI4:
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 4, -8
 698              		.cfi_offset 14, -4
 699              	.L55:
 700              	.LBB113:
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 701              		.loc 1 3591 4 is_stmt 1 view .LVU207
 702 0008 FFF7FEFF 		bl	vPortEnterCritical
 703              	.LVL50:
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 704              		.loc 1 3593 5 view .LVU208
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccODOtJH.s 			page 88


 705              		.loc 1 3593 13 is_stmt 0 view .LVU209
 706 000c 0D4B     		ldr	r3, .L60+4
 707 000e DB68     		ldr	r3, [r3, #12]
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 708              		.loc 1 3593 11 view .LVU210
 709 0010 DC68     		ldr	r4, [r3, #12]
 710              	.LVL51:
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 711              		.loc 1 3594 5 is_stmt 1 view .LVU211
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 712              		.loc 1 3594 14 is_stmt 0 view .LVU212
 713 0012 201D     		adds	r0, r4, #4
 714 0014 FFF7FEFF 		bl	uxListRemove
 715              	.LVL52:
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 716              		.loc 1 3595 5 is_stmt 1 view .LVU213
 717 0018 0B4A     		ldr	r2, .L60+8
 718 001a 1368     		ldr	r3, [r2]
 719 001c 013B     		subs	r3, r3, #1
 720 001e 1360     		str	r3, [r2]
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 721              		.loc 1 3596 5 view .LVU214
 722 0020 074A     		ldr	r2, .L60
 723 0022 1368     		ldr	r3, [r2]
 724 0024 013B     		subs	r3, r3, #1
 725 0026 1360     		str	r3, [r2]
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726              		.loc 1 3598 4 view .LVU215
 727 0028 FFF7FEFF 		bl	vPortExitCritical
 728              	.LVL53:
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 729              		.loc 1 3600 4 view .LVU216
 730 002c 2046     		mov	r0, r4
 731 002e FFF7FEFF 		bl	prvDeleteTCB
 732              	.LVL54:
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 733              		.loc 1 3589 8 view .LVU217
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 734              		.loc 1 3589 39 is_stmt 0 view .LVU218
 735 0032 034B     		ldr	r3, .L60
 736 0034 1B68     		ldr	r3, [r3]
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 737              		.loc 1 3589 8 view .LVU219
 738 0036 002B     		cmp	r3, #0
 739 0038 E6D1     		bne	.L55
 740              	.LBE113:
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 741              		.loc 1 3604 1 view .LVU220
 742 003a 10BD     		pop	{r4, pc}
 743              	.LVL55:
 744              	.L59:
 745              	.LCFI5:
 746              		.cfi_def_cfa_offset 0
 747              		.cfi_restore 4
 748              		.cfi_restore 14
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 749              		.loc 1 3604 1 view .LVU221
ARM GAS  /tmp/ccODOtJH.s 			page 89


 750 003c 7047     		bx	lr
 751              	.L61:
 752 003e 00BF     		.align	2
 753              	.L60:
 754 0040 00000000 		.word	.LANCHOR14
 755 0044 00000000 		.word	.LANCHOR7
 756 0048 00000000 		.word	.LANCHOR9
 757              		.cfi_endproc
 758              	.LFE38:
 760              		.section	.text.prvIdleTask,"ax",%progbits
 761              		.align	1
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv4-sp-d16
 767              	prvIdleTask:
 768              	.LFB36:
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 769              		.loc 1 3335 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ Volatile: function does not return.
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL56:
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 775              		.loc 1 3335 1 is_stmt 0 view .LVU223
 776 0000 08B5     		push	{r3, lr}
 777              	.LCFI6:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 3, -8
 780              		.cfi_offset 14, -4
 781              	.LVL57:
 782              	.L63:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 783              		.loc 1 3337 2 is_stmt 1 view .LVU224
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 784              		.loc 1 3345 64 view .LVU225
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 785              		.loc 1 3347 2 view .LVU226
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 786              		.loc 1 3351 3 view .LVU227
 787 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 788              	.LVL58:
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 789              		.loc 1 3374 4 view .LVU228
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 790              		.loc 1 3374 8 is_stmt 0 view .LVU229
 791 0006 074B     		ldr	r3, .L66
 792 0008 1B68     		ldr	r3, [r3]
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 793              		.loc 1 3374 6 view .LVU230
 794 000a 012B     		cmp	r3, #1
 795 000c F9D9     		bls	.L63
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796              		.loc 1 3376 5 is_stmt 1 view .LVU231
 797 000e 4FF0E023 		mov	r3, #-536813568
 798 0012 4FF08052 		mov	r2, #268435456
ARM GAS  /tmp/ccODOtJH.s 			page 90


 799 0016 C3F8042D 		str	r2, [r3, #3332]
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800              		.loc 1 3376 5 view .LVU232
 801              		.syntax unified
 802              	@ 3376 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 803 001a BFF34F8F 		dsb
 804              	@ 0 "" 2
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 805              		.loc 1 3376 5 view .LVU233
 806              	@ 3376 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 807 001e BFF36F8F 		isb
 808              	@ 0 "" 2
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 809              		.loc 1 3376 16 view .LVU234
 810              		.thumb
 811              		.syntax unified
 812 0022 EEE7     		b	.L63
 813              	.L67:
 814              		.align	2
 815              	.L66:
 816 0024 00000000 		.word	.LANCHOR4
 817              		.cfi_endproc
 818              	.LFE36:
 820              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 821              		.align	1
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu fpv4-sp-d16
 827              	prvAddCurrentTaskToDelayedList:
 828              	.LVL59:
 829              	.LFB54:
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 91


3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccODOtJH.s 			page 92


3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
ARM GAS  /tmp/ccODOtJH.s 			page 93


4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccODOtJH.s 			page 94


4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
ARM GAS  /tmp/ccODOtJH.s 			page 95


4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccODOtJH.s 			page 96


4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 97


4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
ARM GAS  /tmp/ccODOtJH.s 			page 98


4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccODOtJH.s 			page 99


4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
ARM GAS  /tmp/ccODOtJH.s 			page 100


4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccODOtJH.s 			page 101


4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
ARM GAS  /tmp/ccODOtJH.s 			page 102


4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
ARM GAS  /tmp/ccODOtJH.s 			page 103


4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/ccODOtJH.s 			page 104


4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccODOtJH.s 			page 105


4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/ccODOtJH.s 			page 106


4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
ARM GAS  /tmp/ccODOtJH.s 			page 107


4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
ARM GAS  /tmp/ccODOtJH.s 			page 108


4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
ARM GAS  /tmp/ccODOtJH.s 			page 109


4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccODOtJH.s 			page 110


5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 111


5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTaskGetIdleRunTimeCounter( void )
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 830              		.loc 1 5082 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		.loc 1 5082 1 is_stmt 0 view .LVU236
 835 0000 70B5     		push	{r4, r5, r6, lr}
 836              	.LCFI7:
 837              		.cfi_def_cfa_offset 16
 838              		.cfi_offset 4, -16
 839              		.cfi_offset 5, -12
 840              		.cfi_offset 6, -8
 841              		.cfi_offset 14, -4
 842 0002 0446     		mov	r4, r0
 843 0004 0D46     		mov	r5, r1
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 844              		.loc 1 5083 1 is_stmt 1 view .LVU237
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 845              		.loc 1 5084 1 view .LVU238
 846              		.loc 1 5084 18 is_stmt 0 view .LVU239
 847 0006 1D4B     		ldr	r3, .L75
 848 0008 1E68     		ldr	r6, [r3]
 849              	.LVL60:
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 850              		.loc 1 5097 2 is_stmt 1 view .LVU240
 851              		.loc 1 5097 35 is_stmt 0 view .LVU241
 852 000a 1D4B     		ldr	r3, .L75+4
 853 000c 1868     		ldr	r0, [r3]
 854              	.LVL61:
 855              		.loc 1 5097 6 view .LVU242
ARM GAS  /tmp/ccODOtJH.s 			page 112


 856 000e 0430     		adds	r0, r0, #4
 857 0010 FFF7FEFF 		bl	uxListRemove
 858              	.LVL62:
 859              		.loc 1 5097 4 view .LVU243
 860 0014 50B9     		cbnz	r0, .L69
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 861              		.loc 1 5101 3 is_stmt 1 view .LVU244
 862 0016 1A4B     		ldr	r3, .L75+4
 863 0018 1B68     		ldr	r3, [r3]
 864 001a DA6A     		ldr	r2, [r3, #44]
 865 001c 0123     		movs	r3, #1
 866 001e 03FA02F2 		lsl	r2, r3, r2
 867 0022 1849     		ldr	r1, .L75+8
 868 0024 0B68     		ldr	r3, [r1]
 869 0026 23EA0203 		bic	r3, r3, r2
 870 002a 0B60     		str	r3, [r1]
 871              	.L69:
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 872              		.loc 1 5105 27 view .LVU245
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 873              		.loc 1 5110 3 view .LVU246
 874              		.loc 1 5110 5 is_stmt 0 view .LVU247
 875 002c B4F1FF3F 		cmp	r4, #-1
 876 0030 0DD0     		beq	.L74
 877              	.L70:
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 878              		.loc 1 5122 4 is_stmt 1 view .LVU248
 879              		.loc 1 5122 16 is_stmt 0 view .LVU249
 880 0032 3444     		add	r4, r4, r6
 881              	.LVL63:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 882              		.loc 1 5125 4 is_stmt 1 view .LVU250
 883 0034 124B     		ldr	r3, .L75+4
 884 0036 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccODOtJH.s 			page 113


 885 0038 5C60     		str	r4, [r3, #4]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 886              		.loc 1 5127 4 view .LVU251
 887              		.loc 1 5127 6 is_stmt 0 view .LVU252
 888 003a A642     		cmp	r6, r4
 889 003c 10D9     		bls	.L72
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 890              		.loc 1 5131 5 is_stmt 1 view .LVU253
 891 003e 124B     		ldr	r3, .L75+12
 892 0040 1868     		ldr	r0, [r3]
 893              		.loc 1 5131 60 is_stmt 0 view .LVU254
 894 0042 0F4B     		ldr	r3, .L75+4
 895 0044 1968     		ldr	r1, [r3]
 896              		.loc 1 5131 5 view .LVU255
 897 0046 0431     		adds	r1, r1, #4
 898 0048 FFF7FEFF 		bl	vListInsert
 899              	.LVL64:
 900              	.L68:
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
ARM GAS  /tmp/ccODOtJH.s 			page 114


5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 901              		.loc 1 5190 1 view .LVU256
 902 004c 70BD     		pop	{r4, r5, r6, pc}
 903              	.LVL65:
 904              	.L74:
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 905              		.loc 1 5110 41 discriminator 1 view .LVU257
 906 004e 002D     		cmp	r5, #0
 907 0050 EFD0     		beq	.L70
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 908              		.loc 1 5115 4 is_stmt 1 view .LVU258
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 909              		.loc 1 5115 56 is_stmt 0 view .LVU259
 910 0052 0B4B     		ldr	r3, .L75+4
 911 0054 1968     		ldr	r1, [r3]
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 912              		.loc 1 5115 4 view .LVU260
 913 0056 0431     		adds	r1, r1, #4
 914 0058 0C48     		ldr	r0, .L75+16
 915 005a FFF7FEFF 		bl	vListInsertEnd
 916              	.LVL66:
 917 005e F5E7     		b	.L68
 918              	.LVL67:
 919              	.L72:
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 920              		.loc 1 5137 5 is_stmt 1 view .LVU261
 921 0060 0B4B     		ldr	r3, .L75+20
 922 0062 1868     		ldr	r0, [r3]
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 923              		.loc 1 5137 52 is_stmt 0 view .LVU262
 924 0064 064B     		ldr	r3, .L75+4
 925 0066 1968     		ldr	r1, [r3]
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 926              		.loc 1 5137 5 view .LVU263
ARM GAS  /tmp/ccODOtJH.s 			page 115


 927 0068 0431     		adds	r1, r1, #4
 928 006a FFF7FEFF 		bl	vListInsert
 929              	.LVL68:
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 930              		.loc 1 5142 5 is_stmt 1 view .LVU264
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 931              		.loc 1 5142 21 is_stmt 0 view .LVU265
 932 006e 094B     		ldr	r3, .L75+24
 933 0070 1B68     		ldr	r3, [r3]
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 934              		.loc 1 5142 7 view .LVU266
 935 0072 A342     		cmp	r3, r4
 936 0074 EAD9     		bls	.L68
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 937              		.loc 1 5144 6 is_stmt 1 view .LVU267
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 938              		.loc 1 5144 27 is_stmt 0 view .LVU268
 939 0076 074B     		ldr	r3, .L75+24
 940 0078 1C60     		str	r4, [r3]
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 941              		.loc 1 5148 30 is_stmt 1 view .LVU269
 942              		.loc 1 5190 1 is_stmt 0 view .LVU270
 943 007a E7E7     		b	.L68
 944              	.L76:
 945              		.align	2
 946              	.L75:
 947 007c 00000000 		.word	.LANCHOR15
 948 0080 00000000 		.word	.LANCHOR10
 949 0084 00000000 		.word	.LANCHOR13
 950 0088 00000000 		.word	.LANCHOR8
 951 008c 00000000 		.word	.LANCHOR0
 952 0090 00000000 		.word	.LANCHOR2
 953 0094 00000000 		.word	.LANCHOR3
 954              		.cfi_endproc
 955              	.LFE54:
 957              		.section	.text.xTaskCreateStatic,"ax",%progbits
 958              		.align	1
 959              		.global	xTaskCreateStatic
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu fpv4-sp-d16
 965              	xTaskCreateStatic:
 966              	.LVL69:
 967              	.LFB5:
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 968              		.loc 1 585 2 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 12, pretend = 0, frame = 8
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 972              		.loc 1 585 2 is_stmt 0 view .LVU272
 973 0000 30B5     		push	{r4, r5, lr}
 974              	.LCFI8:
 975              		.cfi_def_cfa_offset 12
 976              		.cfi_offset 4, -12
 977              		.cfi_offset 5, -8
ARM GAS  /tmp/ccODOtJH.s 			page 116


 978              		.cfi_offset 14, -4
 979 0002 87B0     		sub	sp, sp, #28
 980              	.LCFI9:
 981              		.cfi_def_cfa_offset 40
 982 0004 0B9C     		ldr	r4, [sp, #44]
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 983              		.loc 1 586 2 is_stmt 1 view .LVU273
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 984              		.loc 1 587 2 view .LVU274
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 985              		.loc 1 589 3 view .LVU275
 986 0006 7CB1     		cbz	r4, .L85
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 987              		.loc 1 589 41 discriminator 2 view .LVU276
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988              		.loc 1 590 3 discriminator 2 view .LVU277
 989 0008 0C9D     		ldr	r5, [sp, #48]
 990 000a B5B1     		cbz	r5, .L86
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 991              		.loc 1 590 39 discriminator 2 view .LVU278
 992              	.LBB114:
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 993              		.loc 1 597 4 discriminator 2 view .LVU279
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 994              		.loc 1 597 20 is_stmt 0 discriminator 2 view .LVU280
 995 000c 5425     		movs	r5, #84
 996 000e 0495     		str	r5, [sp, #16]
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 997              		.loc 1 598 4 is_stmt 1 discriminator 2 view .LVU281
 998 0010 049D     		ldr	r5, [sp, #16]
 999 0012 542D     		cmp	r5, #84
 1000 0014 1AD0     		beq	.L82
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1001              		.loc 1 598 4 view .LVU282
 1002              	.LBB115:
 1003              	.LBI115:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1004              		.loc 2 191 30 view .LVU283
 1005              	.LBB116:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1006              		.loc 2 193 1 view .LVU284
 1007              		.loc 2 195 2 view .LVU285
 1008              		.syntax unified
 1009              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1010 0016 4FF05003 			mov r3, #80												
 1011 001a 83F31188 		msr basepri, r3											
 1012 001e BFF36F8F 		isb														
 1013 0022 BFF34F8F 		dsb														
 1014              	
 1015              	@ 0 "" 2
 1016              	.LVL70:
 1017              		.thumb
 1018              		.syntax unified
 1019              	.L83:
 1020              		.loc 2 195 2 is_stmt 0 view .LVU286
 1021              	.LBE116:
 1022              	.LBE115:
ARM GAS  /tmp/ccODOtJH.s 			page 117


 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1023              		.loc 1 598 4 is_stmt 1 discriminator 3 view .LVU287
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1024              		.loc 1 598 4 discriminator 3 view .LVU288
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1025              		.loc 1 598 4 discriminator 3 view .LVU289
 1026 0026 FEE7     		b	.L83
 1027              	.LVL71:
 1028              	.L85:
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1029              		.loc 1 598 4 is_stmt 0 discriminator 3 view .LVU290
 1030              	.LBE114:
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1031              		.loc 1 589 3 is_stmt 1 view .LVU291
 1032              	.LBB117:
 1033              	.LBI117:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1034              		.loc 2 191 30 view .LVU292
 1035              	.LBB118:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1036              		.loc 2 193 1 view .LVU293
 1037              		.loc 2 195 2 view .LVU294
 1038              		.syntax unified
 1039              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1040 0028 4FF05003 			mov r3, #80												
 1041 002c 83F31188 		msr basepri, r3											
 1042 0030 BFF36F8F 		isb														
 1043 0034 BFF34F8F 		dsb														
 1044              	
 1045              	@ 0 "" 2
 1046              	.LVL72:
 1047              		.thumb
 1048              		.syntax unified
 1049              	.L79:
 1050              		.loc 2 195 2 is_stmt 0 view .LVU295
 1051              	.LBE118:
 1052              	.LBE117:
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1053              		.loc 1 589 3 is_stmt 1 discriminator 1 view .LVU296
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1054              		.loc 1 589 3 discriminator 1 view .LVU297
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1055              		.loc 1 589 3 discriminator 1 view .LVU298
 1056 0038 FEE7     		b	.L79
 1057              	.LVL73:
 1058              	.L86:
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1059              		.loc 1 590 3 view .LVU299
 1060              	.LBB119:
 1061              	.LBI119:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1062              		.loc 2 191 30 view .LVU300
 1063              	.LBB120:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1064              		.loc 2 193 1 view .LVU301
 1065              		.loc 2 195 2 view .LVU302
 1066              		.syntax unified
ARM GAS  /tmp/ccODOtJH.s 			page 118


 1067              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1068 003a 4FF05003 			mov r3, #80												
 1069 003e 83F31188 		msr basepri, r3											
 1070 0042 BFF36F8F 		isb														
 1071 0046 BFF34F8F 		dsb														
 1072              	
 1073              	@ 0 "" 2
 1074              	.LVL74:
 1075              		.thumb
 1076              		.syntax unified
 1077              	.L81:
 1078              		.loc 2 195 2 is_stmt 0 view .LVU303
 1079              	.LBE120:
 1080              	.LBE119:
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1081              		.loc 1 590 3 is_stmt 1 discriminator 2 view .LVU304
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1082              		.loc 1 590 3 discriminator 2 view .LVU305
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1083              		.loc 1 590 3 discriminator 2 view .LVU306
 1084 004a FEE7     		b	.L81
 1085              	.LVL75:
 1086              	.L82:
 1087              	.LBB121:
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1088              		.loc 1 598 44 discriminator 2 view .LVU307
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1089              		.loc 1 599 4 discriminator 2 view .LVU308
 1090 004c 049D     		ldr	r5, [sp, #16]
 1091              	.LBE121:
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1092              		.loc 1 604 3 discriminator 2 view .LVU309
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1093              		.loc 1 608 4 discriminator 2 view .LVU310
 1094              	.LVL76:
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1095              		.loc 1 609 4 discriminator 2 view .LVU311
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1096              		.loc 1 609 22 is_stmt 0 discriminator 2 view .LVU312
 1097 004e 0C9D     		ldr	r5, [sp, #48]
 1098 0050 2C63     		str	r4, [r5, #48]
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1099              		.loc 1 615 5 is_stmt 1 discriminator 2 view .LVU313
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1100              		.loc 1 615 37 is_stmt 0 discriminator 2 view .LVU314
 1101 0052 0224     		movs	r4, #2
 1102 0054 85F85140 		strb	r4, [r5, #81]
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1103              		.loc 1 619 4 is_stmt 1 discriminator 2 view .LVU315
 1104 0058 0024     		movs	r4, #0
 1105 005a 0394     		str	r4, [sp, #12]
 1106 005c 0295     		str	r5, [sp, #8]
 1107 005e 05AC     		add	r4, sp, #20
 1108 0060 0194     		str	r4, [sp, #4]
 1109 0062 0A9C     		ldr	r4, [sp, #40]
 1110 0064 0094     		str	r4, [sp]
 1111 0066 FFF7FEFF 		bl	prvInitialiseNewTask
ARM GAS  /tmp/ccODOtJH.s 			page 119


 1112              	.LVL77:
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1113              		.loc 1 620 4 discriminator 2 view .LVU316
 1114 006a 0C98     		ldr	r0, [sp, #48]
 1115 006c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1116              	.LVL78:
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1117              		.loc 1 627 3 discriminator 2 view .LVU317
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1118              		.loc 1 628 2 is_stmt 0 discriminator 2 view .LVU318
 1119 0070 0598     		ldr	r0, [sp, #20]
 1120 0072 07B0     		add	sp, sp, #28
 1121              	.LCFI10:
 1122              		.cfi_def_cfa_offset 12
 1123              		@ sp needed
 1124 0074 30BD     		pop	{r4, r5, pc}
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1125              		.loc 1 628 2 discriminator 2 view .LVU319
 1126              		.cfi_endproc
 1127              	.LFE5:
 1129              		.section	.text.xTaskCreate,"ax",%progbits
 1130              		.align	1
 1131              		.global	xTaskCreate
 1132              		.syntax unified
 1133              		.thumb
 1134              		.thumb_func
 1135              		.fpu fpv4-sp-d16
 1137              	xTaskCreate:
 1138              	.LVL79:
 1139              	.LFB6:
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1140              		.loc 1 736 2 is_stmt 1 view -0
 1141              		.cfi_startproc
 1142              		@ args = 8, pretend = 0, frame = 0
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1144              		.loc 1 736 2 is_stmt 0 view .LVU321
 1145 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1146              	.LCFI11:
 1147              		.cfi_def_cfa_offset 28
 1148              		.cfi_offset 4, -28
 1149              		.cfi_offset 5, -24
 1150              		.cfi_offset 6, -20
 1151              		.cfi_offset 7, -16
 1152              		.cfi_offset 8, -12
 1153              		.cfi_offset 9, -8
 1154              		.cfi_offset 14, -4
 1155 0004 85B0     		sub	sp, sp, #20
 1156              	.LCFI12:
 1157              		.cfi_def_cfa_offset 48
 1158 0006 0746     		mov	r7, r0
 1159 0008 8846     		mov	r8, r1
 1160 000a 1446     		mov	r4, r2
 1161 000c 1E46     		mov	r6, r3
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1162              		.loc 1 737 2 is_stmt 1 view .LVU322
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 120


 1163              		.loc 1 738 2 view .LVU323
 1164              	.LBB122:
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1165              		.loc 1 767 3 view .LVU324
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1166              		.loc 1 770 4 view .LVU325
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1167              		.loc 1 770 14 is_stmt 0 view .LVU326
 1168 000e 9000     		lsls	r0, r2, #2
 1169              	.LVL80:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1170              		.loc 1 770 14 view .LVU327
 1171 0010 FFF7FEFF 		bl	pvPortMalloc
 1172              	.LVL81:
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1173              		.loc 1 772 4 is_stmt 1 view .LVU328
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1174              		.loc 1 772 6 is_stmt 0 view .LVU329
 1175 0014 00B3     		cbz	r0, .L91
 1176 0016 8146     		mov	r9, r0
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1177              		.loc 1 775 5 is_stmt 1 view .LVU330
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1178              		.loc 1 775 28 is_stmt 0 view .LVU331
 1179 0018 5420     		movs	r0, #84
 1180              	.LVL82:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1181              		.loc 1 775 28 view .LVU332
 1182 001a FFF7FEFF 		bl	pvPortMalloc
 1183              	.LVL83:
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1184              		.loc 1 777 5 is_stmt 1 view .LVU333
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1185              		.loc 1 777 7 is_stmt 0 view .LVU334
 1186 001e 0546     		mov	r5, r0
 1187 0020 B0B1     		cbz	r0, .L89
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1188              		.loc 1 780 6 is_stmt 1 view .LVU335
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1189              		.loc 1 780 24 is_stmt 0 view .LVU336
 1190 0022 C0F83090 		str	r9, [r0, #48]
 1191              	.LVL84:
 1192              	.L90:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1193              		.loc 1 780 24 view .LVU337
 1194              	.LBE122:
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1195              		.loc 1 796 3 is_stmt 1 view .LVU338
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1196              		.loc 1 796 5 is_stmt 0 view .LVU339
 1197 0026 E5B1     		cbz	r5, .L92
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1198              		.loc 1 802 5 is_stmt 1 view .LVU340
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1199              		.loc 1 802 37 is_stmt 0 view .LVU341
 1200 0028 0023     		movs	r3, #0
 1201 002a 85F85130 		strb	r3, [r5, #81]
ARM GAS  /tmp/ccODOtJH.s 			page 121


 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1202              		.loc 1 806 4 is_stmt 1 view .LVU342
 1203 002e 0393     		str	r3, [sp, #12]
 1204 0030 0295     		str	r5, [sp, #8]
 1205 0032 0D9B     		ldr	r3, [sp, #52]
 1206 0034 0193     		str	r3, [sp, #4]
 1207 0036 0C9B     		ldr	r3, [sp, #48]
 1208 0038 0093     		str	r3, [sp]
 1209 003a 3346     		mov	r3, r6
 1210 003c 2246     		mov	r2, r4
 1211 003e 4146     		mov	r1, r8
 1212 0040 3846     		mov	r0, r7
 1213 0042 FFF7FEFF 		bl	prvInitialiseNewTask
 1214              	.LVL85:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1215              		.loc 1 807 4 view .LVU343
 1216 0046 2846     		mov	r0, r5
 1217 0048 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1218              	.LVL86:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1219              		.loc 1 808 4 view .LVU344
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1220              		.loc 1 808 12 is_stmt 0 view .LVU345
 1221 004c 0120     		movs	r0, #1
 1222 004e 05E0     		b	.L87
 1223              	.LVL87:
 1224              	.L89:
 1225              	.LBB123:
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1226              		.loc 1 786 6 is_stmt 1 view .LVU346
 1227 0050 4846     		mov	r0, r9
 1228              	.LVL88:
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1229              		.loc 1 786 6 is_stmt 0 view .LVU347
 1230 0052 FFF7FEFF 		bl	vPortFree
 1231              	.LVL89:
 1232 0056 E6E7     		b	.L90
 1233              	.LVL90:
 1234              	.L91:
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1235              		.loc 1 786 6 view .LVU348
 1236              	.LBE123:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1237              		.loc 1 812 12 view .LVU349
 1238 0058 4FF0FF30 		mov	r0, #-1
 1239              	.LVL91:
 1240              	.L87:
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1241              		.loc 1 816 2 view .LVU350
 1242 005c 05B0     		add	sp, sp, #20
 1243              	.LCFI13:
 1244              		.cfi_remember_state
 1245              		.cfi_def_cfa_offset 28
 1246              		@ sp needed
 1247 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1248              	.LVL92:
 1249              	.L92:
ARM GAS  /tmp/ccODOtJH.s 			page 122


 1250              	.LCFI14:
 1251              		.cfi_restore_state
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1252              		.loc 1 812 12 view .LVU351
 1253 0062 4FF0FF30 		mov	r0, #-1
 1254              	.LVL93:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1255              		.loc 1 815 3 is_stmt 1 view .LVU352
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1256              		.loc 1 815 10 is_stmt 0 view .LVU353
 1257 0066 F9E7     		b	.L87
 1258              		.cfi_endproc
 1259              	.LFE6:
 1261              		.section	.text.vTaskDelete,"ax",%progbits
 1262              		.align	1
 1263              		.global	vTaskDelete
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu fpv4-sp-d16
 1269              	vTaskDelete:
 1270              	.LVL94:
 1271              	.LFB9:
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1272              		.loc 1 1158 2 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 0
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1276              		.loc 1 1158 2 is_stmt 0 view .LVU355
 1277 0000 38B5     		push	{r3, r4, r5, lr}
 1278              	.LCFI15:
 1279              		.cfi_def_cfa_offset 16
 1280              		.cfi_offset 3, -16
 1281              		.cfi_offset 4, -12
 1282              		.cfi_offset 5, -8
 1283              		.cfi_offset 14, -4
 1284 0002 0446     		mov	r4, r0
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1285              		.loc 1 1159 2 is_stmt 1 view .LVU356
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1286              		.loc 1 1161 3 view .LVU357
 1287 0004 FFF7FEFF 		bl	vPortEnterCritical
 1288              	.LVL95:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1289              		.loc 1 1165 4 view .LVU358
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1290              		.loc 1 1165 12 is_stmt 0 view .LVU359
 1291 0008 002C     		cmp	r4, #0
 1292 000a 33D0     		beq	.L104
 1293              	.LVL96:
 1294              	.L95:
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1295              		.loc 1 1168 4 is_stmt 1 discriminator 4 view .LVU360
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1296              		.loc 1 1168 8 is_stmt 0 discriminator 4 view .LVU361
 1297 000c 251D     		adds	r5, r4, #4
ARM GAS  /tmp/ccODOtJH.s 			page 123


 1298 000e 2846     		mov	r0, r5
 1299 0010 FFF7FEFF 		bl	uxListRemove
 1300              	.LVL97:
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1301              		.loc 1 1168 6 discriminator 4 view .LVU362
 1302 0014 68B9     		cbnz	r0, .L96
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1303              		.loc 1 1170 5 is_stmt 1 view .LVU363
 1304 0016 E26A     		ldr	r2, [r4, #44]
 1305 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1306 001c 9B00     		lsls	r3, r3, #2
 1307 001e 2749     		ldr	r1, .L107
 1308 0020 CB58     		ldr	r3, [r1, r3]
 1309 0022 33B9     		cbnz	r3, .L96
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1310              		.loc 1 1170 5 discriminator 1 view .LVU364
 1311 0024 0123     		movs	r3, #1
 1312 0026 9340     		lsls	r3, r3, r2
 1313 0028 2549     		ldr	r1, .L107+4
 1314 002a 0A68     		ldr	r2, [r1]
 1315 002c 22EA0302 		bic	r2, r2, r3
 1316 0030 0A60     		str	r2, [r1]
 1317              	.L96:
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1318              		.loc 1 1174 29 view .LVU365
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1319              		.loc 1 1178 4 view .LVU366
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1320              		.loc 1 1178 8 is_stmt 0 view .LVU367
 1321 0032 A36A     		ldr	r3, [r4, #40]
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1322              		.loc 1 1178 6 view .LVU368
 1323 0034 1BB1     		cbz	r3, .L97
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1324              		.loc 1 1180 5 is_stmt 1 view .LVU369
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1325              		.loc 1 1180 14 is_stmt 0 view .LVU370
 1326 0036 04F11800 		add	r0, r4, #24
 1327 003a FFF7FEFF 		bl	uxListRemove
 1328              	.LVL98:
 1329              	.L97:
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1330              		.loc 1 1184 29 is_stmt 1 view .LVU371
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1331              		.loc 1 1191 4 view .LVU372
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1332              		.loc 1 1191 16 is_stmt 0 view .LVU373
 1333 003e 214A     		ldr	r2, .L107+8
 1334 0040 1368     		ldr	r3, [r2]
 1335 0042 0133     		adds	r3, r3, #1
 1336 0044 1360     		str	r3, [r2]
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1337              		.loc 1 1193 4 is_stmt 1 view .LVU374
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1338              		.loc 1 1193 14 is_stmt 0 view .LVU375
 1339 0046 204B     		ldr	r3, .L107+12
 1340 0048 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccODOtJH.s 			page 124


1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1341              		.loc 1 1193 6 view .LVU376
 1342 004a A342     		cmp	r3, r4
 1343 004c 15D0     		beq	.L105
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1344              		.loc 1 1216 5 is_stmt 1 view .LVU377
 1345 004e 1F4A     		ldr	r2, .L107+16
 1346 0050 1368     		ldr	r3, [r2]
 1347 0052 013B     		subs	r3, r3, #1
 1348 0054 1360     		str	r3, [r2]
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1349              		.loc 1 1217 5 view .LVU378
 1350 0056 2046     		mov	r0, r4
 1351 0058 FFF7FEFF 		bl	prvDeleteTCB
 1352              	.LVL99:
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1353              		.loc 1 1221 5 view .LVU379
 1354 005c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1355              	.LVL100:
 1356              	.L99:
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1357              		.loc 1 1224 29 view .LVU380
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1358              		.loc 1 1226 3 view .LVU381
 1359 0060 FFF7FEFF 		bl	vPortExitCritical
 1360              	.LVL101:
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1361              		.loc 1 1230 3 view .LVU382
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1362              		.loc 1 1230 25 is_stmt 0 view .LVU383
 1363 0064 1A4B     		ldr	r3, .L107+20
 1364 0066 1B68     		ldr	r3, [r3]
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1365              		.loc 1 1230 5 view .LVU384
 1366 0068 1BB1     		cbz	r3, .L94
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1367              		.loc 1 1232 4 is_stmt 1 view .LVU385
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1368              		.loc 1 1232 14 is_stmt 0 view .LVU386
 1369 006a 174B     		ldr	r3, .L107+12
 1370 006c 1B68     		ldr	r3, [r3]
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1371              		.loc 1 1232 6 view .LVU387
 1372 006e A342     		cmp	r3, r4
 1373 0070 0CD0     		beq	.L106
 1374              	.L94:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1375              		.loc 1 1242 2 view .LVU388
 1376 0072 38BD     		pop	{r3, r4, r5, pc}
 1377              	.LVL102:
 1378              	.L104:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1379              		.loc 1 1165 12 discriminator 1 view .LVU389
 1380 0074 144B     		ldr	r3, .L107+12
 1381 0076 1C68     		ldr	r4, [r3]
 1382              	.LVL103:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 125


 1383              		.loc 1 1165 12 discriminator 1 view .LVU390
 1384 0078 C8E7     		b	.L95
 1385              	.LVL104:
 1386              	.L105:
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1387              		.loc 1 1200 5 is_stmt 1 view .LVU391
 1388 007a 2946     		mov	r1, r5
 1389 007c 1548     		ldr	r0, .L107+24
 1390 007e FFF7FEFF 		bl	vListInsertEnd
 1391              	.LVL105:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1392              		.loc 1 1205 5 view .LVU392
 1393 0082 154A     		ldr	r2, .L107+28
 1394 0084 1368     		ldr	r3, [r2]
 1395 0086 0133     		adds	r3, r3, #1
 1396 0088 1360     		str	r3, [r2]
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1397              		.loc 1 1212 54 view .LVU393
 1398 008a E9E7     		b	.L99
 1399              	.L106:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1400              		.loc 1 1234 5 view .LVU394
 1401 008c 134B     		ldr	r3, .L107+32
 1402 008e 1B68     		ldr	r3, [r3]
 1403 0090 43B1     		cbz	r3, .L101
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1404              		.loc 1 1234 5 view .LVU395
 1405              	.LBB124:
 1406              	.LBI124:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1407              		.loc 2 191 30 view .LVU396
 1408              	.LBB125:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1409              		.loc 2 193 1 view .LVU397
 1410              		.loc 2 195 2 view .LVU398
 1411              		.syntax unified
 1412              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1413 0092 4FF05003 			mov r3, #80												
 1414 0096 83F31188 		msr basepri, r3											
 1415 009a BFF36F8F 		isb														
 1416 009e BFF34F8F 		dsb														
 1417              	
 1418              	@ 0 "" 2
 1419              	.LVL106:
 1420              		.thumb
 1421              		.syntax unified
 1422              	.L102:
 1423              		.loc 2 195 2 is_stmt 0 view .LVU399
 1424              	.LBE125:
 1425              	.LBE124:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1426              		.loc 1 1234 5 is_stmt 1 discriminator 1 view .LVU400
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1427              		.loc 1 1234 5 discriminator 1 view .LVU401
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1428              		.loc 1 1234 5 discriminator 1 view .LVU402
 1429 00a2 FEE7     		b	.L102
ARM GAS  /tmp/ccODOtJH.s 			page 126


 1430              	.L101:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1431              		.loc 1 1234 46 discriminator 2 view .LVU403
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1432              		.loc 1 1235 5 discriminator 2 view .LVU404
 1433 00a4 4FF0E023 		mov	r3, #-536813568
 1434 00a8 4FF08052 		mov	r2, #268435456
 1435 00ac C3F8042D 		str	r2, [r3, #3332]
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1436              		.loc 1 1235 5 discriminator 2 view .LVU405
 1437              		.syntax unified
 1438              	@ 1235 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1439 00b0 BFF34F8F 		dsb
 1440              	@ 0 "" 2
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1441              		.loc 1 1235 5 discriminator 2 view .LVU406
 1442              	@ 1235 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1443 00b4 BFF36F8F 		isb
 1444              	@ 0 "" 2
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1445              		.loc 1 1235 27 discriminator 2 view .LVU407
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1446              		.loc 1 1239 29 discriminator 2 view .LVU408
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1447              		.loc 1 1242 2 is_stmt 0 discriminator 2 view .LVU409
 1448              		.thumb
 1449              		.syntax unified
 1450 00b8 DBE7     		b	.L94
 1451              	.L108:
 1452 00ba 00BF     		.align	2
 1453              	.L107:
 1454 00bc 00000000 		.word	.LANCHOR4
 1455 00c0 00000000 		.word	.LANCHOR13
 1456 00c4 00000000 		.word	.LANCHOR12
 1457 00c8 00000000 		.word	.LANCHOR10
 1458 00cc 00000000 		.word	.LANCHOR9
 1459 00d0 00000000 		.word	.LANCHOR11
 1460 00d4 00000000 		.word	.LANCHOR7
 1461 00d8 00000000 		.word	.LANCHOR14
 1462 00dc 00000000 		.word	.LANCHOR16
 1463              		.cfi_endproc
 1464              	.LFE9:
 1466              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1467              		.align	1
 1468              		.global	uxTaskPriorityGet
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1472              		.fpu fpv4-sp-d16
 1474              	uxTaskPriorityGet:
 1475              	.LVL107:
 1476              	.LFB11:
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1477              		.loc 1 1471 2 is_stmt 1 view -0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccODOtJH.s 			page 127


1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1481              		.loc 1 1471 2 is_stmt 0 view .LVU411
 1482 0000 10B5     		push	{r4, lr}
 1483              	.LCFI16:
 1484              		.cfi_def_cfa_offset 8
 1485              		.cfi_offset 4, -8
 1486              		.cfi_offset 14, -4
 1487 0002 0446     		mov	r4, r0
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1488              		.loc 1 1472 2 is_stmt 1 view .LVU412
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1489              		.loc 1 1473 2 view .LVU413
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1490              		.loc 1 1475 3 view .LVU414
 1491 0004 FFF7FEFF 		bl	vPortEnterCritical
 1492              	.LVL108:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1493              		.loc 1 1479 4 view .LVU415
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1494              		.loc 1 1479 12 is_stmt 0 view .LVU416
 1495 0008 24B1     		cbz	r4, .L112
 1496              	.LVL109:
 1497              	.L110:
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1498              		.loc 1 1480 4 is_stmt 1 discriminator 4 view .LVU417
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1499              		.loc 1 1480 13 is_stmt 0 discriminator 4 view .LVU418
 1500 000a E46A     		ldr	r4, [r4, #44]
 1501              	.LVL110:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1502              		.loc 1 1482 3 is_stmt 1 discriminator 4 view .LVU419
 1503 000c FFF7FEFF 		bl	vPortExitCritical
 1504              	.LVL111:
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1505              		.loc 1 1484 3 discriminator 4 view .LVU420
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1506              		.loc 1 1485 2 is_stmt 0 discriminator 4 view .LVU421
 1507 0010 2046     		mov	r0, r4
 1508 0012 10BD     		pop	{r4, pc}
 1509              	.LVL112:
 1510              	.L112:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1511              		.loc 1 1479 12 discriminator 1 view .LVU422
 1512 0014 014B     		ldr	r3, .L113
 1513 0016 1C68     		ldr	r4, [r3]
 1514              	.LVL113:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1515              		.loc 1 1479 12 discriminator 1 view .LVU423
 1516 0018 F7E7     		b	.L110
 1517              	.L114:
 1518 001a 00BF     		.align	2
 1519              	.L113:
 1520 001c 00000000 		.word	.LANCHOR10
 1521              		.cfi_endproc
 1522              	.LFE11:
 1524              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1525              		.align	1
ARM GAS  /tmp/ccODOtJH.s 			page 128


 1526              		.global	uxTaskPriorityGetFromISR
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1530              		.fpu fpv4-sp-d16
 1532              	uxTaskPriorityGetFromISR:
 1533              	.LVL114:
 1534              	.LFB12:
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1535              		.loc 1 1493 2 is_stmt 1 view -0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1539              		.loc 1 1493 2 is_stmt 0 view .LVU425
 1540 0000 10B5     		push	{r4, lr}
 1541              	.LCFI17:
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 4, -8
 1544              		.cfi_offset 14, -4
 1545 0002 0446     		mov	r4, r0
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1546              		.loc 1 1494 2 is_stmt 1 view .LVU426
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1547              		.loc 1 1495 2 view .LVU427
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1548              		.loc 1 1513 3 view .LVU428
 1549 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1550              	.LVL115:
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1551              		.loc 1 1515 3 view .LVU429
 1552              	.LBB126:
 1553              	.LBI126:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1554              		.loc 2 207 34 view .LVU430
 1555              	.LBB127:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1556              		.loc 2 209 1 view .LVU431
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1557              		.loc 2 211 2 view .LVU432
 1558              		.syntax unified
 1559              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1560 0008 EFF31183 			mrs r3, basepri											
 1561 000c 4FF05002 		mov r2, #80												
ARM GAS  /tmp/ccODOtJH.s 			page 129


 1562 0010 82F31188 		msr basepri, r2											
 1563 0014 BFF36F8F 		isb														
 1564 0018 BFF34F8F 		dsb														
 1565              	
 1566              	@ 0 "" 2
 1567              	.LVL116:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1568              		.loc 2 223 2 view .LVU433
 1569              		.loc 2 223 2 is_stmt 0 view .LVU434
 1570              		.thumb
 1571              		.syntax unified
 1572              	.LBE127:
 1573              	.LBE126:
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1574              		.loc 1 1519 4 is_stmt 1 view .LVU435
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1575              		.loc 1 1519 12 is_stmt 0 view .LVU436
 1576 001c 1CB1     		cbz	r4, .L118
 1577              	.LVL117:
 1578              	.L116:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1579              		.loc 1 1520 4 is_stmt 1 discriminator 4 view .LVU437
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1580              		.loc 1 1520 13 is_stmt 0 discriminator 4 view .LVU438
 1581 001e E06A     		ldr	r0, [r4, #44]
 1582              	.LVL118:
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1583              		.loc 1 1522 3 is_stmt 1 discriminator 4 view .LVU439
 1584              	.LBB128:
 1585              	.LBI128:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1586              		.loc 2 227 30 discriminator 4 view .LVU440
 1587              	.LBB129:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1588              		.loc 2 229 2 discriminator 4 view .LVU441
 1589              		.syntax unified
 1590              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1591 0020 83F31188 			msr basepri, r3	
 1592              	@ 0 "" 2
 1593              	.LVL119:
 1594              		.loc 2 229 2 is_stmt 0 discriminator 4 view .LVU442
 1595              		.thumb
ARM GAS  /tmp/ccODOtJH.s 			page 130


 1596              		.syntax unified
 1597              	.LBE129:
 1598              	.LBE128:
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1599              		.loc 1 1524 3 is_stmt 1 discriminator 4 view .LVU443
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1600              		.loc 1 1525 2 is_stmt 0 discriminator 4 view .LVU444
 1601 0024 10BD     		pop	{r4, pc}
 1602              	.LVL120:
 1603              	.L118:
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1604              		.loc 1 1519 12 discriminator 1 view .LVU445
 1605 0026 014A     		ldr	r2, .L119
 1606 0028 1468     		ldr	r4, [r2]
 1607              	.LVL121:
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1608              		.loc 1 1519 12 discriminator 1 view .LVU446
 1609 002a F8E7     		b	.L116
 1610              	.L120:
 1611              		.align	2
 1612              	.L119:
 1613 002c 00000000 		.word	.LANCHOR10
 1614              		.cfi_endproc
 1615              	.LFE12:
 1617              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1618              		.align	1
 1619              		.global	vTaskPrioritySet
 1620              		.syntax unified
 1621              		.thumb
 1622              		.thumb_func
 1623              		.fpu fpv4-sp-d16
 1625              	vTaskPrioritySet:
 1626              	.LVL122:
 1627              	.LFB13:
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1628              		.loc 1 1533 2 is_stmt 1 view -0
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 0
 1631              		@ frame_needed = 0, uses_anonymous_args = 0
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1632              		.loc 1 1533 2 is_stmt 0 view .LVU448
 1633 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1634              	.LCFI18:
 1635              		.cfi_def_cfa_offset 24
 1636              		.cfi_offset 3, -24
 1637              		.cfi_offset 4, -20
 1638              		.cfi_offset 5, -16
 1639              		.cfi_offset 6, -12
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1642              		.loc 1 1534 2 is_stmt 1 view .LVU449
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1643              		.loc 1 1535 2 view .LVU450
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1644              		.loc 1 1536 2 view .LVU451
 1645              	.LVL123:
ARM GAS  /tmp/ccODOtJH.s 			page 131


1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1646              		.loc 1 1538 3 view .LVU452
 1647 0002 0629     		cmp	r1, #6
 1648 0004 08D9     		bls	.L122
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1649              		.loc 1 1538 3 view .LVU453
 1650              	.LBB130:
 1651              	.LBI130:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1652              		.loc 2 191 30 view .LVU454
 1653              	.LBB131:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1654              		.loc 2 193 1 view .LVU455
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1655              		.loc 2 195 2 view .LVU456
 1656              		.syntax unified
 1657              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1658 0006 4FF05003 			mov r3, #80												
 1659 000a 83F31188 		msr basepri, r3											
 1660 000e BFF36F8F 		isb														
 1661 0012 BFF34F8F 		dsb														
 1662              	
 1663              	@ 0 "" 2
 1664              	.LVL124:
 1665              		.thumb
 1666              		.syntax unified
 1667              	.L123:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1668              		.loc 2 195 2 is_stmt 0 view .LVU457
 1669              	.LBE131:
 1670              	.LBE130:
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1671              		.loc 1 1538 3 is_stmt 1 discriminator 1 view .LVU458
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1672              		.loc 1 1538 3 discriminator 1 view .LVU459
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1673              		.loc 1 1538 3 discriminator 1 view .LVU460
 1674 0016 FEE7     		b	.L123
 1675              	.L122:
 1676 0018 0546     		mov	r5, r0
 1677 001a 0C46     		mov	r4, r1
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1678              		.loc 1 1538 59 view .LVU461
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1679              		.loc 1 1541 3 view .LVU462
 1680              	.LVL125:
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1681              		.loc 1 1547 28 view .LVU463
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1682              		.loc 1 1550 3 view .LVU464
 1683 001c FFF7FEFF 		bl	vPortEnterCritical
 1684              	.LVL126:
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1685              		.loc 1 1554 4 view .LVU465
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1686              		.loc 1 1554 12 is_stmt 0 view .LVU466
 1687 0020 75B1     		cbz	r5, .L136
ARM GAS  /tmp/ccODOtJH.s 			page 132


 1688              	.LVL127:
 1689              	.L124:
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1690              		.loc 1 1556 50 is_stmt 1 discriminator 4 view .LVU467
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1691              		.loc 1 1560 5 discriminator 4 view .LVU468
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1692              		.loc 1 1560 27 is_stmt 0 discriminator 4 view .LVU469
 1693 0022 6B6C     		ldr	r3, [r5, #68]
 1694              	.LVL128:
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1695              		.loc 1 1568 4 is_stmt 1 discriminator 4 view .LVU470
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1696              		.loc 1 1568 6 is_stmt 0 discriminator 4 view .LVU471
 1697 0024 9C42     		cmp	r4, r3
 1698 0026 30D0     		beq	.L125
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1699              		.loc 1 1572 5 is_stmt 1 view .LVU472
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1700              		.loc 1 1572 7 is_stmt 0 view .LVU473
 1701 0028 0DD9     		bls	.L126
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1702              		.loc 1 1574 6 is_stmt 1 view .LVU474
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1703              		.loc 1 1574 16 is_stmt 0 view .LVU475
 1704 002a 2C4A     		ldr	r2, .L139
 1705 002c 1268     		ldr	r2, [r2]
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1706              		.loc 1 1574 8 view .LVU476
 1707 002e AA42     		cmp	r2, r5
 1708 0030 2ED0     		beq	.L132
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1709              		.loc 1 1579 7 is_stmt 1 view .LVU477
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1710              		.loc 1 1579 40 is_stmt 0 view .LVU478
 1711 0032 2A4A     		ldr	r2, .L139
 1712 0034 1268     		ldr	r2, [r2]
 1713 0036 D26A     		ldr	r2, [r2, #44]
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1714              		.loc 1 1579 9 view .LVU479
 1715 0038 A242     		cmp	r2, r4
 1716 003a 2BD9     		bls	.L133
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1717              		.loc 1 1536 13 view .LVU480
 1718 003c 0027     		movs	r7, #0
 1719 003e 07E0     		b	.L127
 1720              	.LVL129:
 1721              	.L136:
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1722              		.loc 1 1554 12 discriminator 1 view .LVU481
 1723 0040 264B     		ldr	r3, .L139
 1724 0042 1D68     		ldr	r5, [r3]
 1725              	.LVL130:
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1726              		.loc 1 1554 12 discriminator 1 view .LVU482
 1727 0044 EDE7     		b	.L124
 1728              	.LVL131:
ARM GAS  /tmp/ccODOtJH.s 			page 133


 1729              	.L126:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1730              		.loc 1 1595 10 is_stmt 1 view .LVU483
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1731              		.loc 1 1595 20 is_stmt 0 view .LVU484
 1732 0046 254A     		ldr	r2, .L139
 1733 0048 1268     		ldr	r2, [r2]
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1734              		.loc 1 1595 12 view .LVU485
 1735 004a AA42     		cmp	r2, r5
 1736 004c 24D0     		beq	.L134
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1737              		.loc 1 1536 13 view .LVU486
 1738 004e 0027     		movs	r7, #0
 1739              	.L127:
 1740              	.LVL132:
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1741              		.loc 1 1607 5 is_stmt 1 view .LVU487
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1742              		.loc 1 1612 5 view .LVU488
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1743              		.loc 1 1612 27 is_stmt 0 view .LVU489
 1744 0050 EE6A     		ldr	r6, [r5, #44]
 1745              	.LVL133:
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1746              		.loc 1 1618 6 is_stmt 1 view .LVU490
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1747              		.loc 1 1618 8 is_stmt 0 view .LVU491
 1748 0052 B342     		cmp	r3, r6
 1749 0054 22D0     		beq	.L137
 1750              	.L128:
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1751              		.loc 1 1624 31 is_stmt 1 view .LVU492
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1752              		.loc 1 1628 6 view .LVU493
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1753              		.loc 1 1628 28 is_stmt 0 view .LVU494
 1754 0056 6C64     		str	r4, [r5, #68]
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1755              		.loc 1 1638 5 is_stmt 1 view .LVU495
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1756              		.loc 1 1638 11 is_stmt 0 view .LVU496
 1757 0058 AB69     		ldr	r3, [r5, #24]
 1758              	.LVL134:
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1759              		.loc 1 1638 7 view .LVU497
 1760 005a 002B     		cmp	r3, #0
 1761 005c 02DB     		blt	.L129
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1762              		.loc 1 1640 6 is_stmt 1 view .LVU498
 1763 005e C4F10704 		rsb	r4, r4, #7
 1764              	.LVL135:
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1765              		.loc 1 1640 6 is_stmt 0 view .LVU499
 1766 0062 AC61     		str	r4, [r5, #24]
 1767              	.L129:
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccODOtJH.s 			page 134


 1768              		.loc 1 1644 30 is_stmt 1 view .LVU500
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1769              		.loc 1 1651 5 view .LVU501
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1770              		.loc 1 1651 9 is_stmt 0 view .LVU502
 1771 0064 6969     		ldr	r1, [r5, #20]
 1772 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1773 006a 1D4B     		ldr	r3, .L139+4
 1774 006c 03EB8203 		add	r3, r3, r2, lsl #2
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1775              		.loc 1 1651 7 view .LVU503
 1776 0070 9942     		cmp	r1, r3
 1777 0072 15D0     		beq	.L138
 1778              	.LVL136:
 1779              	.L130:
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1780              		.loc 1 1671 30 is_stmt 1 view .LVU504
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1781              		.loc 1 1674 5 view .LVU505
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1782              		.loc 1 1674 7 is_stmt 0 view .LVU506
 1783 0074 4FB1     		cbz	r7, .L125
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1784              		.loc 1 1676 6 is_stmt 1 view .LVU507
 1785 0076 4FF0E023 		mov	r3, #-536813568
 1786 007a 4FF08052 		mov	r2, #268435456
 1787 007e C3F8042D 		str	r2, [r3, #3332]
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1788              		.loc 1 1676 6 view .LVU508
 1789              		.syntax unified
 1790              	@ 1676 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1791 0082 BFF34F8F 		dsb
 1792              	@ 0 "" 2
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1793              		.loc 1 1676 6 view .LVU509
 1794              	@ 1676 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1795 0086 BFF36F8F 		isb
 1796              	@ 0 "" 2
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1797              		.loc 1 1676 37 view .LVU510
 1798              	.LVL137:
 1799              		.thumb
 1800              		.syntax unified
 1801              	.L125:
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1802              		.loc 1 1680 30 view .LVU511
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1803              		.loc 1 1685 5 view .LVU512
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1804              		.loc 1 1688 3 view .LVU513
 1805 008a FFF7FEFF 		bl	vPortExitCritical
 1806              	.LVL138:
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1807              		.loc 1 1689 2 is_stmt 0 view .LVU514
 1808 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1809              	.LVL139:
 1810              	.L132:
ARM GAS  /tmp/ccODOtJH.s 			page 135


1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1811              		.loc 1 1536 13 view .LVU515
 1812 0090 0027     		movs	r7, #0
 1813 0092 DDE7     		b	.L127
 1814              	.L133:
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1815              		.loc 1 1581 23 view .LVU516
 1816 0094 0127     		movs	r7, #1
 1817 0096 DBE7     		b	.L127
 1818              	.L134:
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1819              		.loc 1 1600 21 view .LVU517
 1820 0098 0127     		movs	r7, #1
 1821 009a D9E7     		b	.L127
 1822              	.LVL140:
 1823              	.L137:
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1824              		.loc 1 1620 7 is_stmt 1 view .LVU518
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1825              		.loc 1 1620 25 is_stmt 0 view .LVU519
 1826 009c EC62     		str	r4, [r5, #44]
 1827 009e DAE7     		b	.L128
 1828              	.LVL141:
 1829              	.L138:
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1830              		.loc 1 1656 6 is_stmt 1 view .LVU520
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1831              		.loc 1 1656 10 is_stmt 0 view .LVU521
 1832 00a0 2C1D     		adds	r4, r5, #4
 1833 00a2 2046     		mov	r0, r4
 1834 00a4 FFF7FEFF 		bl	uxListRemove
 1835              	.LVL142:
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1836              		.loc 1 1656 8 view .LVU522
 1837 00a8 38B9     		cbnz	r0, .L131
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1838              		.loc 1 1661 7 is_stmt 1 view .LVU523
 1839 00aa 0123     		movs	r3, #1
 1840 00ac 03FA06F6 		lsl	r6, r3, r6
 1841              	.LVL143:
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1842              		.loc 1 1661 7 is_stmt 0 view .LVU524
 1843 00b0 0C4A     		ldr	r2, .L139+8
 1844 00b2 1368     		ldr	r3, [r2]
 1845 00b4 23EA0603 		bic	r3, r3, r6
 1846 00b8 1360     		str	r3, [r2]
 1847              	.L131:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1848              		.loc 1 1665 31 is_stmt 1 view .LVU525
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1849              		.loc 1 1667 6 view .LVU526
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1850              		.loc 1 1667 6 view .LVU527
 1851 00ba E86A     		ldr	r0, [r5, #44]
 1852 00bc 0123     		movs	r3, #1
 1853 00be 8340     		lsls	r3, r3, r0
 1854 00c0 084A     		ldr	r2, .L139+8
ARM GAS  /tmp/ccODOtJH.s 			page 136


 1855 00c2 1168     		ldr	r1, [r2]
 1856 00c4 0B43     		orrs	r3, r3, r1
 1857 00c6 1360     		str	r3, [r2]
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1858              		.loc 1 1667 6 view .LVU528
 1859 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 1860 00cc 2146     		mov	r1, r4
 1861 00ce 044B     		ldr	r3, .L139+4
 1862 00d0 03EB8000 		add	r0, r3, r0, lsl #2
 1863 00d4 FFF7FEFF 		bl	vListInsertEnd
 1864              	.LVL144:
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1865              		.loc 1 1667 36 view .LVU529
 1866 00d8 CCE7     		b	.L130
 1867              	.L140:
 1868 00da 00BF     		.align	2
 1869              	.L139:
 1870 00dc 00000000 		.word	.LANCHOR10
 1871 00e0 00000000 		.word	.LANCHOR4
 1872 00e4 00000000 		.word	.LANCHOR13
 1873              		.cfi_endproc
 1874              	.LFE13:
 1876              		.section	.text.vTaskResume,"ax",%progbits
 1877              		.align	1
 1878              		.global	vTaskResume
 1879              		.syntax unified
 1880              		.thumb
 1881              		.thumb_func
 1882              		.fpu fpv4-sp-d16
 1884              	vTaskResume:
 1885              	.LVL145:
 1886              	.LFB16:
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1887              		.loc 1 1844 2 view -0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 0
 1890              		@ frame_needed = 0, uses_anonymous_args = 0
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1891              		.loc 1 1844 2 is_stmt 0 view .LVU531
 1892 0000 38B5     		push	{r3, r4, r5, lr}
 1893              	.LCFI19:
 1894              		.cfi_def_cfa_offset 16
 1895              		.cfi_offset 3, -16
 1896              		.cfi_offset 4, -12
 1897              		.cfi_offset 5, -8
 1898              		.cfi_offset 14, -4
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1899              		.loc 1 1845 2 is_stmt 1 view .LVU532
 1900              	.LVL146:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1901              		.loc 1 1848 3 view .LVU533
 1902 0002 68B1     		cbz	r0, .L147
 1903 0004 0446     		mov	r4, r0
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1904              		.loc 1 1848 32 discriminator 2 view .LVU534
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1905              		.loc 1 1852 3 discriminator 2 view .LVU535
ARM GAS  /tmp/ccODOtJH.s 			page 137


1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1906              		.loc 1 1852 15 is_stmt 0 discriminator 2 view .LVU536
 1907 0006 1D4B     		ldr	r3, .L149
 1908 0008 1B68     		ldr	r3, [r3]
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1909              		.loc 1 1852 5 discriminator 2 view .LVU537
 1910 000a 8342     		cmp	r3, r0
 1911 000c 07D0     		beq	.L141
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1912              		.loc 1 1854 4 is_stmt 1 view .LVU538
 1913 000e FFF7FEFF 		bl	vPortEnterCritical
 1914              	.LVL147:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1915              		.loc 1 1856 5 view .LVU539
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1916              		.loc 1 1856 9 is_stmt 0 view .LVU540
 1917 0012 2046     		mov	r0, r4
 1918 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1919              	.LVL148:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1920              		.loc 1 1856 7 view .LVU541
 1921 0018 58B9     		cbnz	r0, .L148
 1922              	.L145:
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1923              		.loc 1 1880 30 is_stmt 1 view .LVU542
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1924              		.loc 1 1883 4 view .LVU543
 1925 001a FFF7FEFF 		bl	vPortExitCritical
 1926              	.LVL149:
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1927              		.loc 1 1887 28 view .LVU544
 1928              	.L141:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1929              		.loc 1 1889 2 is_stmt 0 view .LVU545
 1930 001e 38BD     		pop	{r3, r4, r5, pc}
 1931              	.LVL150:
 1932              	.L147:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1933              		.loc 1 1848 3 is_stmt 1 view .LVU546
 1934              	.LBB132:
 1935              	.LBI132:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1936              		.loc 2 191 30 view .LVU547
 1937              	.LBB133:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1938              		.loc 2 193 1 view .LVU548
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1939              		.loc 2 195 2 view .LVU549
 1940              		.syntax unified
 1941              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1942 0020 4FF05003 			mov r3, #80												
 1943 0024 83F31188 		msr basepri, r3											
 1944 0028 BFF36F8F 		isb														
 1945 002c BFF34F8F 		dsb														
 1946              	
 1947              	@ 0 "" 2
 1948              	.LVL151:
ARM GAS  /tmp/ccODOtJH.s 			page 138


 1949              		.thumb
 1950              		.syntax unified
 1951              	.L143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1952              		.loc 2 195 2 is_stmt 0 view .LVU550
 1953              	.LBE133:
 1954              	.LBE132:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1955              		.loc 1 1848 3 is_stmt 1 discriminator 1 view .LVU551
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1956              		.loc 1 1848 3 discriminator 1 view .LVU552
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1957              		.loc 1 1848 3 discriminator 1 view .LVU553
 1958 0030 FEE7     		b	.L143
 1959              	.LVL152:
 1960              	.L148:
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1961              		.loc 1 1858 31 view .LVU554
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1962              		.loc 1 1862 6 view .LVU555
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1963              		.loc 1 1862 15 is_stmt 0 view .LVU556
 1964 0032 251D     		adds	r5, r4, #4
 1965 0034 2846     		mov	r0, r5
 1966 0036 FFF7FEFF 		bl	uxListRemove
 1967              	.LVL153:
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1968              		.loc 1 1863 6 is_stmt 1 view .LVU557
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1969              		.loc 1 1863 6 view .LVU558
 1970 003a E06A     		ldr	r0, [r4, #44]
 1971 003c 0123     		movs	r3, #1
 1972 003e 8340     		lsls	r3, r3, r0
 1973 0040 0F4A     		ldr	r2, .L149+4
 1974 0042 1168     		ldr	r1, [r2]
 1975 0044 0B43     		orrs	r3, r3, r1
 1976 0046 1360     		str	r3, [r2]
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1977              		.loc 1 1863 6 view .LVU559
 1978 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1979 004c 2946     		mov	r1, r5
 1980 004e 0D4B     		ldr	r3, .L149+8
 1981 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1982 0054 FFF7FEFF 		bl	vListInsertEnd
 1983              	.LVL154:
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1984              		.loc 1 1863 36 view .LVU560
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1985              		.loc 1 1866 6 view .LVU561
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1986              		.loc 1 1866 15 is_stmt 0 view .LVU562
 1987 0058 E26A     		ldr	r2, [r4, #44]
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1988              		.loc 1 1866 43 view .LVU563
 1989 005a 084B     		ldr	r3, .L149
 1990 005c 1B68     		ldr	r3, [r3]
 1991 005e DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/ccODOtJH.s 			page 139


1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1992              		.loc 1 1866 8 view .LVU564
 1993 0060 9A42     		cmp	r2, r3
 1994 0062 DAD3     		bcc	.L145
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1995              		.loc 1 1871 7 is_stmt 1 view .LVU565
 1996 0064 4FF0E023 		mov	r3, #-536813568
 1997 0068 4FF08052 		mov	r2, #268435456
 1998 006c C3F8042D 		str	r2, [r3, #3332]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1999              		.loc 1 1871 7 view .LVU566
 2000              		.syntax unified
 2001              	@ 1871 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2002 0070 BFF34F8F 		dsb
 2003              	@ 0 "" 2
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2004              		.loc 1 1871 7 view .LVU567
 2005              	@ 1871 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2006 0074 BFF36F8F 		isb
 2007              	@ 0 "" 2
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2008              		.loc 1 1871 38 view .LVU568
 2009              		.thumb
 2010              		.syntax unified
 2011 0078 CFE7     		b	.L145
 2012              	.L150:
 2013 007a 00BF     		.align	2
 2014              	.L149:
 2015 007c 00000000 		.word	.LANCHOR10
 2016 0080 00000000 		.word	.LANCHOR13
 2017 0084 00000000 		.word	.LANCHOR4
 2018              		.cfi_endproc
 2019              	.LFE16:
 2021              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2022              		.align	1
 2023              		.global	xTaskResumeFromISR
 2024              		.syntax unified
 2025              		.thumb
 2026              		.thumb_func
 2027              		.fpu fpv4-sp-d16
 2029              	xTaskResumeFromISR:
 2030              	.LVL155:
 2031              	.LFB17:
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2032              		.loc 1 1898 2 view -0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 0
 2035              		@ frame_needed = 0, uses_anonymous_args = 0
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2036              		.loc 1 1898 2 is_stmt 0 view .LVU570
 2037 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2038              	.LCFI20:
 2039              		.cfi_def_cfa_offset 24
 2040              		.cfi_offset 3, -24
 2041              		.cfi_offset 4, -20
 2042              		.cfi_offset 5, -16
 2043              		.cfi_offset 6, -12
ARM GAS  /tmp/ccODOtJH.s 			page 140


 2044              		.cfi_offset 7, -8
 2045              		.cfi_offset 14, -4
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2046              		.loc 1 1899 2 is_stmt 1 view .LVU571
 2047              	.LVL156:
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 2048              		.loc 1 1900 2 view .LVU572
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2049              		.loc 1 1901 2 view .LVU573
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2050              		.loc 1 1903 3 view .LVU574
 2051 0002 90B3     		cbz	r0, .L159
 2052 0004 0446     		mov	r4, r0
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2053              		.loc 1 1903 32 discriminator 2 view .LVU575
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2054              		.loc 1 1921 3 discriminator 2 view .LVU576
 2055 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2056              	.LVL157:
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2057              		.loc 1 1923 3 discriminator 2 view .LVU577
 2058              	.LBB134:
 2059              	.LBI134:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2060              		.loc 2 207 34 discriminator 2 view .LVU578
 2061              	.LBB135:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2062              		.loc 2 209 1 discriminator 2 view .LVU579
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2063              		.loc 2 211 2 discriminator 2 view .LVU580
 2064              		.syntax unified
 2065              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2066 000a EFF31186 			mrs r6, basepri											
 2067 000e 4FF05003 		mov r3, #80												
 2068 0012 83F31188 		msr basepri, r3											
 2069 0016 BFF36F8F 		isb														
 2070 001a BFF34F8F 		dsb														
 2071              	
 2072              	@ 0 "" 2
 2073              	.LVL158:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2074              		.loc 2 223 2 discriminator 2 view .LVU581
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2075              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU582
 2076              		.thumb
 2077              		.syntax unified
 2078              	.LBE135:
 2079              	.LBE134:
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2080              		.loc 1 1925 4 is_stmt 1 discriminator 2 view .LVU583
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2081              		.loc 1 1925 8 is_stmt 0 discriminator 2 view .LVU584
 2082 001e 2046     		mov	r0, r4
 2083 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2084              	.LVL159:
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2085              		.loc 1 1925 6 discriminator 2 view .LVU585
ARM GAS  /tmp/ccODOtJH.s 			page 141


 2086 0024 0546     		mov	r5, r0
 2087 0026 E0B1     		cbz	r0, .L154
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2088              		.loc 1 1927 39 is_stmt 1 view .LVU586
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2089              		.loc 1 1930 5 view .LVU587
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2090              		.loc 1 1930 30 is_stmt 0 view .LVU588
 2091 0028 194B     		ldr	r3, .L160
 2092 002a 1B68     		ldr	r3, [r3]
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2093              		.loc 1 1930 7 view .LVU589
 2094 002c 43BB     		cbnz	r3, .L155
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2095              		.loc 1 1934 6 is_stmt 1 view .LVU590
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2096              		.loc 1 1934 15 is_stmt 0 view .LVU591
 2097 002e E26A     		ldr	r2, [r4, #44]
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2098              		.loc 1 1934 43 view .LVU592
 2099 0030 184B     		ldr	r3, .L160+4
 2100 0032 1B68     		ldr	r3, [r3]
 2101 0034 DB6A     		ldr	r3, [r3, #44]
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2102              		.loc 1 1934 8 view .LVU593
 2103 0036 9A42     		cmp	r2, r3
 2104 0038 20D2     		bcs	.L157
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2105              		.loc 1 1899 13 view .LVU594
 2106 003a 0025     		movs	r5, #0
 2107              	.L156:
 2108              	.LVL160:
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2109              		.loc 1 1940 31 is_stmt 1 view .LVU595
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2110              		.loc 1 1943 6 view .LVU596
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2111              		.loc 1 1943 15 is_stmt 0 view .LVU597
 2112 003c 271D     		adds	r7, r4, #4
 2113 003e 3846     		mov	r0, r7
 2114 0040 FFF7FEFF 		bl	uxListRemove
 2115              	.LVL161:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2116              		.loc 1 1944 6 is_stmt 1 view .LVU598
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2117              		.loc 1 1944 6 view .LVU599
 2118 0044 E06A     		ldr	r0, [r4, #44]
 2119 0046 0123     		movs	r3, #1
 2120 0048 8340     		lsls	r3, r3, r0
 2121 004a 134A     		ldr	r2, .L160+8
 2122 004c 1168     		ldr	r1, [r2]
 2123 004e 0B43     		orrs	r3, r3, r1
 2124 0050 1360     		str	r3, [r2]
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2125              		.loc 1 1944 6 view .LVU600
 2126 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2127 0056 3946     		mov	r1, r7
ARM GAS  /tmp/ccODOtJH.s 			page 142


 2128 0058 104B     		ldr	r3, .L160+12
 2129 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2130 005e FFF7FEFF 		bl	vListInsertEnd
 2131              	.LVL162:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2132              		.loc 1 1944 36 view .LVU601
 2133              	.L154:
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2134              		.loc 1 1956 29 view .LVU602
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2135              		.loc 1 1959 3 view .LVU603
 2136              	.LBB136:
 2137              	.LBI136:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2138              		.loc 2 227 30 view .LVU604
 2139              	.LBB137:
 2140              		.loc 2 229 2 view .LVU605
 2141              		.syntax unified
 2142              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2143 0062 86F31188 			msr basepri, r6	
 2144              	@ 0 "" 2
 2145              	.LVL163:
 2146              		.loc 2 229 2 is_stmt 0 view .LVU606
 2147              		.thumb
 2148              		.syntax unified
 2149              	.LBE137:
 2150              	.LBE136:
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2151              		.loc 1 1961 3 is_stmt 1 view .LVU607
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2152              		.loc 1 1962 2 is_stmt 0 view .LVU608
 2153 0066 2846     		mov	r0, r5
 2154 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2155              	.LVL164:
 2156              	.L159:
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2157              		.loc 1 1903 3 is_stmt 1 view .LVU609
 2158              	.LBB138:
 2159              	.LBI138:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2160              		.loc 2 191 30 view .LVU610
 2161              	.LBB139:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2162              		.loc 2 193 1 view .LVU611
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2163              		.loc 2 195 2 view .LVU612
 2164              		.syntax unified
 2165              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2166 006a 4FF05003 			mov r3, #80												
 2167 006e 83F31188 		msr basepri, r3											
 2168 0072 BFF36F8F 		isb														
 2169 0076 BFF34F8F 		dsb														
 2170              	
 2171              	@ 0 "" 2
 2172              	.LVL165:
 2173              		.thumb
 2174              		.syntax unified
ARM GAS  /tmp/ccODOtJH.s 			page 143


 2175              	.L153:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2176              		.loc 2 195 2 is_stmt 0 view .LVU613
 2177              	.LBE139:
 2178              	.LBE138:
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2179              		.loc 1 1903 3 is_stmt 1 discriminator 1 view .LVU614
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2180              		.loc 1 1903 3 discriminator 1 view .LVU615
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2181              		.loc 1 1903 3 discriminator 1 view .LVU616
 2182 007a FEE7     		b	.L153
 2183              	.LVL166:
 2184              	.L157:
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2185              		.loc 1 1936 22 is_stmt 0 view .LVU617
 2186 007c 0125     		movs	r5, #1
 2187 007e DDE7     		b	.L156
 2188              	.L155:
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2189              		.loc 1 1951 6 is_stmt 1 view .LVU618
 2190 0080 04F11801 		add	r1, r4, #24
 2191 0084 0648     		ldr	r0, .L160+16
 2192 0086 FFF7FEFF 		bl	vListInsertEnd
 2193              	.LVL167:
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2194              		.loc 1 1899 13 is_stmt 0 view .LVU619
 2195 008a 0025     		movs	r5, #0
 2196 008c E9E7     		b	.L154
 2197              	.L161:
 2198 008e 00BF     		.align	2
 2199              	.L160:
 2200 0090 00000000 		.word	.LANCHOR16
 2201 0094 00000000 		.word	.LANCHOR10
 2202 0098 00000000 		.word	.LANCHOR13
 2203 009c 00000000 		.word	.LANCHOR4
 2204 00a0 00000000 		.word	.LANCHOR1
 2205              		.cfi_endproc
 2206              	.LFE17:
 2208              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2209              		.align	2
 2210              	.LC0:
 2211 0000 49444C45 		.ascii	"IDLE\000"
 2211      00
 2212              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2213              		.align	1
 2214              		.global	vTaskStartScheduler
 2215              		.syntax unified
 2216              		.thumb
 2217              		.thumb_func
 2218              		.fpu fpv4-sp-d16
 2220              	vTaskStartScheduler:
 2221              	.LFB18:
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2222              		.loc 1 1968 1 is_stmt 1 view -0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccODOtJH.s 			page 144


 2225              		@ frame_needed = 0, uses_anonymous_args = 0
 2226 0000 10B5     		push	{r4, lr}
 2227              	.LCFI21:
 2228              		.cfi_def_cfa_offset 8
 2229              		.cfi_offset 4, -8
 2230              		.cfi_offset 14, -4
 2231 0002 88B0     		sub	sp, sp, #32
 2232              	.LCFI22:
 2233              		.cfi_def_cfa_offset 40
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2234              		.loc 1 1969 1 view .LVU621
 2235              	.LBB140:
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2236              		.loc 1 1974 3 view .LVU622
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2237              		.loc 1 1974 17 is_stmt 0 view .LVU623
 2238 0004 0024     		movs	r4, #0
 2239 0006 0594     		str	r4, [sp, #20]
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2240              		.loc 1 1975 3 is_stmt 1 view .LVU624
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2241              		.loc 1 1975 16 is_stmt 0 view .LVU625
 2242 0008 0694     		str	r4, [sp, #24]
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2243              		.loc 1 1976 3 is_stmt 1 view .LVU626
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2244              		.loc 1 1980 3 view .LVU627
 2245 000a 07AA     		add	r2, sp, #28
 2246 000c 06A9     		add	r1, sp, #24
 2247 000e 05A8     		add	r0, sp, #20
 2248 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2249              	.LVL168:
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2250              		.loc 1 1981 3 view .LVU628
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2251              		.loc 1 1981 21 is_stmt 0 view .LVU629
 2252 0014 059B     		ldr	r3, [sp, #20]
 2253 0016 0293     		str	r3, [sp, #8]
 2254 0018 069B     		ldr	r3, [sp, #24]
 2255 001a 0193     		str	r3, [sp, #4]
 2256 001c 0094     		str	r4, [sp]
 2257 001e 2346     		mov	r3, r4
 2258 0020 079A     		ldr	r2, [sp, #28]
 2259 0022 0E49     		ldr	r1, .L166
 2260 0024 0E48     		ldr	r0, .L166+4
 2261 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2262              	.LVL169:
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2263              		.loc 1 1981 19 view .LVU630
 2264 002a 0E4B     		ldr	r3, .L166+8
 2265 002c 1860     		str	r0, [r3]
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2266              		.loc 1 1989 3 is_stmt 1 view .LVU631
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2267              		.loc 1 1989 5 is_stmt 0 view .LVU632
 2268 002e 90B1     		cbz	r0, .L162
 2269              	.LVL170:
ARM GAS  /tmp/ccODOtJH.s 			page 145


1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2270              		.loc 1 1989 5 view .LVU633
 2271              	.LBE140:
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2272              		.loc 1 2023 2 is_stmt 1 view .LVU634
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2273              		.loc 1 2039 3 view .LVU635
 2274              	.LBB141:
 2275              	.LBI141:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2276              		.loc 2 191 30 view .LVU636
 2277              	.LBB142:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2278              		.loc 2 193 1 view .LVU637
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2279              		.loc 2 195 2 view .LVU638
 2280              		.syntax unified
 2281              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2282 0030 4FF05003 			mov r3, #80												
 2283 0034 83F31188 		msr basepri, r3											
 2284 0038 BFF36F8F 		isb														
 2285 003c BFF34F8F 		dsb														
 2286              	
 2287              	@ 0 "" 2
 2288              		.thumb
 2289              		.syntax unified
 2290              	.LBE142:
 2291              	.LBE141:
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2292              		.loc 1 2049 3 view .LVU639
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2293              		.loc 1 2049 24 is_stmt 0 view .LVU640
 2294 0040 094B     		ldr	r3, .L166+12
 2295 0042 4FF0FF32 		mov	r2, #-1
 2296 0046 1A60     		str	r2, [r3]
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2297              		.loc 1 2050 3 is_stmt 1 view .LVU641
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2298              		.loc 1 2050 21 is_stmt 0 view .LVU642
 2299 0048 084B     		ldr	r3, .L166+16
 2300 004a 0122     		movs	r2, #1
 2301 004c 1A60     		str	r2, [r3]
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2302              		.loc 1 2051 3 is_stmt 1 view .LVU643
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2303              		.loc 1 2051 14 is_stmt 0 view .LVU644
 2304 004e 084B     		ldr	r3, .L166+20
 2305 0050 1C60     		str	r4, [r3]
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2306              		.loc 1 2059 43 is_stmt 1 view .LVU645
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2307              		.loc 1 2061 26 view .LVU646
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2308              		.loc 1 2065 3 view .LVU647
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2309              		.loc 1 2065 7 is_stmt 0 view .LVU648
 2310 0052 FFF7FEFF 		bl	xPortStartScheduler
ARM GAS  /tmp/ccODOtJH.s 			page 146


 2311              	.LVL171:
 2312              	.L162:
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2313              		.loc 1 2086 1 view .LVU649
 2314 0056 08B0     		add	sp, sp, #32
 2315              	.LCFI23:
 2316              		.cfi_def_cfa_offset 8
 2317              		@ sp needed
 2318 0058 10BD     		pop	{r4, pc}
 2319              	.L167:
 2320 005a 00BF     		.align	2
 2321              	.L166:
 2322 005c 00000000 		.word	.LC0
 2323 0060 00000000 		.word	prvIdleTask
 2324 0064 00000000 		.word	.LANCHOR17
 2325 0068 00000000 		.word	.LANCHOR3
 2326 006c 00000000 		.word	.LANCHOR11
 2327 0070 00000000 		.word	.LANCHOR15
 2328              		.cfi_endproc
 2329              	.LFE18:
 2331              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2332              		.align	1
 2333              		.global	vTaskEndScheduler
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2337              		.fpu fpv4-sp-d16
 2339              	vTaskEndScheduler:
 2340              	.LFB19:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2341              		.loc 1 2090 1 is_stmt 1 view -0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 0
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 2345 0000 08B5     		push	{r3, lr}
 2346              	.LCFI24:
 2347              		.cfi_def_cfa_offset 8
 2348              		.cfi_offset 3, -8
 2349              		.cfi_offset 14, -4
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2350              		.loc 1 2094 2 view .LVU651
 2351              	.LBB143:
 2352              	.LBI143:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2353              		.loc 2 191 30 view .LVU652
 2354              	.LBB144:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2355              		.loc 2 193 1 view .LVU653
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2356              		.loc 2 195 2 view .LVU654
 2357              		.syntax unified
 2358              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2359 0002 4FF05003 			mov r3, #80												
 2360 0006 83F31188 		msr basepri, r3											
 2361 000a BFF36F8F 		isb														
 2362 000e BFF34F8F 		dsb														
 2363              	
ARM GAS  /tmp/ccODOtJH.s 			page 147


 2364              	@ 0 "" 2
 2365              		.thumb
 2366              		.syntax unified
 2367              	.LBE144:
 2368              	.LBE143:
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2369              		.loc 1 2095 2 view .LVU655
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2370              		.loc 1 2095 20 is_stmt 0 view .LVU656
 2371 0012 034B     		ldr	r3, .L170
 2372 0014 0022     		movs	r2, #0
 2373 0016 1A60     		str	r2, [r3]
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2374              		.loc 1 2096 2 is_stmt 1 view .LVU657
 2375 0018 FFF7FEFF 		bl	vPortEndScheduler
 2376              	.LVL172:
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2377              		.loc 1 2097 1 is_stmt 0 view .LVU658
 2378 001c 08BD     		pop	{r3, pc}
 2379              	.L171:
 2380 001e 00BF     		.align	2
 2381              	.L170:
 2382 0020 00000000 		.word	.LANCHOR11
 2383              		.cfi_endproc
 2384              	.LFE19:
 2386              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2387              		.align	1
 2388              		.global	vTaskSuspendAll
 2389              		.syntax unified
 2390              		.thumb
 2391              		.thumb_func
 2392              		.fpu fpv4-sp-d16
 2394              	vTaskSuspendAll:
 2395              	.LFB20:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2396              		.loc 1 2101 1 is_stmt 1 view -0
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 0
 2399              		@ frame_needed = 0, uses_anonymous_args = 0
 2400              		@ link register save eliminated.
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
 2401              		.loc 1 2106 2 view .LVU660
 2402 0000 024A     		ldr	r2, .L173
 2403 0002 1368     		ldr	r3, [r2]
 2404 0004 0133     		adds	r3, r3, #1
 2405 0006 1360     		str	r3, [r2]
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2406              		.loc 1 2107 2 view .LVU661
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2407              		.loc 1 2108 1 is_stmt 0 view .LVU662
 2408 0008 7047     		bx	lr
 2409              	.L174:
 2410 000a 00BF     		.align	2
 2411              	.L173:
 2412 000c 00000000 		.word	.LANCHOR16
 2413              		.cfi_endproc
 2414              	.LFE20:
ARM GAS  /tmp/ccODOtJH.s 			page 148


 2416              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2417              		.align	1
 2418              		.global	xTaskGetTickCount
 2419              		.syntax unified
 2420              		.thumb
 2421              		.thumb_func
 2422              		.fpu fpv4-sp-d16
 2424              	xTaskGetTickCount:
 2425              	.LFB22:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2426              		.loc 1 2285 1 is_stmt 1 view -0
 2427              		.cfi_startproc
 2428              		@ args = 0, pretend = 0, frame = 0
 2429              		@ frame_needed = 0, uses_anonymous_args = 0
 2430              		@ link register save eliminated.
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2431              		.loc 1 2286 1 view .LVU664
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2432              		.loc 1 2289 32 view .LVU665
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2433              		.loc 1 2291 3 view .LVU666
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2434              		.loc 1 2291 10 is_stmt 0 view .LVU667
 2435 0000 014B     		ldr	r3, .L176
 2436 0002 1868     		ldr	r0, [r3]
 2437              	.LVL173:
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2438              		.loc 1 2293 31 is_stmt 1 view .LVU668
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2439              		.loc 1 2295 2 view .LVU669
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2440              		.loc 1 2296 1 is_stmt 0 view .LVU670
 2441 0004 7047     		bx	lr
 2442              	.L177:
 2443 0006 00BF     		.align	2
 2444              	.L176:
 2445 0008 00000000 		.word	.LANCHOR15
 2446              		.cfi_endproc
 2447              	.LFE22:
 2449              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2450              		.align	1
 2451              		.global	xTaskGetTickCountFromISR
 2452              		.syntax unified
 2453              		.thumb
 2454              		.thumb_func
 2455              		.fpu fpv4-sp-d16
 2457              	xTaskGetTickCountFromISR:
 2458              	.LFB23:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2459              		.loc 1 2300 1 is_stmt 1 view -0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 0
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
 2463 0000 08B5     		push	{r3, lr}
 2464              	.LCFI25:
 2465              		.cfi_def_cfa_offset 8
 2466              		.cfi_offset 3, -8
ARM GAS  /tmp/ccODOtJH.s 			page 149


 2467              		.cfi_offset 14, -4
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2468              		.loc 1 2301 1 view .LVU672
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2469              		.loc 1 2302 1 view .LVU673
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2470              		.loc 1 2318 2 view .LVU674
 2471 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2472              	.LVL174:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2473              		.loc 1 2320 2 view .LVU675
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2474              		.loc 1 2322 3 view .LVU676
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2475              		.loc 1 2322 11 is_stmt 0 view .LVU677
 2476 0006 014B     		ldr	r3, .L180
 2477 0008 1868     		ldr	r0, [r3]
 2478              	.LVL175:
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2479              		.loc 1 2324 2 is_stmt 1 view .LVU678
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2480              		.loc 1 2326 2 view .LVU679
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2481              		.loc 1 2327 1 is_stmt 0 view .LVU680
 2482 000a 08BD     		pop	{r3, pc}
 2483              	.L181:
 2484              		.align	2
 2485              	.L180:
 2486 000c 00000000 		.word	.LANCHOR15
 2487              		.cfi_endproc
 2488              	.LFE23:
 2490              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2491              		.align	1
 2492              		.global	uxTaskGetNumberOfTasks
 2493              		.syntax unified
 2494              		.thumb
 2495              		.thumb_func
 2496              		.fpu fpv4-sp-d16
 2498              	uxTaskGetNumberOfTasks:
 2499              	.LFB24:
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2500              		.loc 1 2331 1 is_stmt 1 view -0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 0
 2503              		@ frame_needed = 0, uses_anonymous_args = 0
 2504              		@ link register save eliminated.
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2505              		.loc 1 2334 2 view .LVU682
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2506              		.loc 1 2334 9 is_stmt 0 view .LVU683
 2507 0000 014B     		ldr	r3, .L183
 2508 0002 1868     		ldr	r0, [r3]
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2509              		.loc 1 2335 1 view .LVU684
 2510 0004 7047     		bx	lr
 2511              	.L184:
 2512 0006 00BF     		.align	2
ARM GAS  /tmp/ccODOtJH.s 			page 150


 2513              	.L183:
 2514 0008 00000000 		.word	.LANCHOR9
 2515              		.cfi_endproc
 2516              	.LFE24:
 2518              		.section	.text.pcTaskGetName,"ax",%progbits
 2519              		.align	1
 2520              		.global	pcTaskGetName
 2521              		.syntax unified
 2522              		.thumb
 2523              		.thumb_func
 2524              		.fpu fpv4-sp-d16
 2526              	pcTaskGetName:
 2527              	.LVL176:
 2528              	.LFB25:
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2529              		.loc 1 2339 1 is_stmt 1 view -0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 0
 2532              		@ frame_needed = 0, uses_anonymous_args = 0
 2533              		@ link register save eliminated.
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2534              		.loc 1 2340 1 view .LVU686
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2535              		.loc 1 2344 2 view .LVU687
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2536              		.loc 1 2344 10 is_stmt 0 view .LVU688
 2537 0000 0346     		mov	r3, r0
 2538 0002 18B1     		cbz	r0, .L189
 2539              	.LVL177:
 2540              	.L186:
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2541              		.loc 1 2345 2 is_stmt 1 discriminator 4 view .LVU689
 2542 0004 2BB1     		cbz	r3, .L190
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2543              		.loc 1 2345 23 discriminator 2 view .LVU690
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2544              		.loc 1 2346 2 discriminator 2 view .LVU691
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2545              		.loc 1 2347 1 is_stmt 0 discriminator 2 view .LVU692
 2546 0006 03F13400 		add	r0, r3, #52
 2547 000a 7047     		bx	lr
 2548              	.LVL178:
 2549              	.L189:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2550              		.loc 1 2344 10 discriminator 1 view .LVU693
 2551 000c 054B     		ldr	r3, .L191
 2552 000e 1B68     		ldr	r3, [r3]
 2553              	.LVL179:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2554              		.loc 1 2344 10 discriminator 1 view .LVU694
 2555 0010 F8E7     		b	.L186
 2556              	.LVL180:
 2557              	.L190:
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2558              		.loc 1 2345 2 is_stmt 1 view .LVU695
 2559              	.LBB145:
 2560              	.LBI145:
ARM GAS  /tmp/ccODOtJH.s 			page 151


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2561              		.loc 2 191 30 view .LVU696
 2562              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2563              		.loc 2 193 1 view .LVU697
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2564              		.loc 2 195 2 view .LVU698
 2565              		.syntax unified
 2566              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2567 0012 4FF05003 			mov r3, #80												
 2568 0016 83F31188 		msr basepri, r3											
 2569 001a BFF36F8F 		isb														
 2570 001e BFF34F8F 		dsb														
 2571              	
 2572              	@ 0 "" 2
 2573              	.LVL181:
 2574              		.thumb
 2575              		.syntax unified
 2576              	.L188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2577              		.loc 2 195 2 is_stmt 0 view .LVU699
 2578              	.LBE146:
 2579              	.LBE145:
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2580              		.loc 1 2345 2 is_stmt 1 discriminator 1 view .LVU700
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2581              		.loc 1 2345 2 discriminator 1 view .LVU701
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2582              		.loc 1 2345 2 discriminator 1 view .LVU702
 2583 0022 FEE7     		b	.L188
 2584              	.L192:
 2585              		.align	2
 2586              	.L191:
 2587 0024 00000000 		.word	.LANCHOR10
 2588              		.cfi_endproc
 2589              	.LFE25:
 2591              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2592              		.align	1
 2593              		.global	xTaskIncrementTick
 2594              		.syntax unified
 2595              		.thumb
 2596              		.thumb_func
 2597              		.fpu fpv4-sp-d16
 2599              	xTaskIncrementTick:
 2600              	.LFB26:
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2601              		.loc 1 2666 1 view -0
 2602              		.cfi_startproc
 2603              		@ args = 0, pretend = 0, frame = 0
 2604              		@ frame_needed = 0, uses_anonymous_args = 0
 2605 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2606              	.LCFI26:
 2607              		.cfi_def_cfa_offset 24
 2608              		.cfi_offset 3, -24
 2609              		.cfi_offset 4, -20
 2610              		.cfi_offset 5, -16
 2611              		.cfi_offset 6, -12
ARM GAS  /tmp/ccODOtJH.s 			page 152


 2612              		.cfi_offset 7, -8
 2613              		.cfi_offset 14, -4
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2614              		.loc 1 2667 1 view .LVU704
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2615              		.loc 1 2668 1 view .LVU705
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2616              		.loc 1 2669 1 view .LVU706
 2617              	.LVL182:
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2618              		.loc 1 2674 40 view .LVU707
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2619              		.loc 1 2675 2 view .LVU708
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2620              		.loc 1 2675 27 is_stmt 0 view .LVU709
 2621 0002 3A4B     		ldr	r3, .L214
 2622 0004 1B68     		ldr	r3, [r3]
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2623              		.loc 1 2675 4 view .LVU710
 2624 0006 002B     		cmp	r3, #0
 2625 0008 64D1     		bne	.L194
 2626              	.LBB147:
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2627              		.loc 1 2679 3 is_stmt 1 view .LVU711
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2628              		.loc 1 2679 49 is_stmt 0 view .LVU712
 2629 000a 394B     		ldr	r3, .L214+4
 2630 000c 1D68     		ldr	r5, [r3]
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2631              		.loc 1 2679 20 view .LVU713
 2632 000e 0135     		adds	r5, r5, #1
 2633              	.LVL183:
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2634              		.loc 1 2683 3 is_stmt 1 view .LVU714
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2635              		.loc 1 2683 14 is_stmt 0 view .LVU715
 2636 0010 1D60     		str	r5, [r3]
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2637              		.loc 1 2685 3 is_stmt 1 view .LVU716
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2638              		.loc 1 2685 5 is_stmt 0 view .LVU717
 2639 0012 C5B9     		cbnz	r5, .L195
 2640              	.LBB148:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2641              		.loc 1 2687 4 is_stmt 1 view .LVU718
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2642              		.loc 1 2687 4 view .LVU719
 2643 0014 374B     		ldr	r3, .L214+8
 2644 0016 1B68     		ldr	r3, [r3]
 2645 0018 1B68     		ldr	r3, [r3]
 2646 001a 43B1     		cbz	r3, .L196
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2647              		.loc 1 2687 4 view .LVU720
 2648              	.LBB149:
 2649              	.LBI149:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2650              		.loc 2 191 30 view .LVU721
ARM GAS  /tmp/ccODOtJH.s 			page 153


 2651              	.LBB150:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2652              		.loc 2 193 1 view .LVU722
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2653              		.loc 2 195 2 view .LVU723
 2654              		.syntax unified
 2655              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2656 001c 4FF05003 			mov r3, #80												
 2657 0020 83F31188 		msr basepri, r3											
 2658 0024 BFF36F8F 		isb														
 2659 0028 BFF34F8F 		dsb														
 2660              	
 2661              	@ 0 "" 2
 2662              	.LVL184:
 2663              		.thumb
 2664              		.syntax unified
 2665              	.L197:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2666              		.loc 2 195 2 is_stmt 0 view .LVU724
 2667              	.LBE150:
 2668              	.LBE149:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2669              		.loc 1 2687 4 is_stmt 1 discriminator 1 view .LVU725
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2670              		.loc 1 2687 4 discriminator 1 view .LVU726
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2671              		.loc 1 2687 4 discriminator 1 view .LVU727
 2672 002c FEE7     		b	.L197
 2673              	.L196:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2674              		.loc 1 2687 4 discriminator 2 view .LVU728
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2675              		.loc 1 2687 4 discriminator 2 view .LVU729
 2676 002e 314A     		ldr	r2, .L214+8
 2677 0030 1168     		ldr	r1, [r2]
 2678              	.LVL185:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2679              		.loc 1 2687 4 discriminator 2 view .LVU730
 2680 0032 314B     		ldr	r3, .L214+12
 2681 0034 1868     		ldr	r0, [r3]
 2682 0036 1060     		str	r0, [r2]
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2683              		.loc 1 2687 4 discriminator 2 view .LVU731
 2684 0038 1960     		str	r1, [r3]
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2685              		.loc 1 2687 4 discriminator 2 view .LVU732
 2686 003a 304A     		ldr	r2, .L214+16
 2687 003c 1368     		ldr	r3, [r2]
 2688 003e 0133     		adds	r3, r3, #1
 2689 0040 1360     		str	r3, [r2]
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2690              		.loc 1 2687 4 discriminator 2 view .LVU733
 2691 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2692              	.LVL186:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2693              		.loc 1 2687 4 is_stmt 0 discriminator 2 view .LVU734
 2694              	.LBE148:
ARM GAS  /tmp/ccODOtJH.s 			page 154


2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2695              		.loc 1 2687 30 is_stmt 1 discriminator 2 view .LVU735
 2696              	.L195:
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2697              		.loc 1 2691 28 view .LVU736
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2698              		.loc 1 2698 3 view .LVU737
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2699              		.loc 1 2698 23 is_stmt 0 view .LVU738
 2700 0046 2E4B     		ldr	r3, .L214+20
 2701 0048 1B68     		ldr	r3, [r3]
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2702              		.loc 1 2698 5 view .LVU739
 2703 004a AB42     		cmp	r3, r5
 2704 004c 38D9     		bls	.L207
 2705              	.LBE147:
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2706              		.loc 1 2669 12 view .LVU740
 2707 004e 0027     		movs	r7, #0
 2708              	.LVL187:
 2709              	.L199:
 2710              	.LBB151:
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2711              		.loc 1 2781 4 is_stmt 1 view .LVU741
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2712              		.loc 1 2781 8 is_stmt 0 view .LVU742
 2713 0050 2C4B     		ldr	r3, .L214+24
 2714 0052 1B68     		ldr	r3, [r3]
 2715 0054 DB6A     		ldr	r3, [r3, #44]
 2716 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2717 005a 9A00     		lsls	r2, r3, #2
 2718 005c 2A4B     		ldr	r3, .L214+28
 2719 005e 9B58     		ldr	r3, [r3, r2]
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2720              		.loc 1 2781 6 view .LVU743
 2721 0060 012B     		cmp	r3, #1
 2722 0062 3CD9     		bls	.L205
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2723              		.loc 1 2783 21 view .LVU744
 2724 0064 0127     		movs	r7, #1
 2725              	.LVL188:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2726              		.loc 1 2783 21 view .LVU745
 2727 0066 3AE0     		b	.L205
 2728              	.LVL189:
 2729              	.L208:
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2730              		.loc 1 2764 24 view .LVU746
 2731 0068 0127     		movs	r7, #1
 2732              	.LVL190:
 2733              	.L198:
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2734              		.loc 1 2700 4 is_stmt 1 view .LVU747
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2735              		.loc 1 2702 5 view .LVU748
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2736              		.loc 1 2702 9 is_stmt 0 view .LVU749
ARM GAS  /tmp/ccODOtJH.s 			page 155


 2737 006a 224B     		ldr	r3, .L214+8
 2738 006c 1B68     		ldr	r3, [r3]
 2739 006e 1B68     		ldr	r3, [r3]
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2740              		.loc 1 2702 7 view .LVU750
 2741 0070 43B3     		cbz	r3, .L212
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2742              		.loc 1 2718 6 is_stmt 1 view .LVU751
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2743              		.loc 1 2718 14 is_stmt 0 view .LVU752
 2744 0072 204B     		ldr	r3, .L214+8
 2745 0074 1B68     		ldr	r3, [r3]
 2746 0076 DB68     		ldr	r3, [r3, #12]
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2747              		.loc 1 2718 12 view .LVU753
 2748 0078 DC68     		ldr	r4, [r3, #12]
 2749              	.LVL191:
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2750              		.loc 1 2719 6 is_stmt 1 view .LVU754
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2751              		.loc 1 2719 17 is_stmt 0 view .LVU755
 2752 007a 6368     		ldr	r3, [r4, #4]
 2753              	.LVL192:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2754              		.loc 1 2721 6 is_stmt 1 view .LVU756
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2755              		.loc 1 2721 8 is_stmt 0 view .LVU757
 2756 007c 9D42     		cmp	r5, r3
 2757 007e 26D3     		bcc	.L213
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2758              		.loc 1 2733 31 is_stmt 1 view .LVU758
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2759              		.loc 1 2737 6 view .LVU759
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2760              		.loc 1 2737 15 is_stmt 0 view .LVU760
 2761 0080 261D     		adds	r6, r4, #4
 2762 0082 3046     		mov	r0, r6
 2763 0084 FFF7FEFF 		bl	uxListRemove
 2764              	.LVL193:
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2765              		.loc 1 2741 6 is_stmt 1 view .LVU761
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2766              		.loc 1 2741 10 is_stmt 0 view .LVU762
 2767 0088 A36A     		ldr	r3, [r4, #40]
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2768              		.loc 1 2741 8 view .LVU763
 2769 008a 1BB1     		cbz	r3, .L202
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2770              		.loc 1 2743 7 is_stmt 1 view .LVU764
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2771              		.loc 1 2743 16 is_stmt 0 view .LVU765
 2772 008c 04F11800 		add	r0, r4, #24
 2773 0090 FFF7FEFF 		bl	uxListRemove
 2774              	.LVL194:
 2775              	.L202:
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2776              		.loc 1 2747 31 is_stmt 1 view .LVU766
ARM GAS  /tmp/ccODOtJH.s 			page 156


2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2777              		.loc 1 2752 6 view .LVU767
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2778              		.loc 1 2752 6 view .LVU768
 2779 0094 E36A     		ldr	r3, [r4, #44]
 2780 0096 0122     		movs	r2, #1
 2781 0098 9A40     		lsls	r2, r2, r3
 2782 009a 1C49     		ldr	r1, .L214+32
 2783 009c 0868     		ldr	r0, [r1]
 2784 009e 0243     		orrs	r2, r2, r0
 2785 00a0 0A60     		str	r2, [r1]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2786              		.loc 1 2752 6 view .LVU769
 2787 00a2 03EB8303 		add	r3, r3, r3, lsl #2
 2788 00a6 9A00     		lsls	r2, r3, #2
 2789 00a8 3146     		mov	r1, r6
 2790 00aa 1748     		ldr	r0, .L214+28
 2791 00ac 1044     		add	r0, r0, r2
 2792 00ae FFF7FEFF 		bl	vListInsertEnd
 2793              	.LVL195:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2794              		.loc 1 2752 36 view .LVU770
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2795              		.loc 1 2762 7 view .LVU771
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2796              		.loc 1 2762 16 is_stmt 0 view .LVU772
 2797 00b2 E26A     		ldr	r2, [r4, #44]
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2798              		.loc 1 2762 44 view .LVU773
 2799 00b4 134B     		ldr	r3, .L214+24
 2800 00b6 1B68     		ldr	r3, [r3]
 2801 00b8 DB6A     		ldr	r3, [r3, #44]
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2802              		.loc 1 2762 9 view .LVU774
 2803 00ba 9A42     		cmp	r2, r3
 2804 00bc D4D2     		bcs	.L208
 2805 00be D4E7     		b	.L198
 2806              	.LVL196:
 2807              	.L207:
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2808              		.loc 1 2762 9 view .LVU775
 2809              	.LBE151:
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2810              		.loc 1 2669 12 view .LVU776
 2811 00c0 0027     		movs	r7, #0
 2812 00c2 D2E7     		b	.L198
 2813              	.LVL197:
 2814              	.L212:
 2815              	.LBB152:
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2816              		.loc 1 2709 6 is_stmt 1 view .LVU777
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2817              		.loc 1 2709 27 is_stmt 0 view .LVU778
 2818 00c4 0E4B     		ldr	r3, .L214+20
 2819 00c6 4FF0FF32 		mov	r2, #-1
 2820 00ca 1A60     		str	r2, [r3]
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccODOtJH.s 			page 157


 2821              		.loc 1 2710 6 is_stmt 1 view .LVU779
 2822 00cc C0E7     		b	.L199
 2823              	.LVL198:
 2824              	.L213:
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2825              		.loc 1 2728 7 view .LVU780
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2826              		.loc 1 2728 28 is_stmt 0 view .LVU781
 2827 00ce 0C4A     		ldr	r2, .L214+20
 2828 00d0 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2829              		.loc 1 2729 7 is_stmt 1 view .LVU782
 2830 00d2 BDE7     		b	.L199
 2831              	.LVL199:
 2832              	.L194:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2833              		.loc 1 2729 7 is_stmt 0 view .LVU783
 2834              	.LBE152:
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2835              		.loc 1 2809 3 is_stmt 1 view .LVU784
 2836 00d4 0E4A     		ldr	r2, .L214+36
 2837 00d6 1368     		ldr	r3, [r2]
 2838 00d8 0133     		adds	r3, r3, #1
 2839 00da 1360     		str	r3, [r2]
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2840              		.loc 1 2669 12 is_stmt 0 view .LVU785
 2841 00dc 0027     		movs	r7, #0
 2842              	.LVL200:
 2843              	.L205:
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2844              		.loc 1 2822 3 is_stmt 1 view .LVU786
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2845              		.loc 1 2822 21 is_stmt 0 view .LVU787
 2846 00de 0D4B     		ldr	r3, .L214+40
 2847 00e0 1B68     		ldr	r3, [r3]
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2848              		.loc 1 2822 5 view .LVU788
 2849 00e2 03B1     		cbz	r3, .L193
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2850              		.loc 1 2824 20 view .LVU789
 2851 00e4 0127     		movs	r7, #1
 2852              	.LVL201:
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2853              		.loc 1 2828 28 is_stmt 1 view .LVU790
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2854              		.loc 1 2833 2 view .LVU791
 2855              	.L193:
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2856              		.loc 1 2834 1 is_stmt 0 view .LVU792
 2857 00e6 3846     		mov	r0, r7
 2858 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2859              	.L215:
 2860 00ea 00BF     		.align	2
 2861              	.L214:
 2862 00ec 00000000 		.word	.LANCHOR16
 2863 00f0 00000000 		.word	.LANCHOR15
 2864 00f4 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccODOtJH.s 			page 158


 2865 00f8 00000000 		.word	.LANCHOR8
 2866 00fc 00000000 		.word	.LANCHOR18
 2867 0100 00000000 		.word	.LANCHOR3
 2868 0104 00000000 		.word	.LANCHOR10
 2869 0108 00000000 		.word	.LANCHOR4
 2870 010c 00000000 		.word	.LANCHOR13
 2871 0110 00000000 		.word	.LANCHOR19
 2872 0114 00000000 		.word	.LANCHOR20
 2873              		.cfi_endproc
 2874              	.LFE26:
 2876              		.section	.text.xTaskResumeAll,"ax",%progbits
 2877              		.align	1
 2878              		.global	xTaskResumeAll
 2879              		.syntax unified
 2880              		.thumb
 2881              		.thumb_func
 2882              		.fpu fpv4-sp-d16
 2884              	xTaskResumeAll:
 2885              	.LFB21:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2886              		.loc 1 2175 1 is_stmt 1 view -0
 2887              		.cfi_startproc
 2888              		@ args = 0, pretend = 0, frame = 0
 2889              		@ frame_needed = 0, uses_anonymous_args = 0
 2890 0000 38B5     		push	{r3, r4, r5, lr}
 2891              	.LCFI27:
 2892              		.cfi_def_cfa_offset 16
 2893              		.cfi_offset 3, -16
 2894              		.cfi_offset 4, -12
 2895              		.cfi_offset 5, -8
 2896              		.cfi_offset 14, -4
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2897              		.loc 1 2176 1 view .LVU794
 2898              	.LVL202:
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2899              		.loc 1 2177 1 view .LVU795
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2900              		.loc 1 2181 2 view .LVU796
 2901 0002 354B     		ldr	r3, .L232
 2902 0004 1B68     		ldr	r3, [r3]
 2903 0006 43B9     		cbnz	r3, .L217
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2904              		.loc 1 2181 2 view .LVU797
 2905              	.LBB153:
 2906              	.LBI153:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2907              		.loc 2 191 30 view .LVU798
 2908              	.LBB154:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2909              		.loc 2 193 1 view .LVU799
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2910              		.loc 2 195 2 view .LVU800
 2911              		.syntax unified
 2912              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2913 0008 4FF05003 			mov r3, #80												
 2914 000c 83F31188 		msr basepri, r3											
 2915 0010 BFF36F8F 		isb														
ARM GAS  /tmp/ccODOtJH.s 			page 159


 2916 0014 BFF34F8F 		dsb														
 2917              	
 2918              	@ 0 "" 2
 2919              	.LVL203:
 2920              		.thumb
 2921              		.syntax unified
 2922              	.L218:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2923              		.loc 2 195 2 is_stmt 0 view .LVU801
 2924              	.LBE154:
 2925              	.LBE153:
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2926              		.loc 1 2181 2 is_stmt 1 discriminator 1 view .LVU802
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2927              		.loc 1 2181 2 discriminator 1 view .LVU803
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2928              		.loc 1 2181 2 discriminator 1 view .LVU804
 2929 0018 FEE7     		b	.L218
 2930              	.L217:
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2931              		.loc 1 2181 38 discriminator 2 view .LVU805
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2932              		.loc 1 2188 2 discriminator 2 view .LVU806
 2933 001a FFF7FEFF 		bl	vPortEnterCritical
 2934              	.LVL204:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2935              		.loc 1 2190 3 discriminator 2 view .LVU807
 2936 001e 2E4B     		ldr	r3, .L232
 2937 0020 1A68     		ldr	r2, [r3]
 2938 0022 013A     		subs	r2, r2, #1
 2939 0024 1A60     		str	r2, [r3]
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2940              		.loc 1 2192 3 discriminator 2 view .LVU808
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2941              		.loc 1 2192 28 is_stmt 0 discriminator 2 view .LVU809
 2942 0026 1B68     		ldr	r3, [r3]
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2943              		.loc 1 2192 5 discriminator 2 view .LVU810
 2944 0028 002B     		cmp	r3, #0
 2945 002a 4FD1     		bne	.L227
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2946              		.loc 1 2194 4 is_stmt 1 view .LVU811
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2947              		.loc 1 2194 31 is_stmt 0 view .LVU812
 2948 002c 2B4B     		ldr	r3, .L232+4
 2949 002e 1B68     		ldr	r3, [r3]
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2950              		.loc 1 2194 6 view .LVU813
 2951 0030 0BB9     		cbnz	r3, .L228
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2952              		.loc 1 2177 12 view .LVU814
 2953 0032 0024     		movs	r4, #0
 2954 0034 4BE0     		b	.L219
 2955              	.L228:
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2956              		.loc 1 2176 8 view .LVU815
 2957 0036 0024     		movs	r4, #0
ARM GAS  /tmp/ccODOtJH.s 			page 160


 2958              	.LVL205:
 2959              	.L220:
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2960              		.loc 1 2213 31 is_stmt 1 view .LVU816
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2961              		.loc 1 2198 10 view .LVU817
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2962              		.loc 1 2198 12 is_stmt 0 view .LVU818
 2963 0038 294B     		ldr	r3, .L232+8
 2964 003a 1B68     		ldr	r3, [r3]
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2965              		.loc 1 2198 10 view .LVU819
 2966 003c 1BB3     		cbz	r3, .L230
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2967              		.loc 1 2200 6 is_stmt 1 view .LVU820
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2968              		.loc 1 2200 14 is_stmt 0 view .LVU821
 2969 003e 284B     		ldr	r3, .L232+8
 2970 0040 DB68     		ldr	r3, [r3, #12]
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2971              		.loc 1 2200 12 view .LVU822
 2972 0042 DC68     		ldr	r4, [r3, #12]
 2973              	.LVL206:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2974              		.loc 1 2201 6 is_stmt 1 view .LVU823
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2975              		.loc 1 2201 15 is_stmt 0 view .LVU824
 2976 0044 04F11800 		add	r0, r4, #24
 2977 0048 FFF7FEFF 		bl	uxListRemove
 2978              	.LVL207:
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2979              		.loc 1 2202 6 is_stmt 1 view .LVU825
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2980              		.loc 1 2202 15 is_stmt 0 view .LVU826
 2981 004c 251D     		adds	r5, r4, #4
 2982 004e 2846     		mov	r0, r5
 2983 0050 FFF7FEFF 		bl	uxListRemove
 2984              	.LVL208:
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2985              		.loc 1 2203 6 is_stmt 1 view .LVU827
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2986              		.loc 1 2203 6 view .LVU828
 2987 0054 E06A     		ldr	r0, [r4, #44]
 2988 0056 0123     		movs	r3, #1
 2989 0058 8340     		lsls	r3, r3, r0
 2990 005a 224A     		ldr	r2, .L232+12
 2991 005c 1168     		ldr	r1, [r2]
 2992 005e 0B43     		orrs	r3, r3, r1
 2993 0060 1360     		str	r3, [r2]
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2994              		.loc 1 2203 6 view .LVU829
 2995 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2996 0066 2946     		mov	r1, r5
 2997 0068 1F4B     		ldr	r3, .L232+16
 2998 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2999 006e FFF7FEFF 		bl	vListInsertEnd
 3000              	.LVL209:
ARM GAS  /tmp/ccODOtJH.s 			page 161


2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3001              		.loc 1 2203 36 view .LVU830
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3002              		.loc 1 2207 6 view .LVU831
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3003              		.loc 1 2207 15 is_stmt 0 view .LVU832
 3004 0072 E26A     		ldr	r2, [r4, #44]
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3005              		.loc 1 2207 43 view .LVU833
 3006 0074 1D4B     		ldr	r3, .L232+20
 3007 0076 1B68     		ldr	r3, [r3]
 3008 0078 DB6A     		ldr	r3, [r3, #44]
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3009              		.loc 1 2207 8 view .LVU834
 3010 007a 9A42     		cmp	r2, r3
 3011 007c DCD3     		bcc	.L220
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3012              		.loc 1 2209 7 is_stmt 1 view .LVU835
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3013              		.loc 1 2209 21 is_stmt 0 view .LVU836
 3014 007e 1C4B     		ldr	r3, .L232+24
 3015 0080 0122     		movs	r2, #1
 3016 0082 1A60     		str	r2, [r3]
 3017 0084 D8E7     		b	.L220
 3018              	.L230:
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3019              		.loc 1 2217 5 is_stmt 1 view .LVU837
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3020              		.loc 1 2217 7 is_stmt 0 view .LVU838
 3021 0086 0CB1     		cbz	r4, .L223
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3022              		.loc 1 2225 6 is_stmt 1 view .LVU839
 3023 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3024              	.LVL210:
 3025              	.L223:
 3026              	.LBB155:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3027              		.loc 1 2233 6 view .LVU840
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3028              		.loc 1 2233 18 is_stmt 0 view .LVU841
 3029 008c 194B     		ldr	r3, .L232+28
 3030 008e 1C68     		ldr	r4, [r3]
 3031              	.LVL211:
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3032              		.loc 1 2235 6 is_stmt 1 view .LVU842
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3033              		.loc 1 2235 8 is_stmt 0 view .LVU843
 3034 0090 84B9     		cbnz	r4, .L226
 3035              	.L224:
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3036              		.loc 1 2254 31 is_stmt 1 view .LVU844
 3037              	.LBE155:
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3038              		.loc 1 2258 5 view .LVU845
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3039              		.loc 1 2258 23 is_stmt 0 view .LVU846
 3040 0092 174B     		ldr	r3, .L232+24
ARM GAS  /tmp/ccODOtJH.s 			page 162


 3041 0094 1C68     		ldr	r4, [r3]
 3042              	.LVL212:
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3043              		.loc 1 2258 7 view .LVU847
 3044 0096 D4B1     		cbz	r4, .L219
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3045              		.loc 1 2262 7 is_stmt 1 view .LVU848
 3046              	.LVL213:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3047              		.loc 1 2265 6 view .LVU849
 3048 0098 4FF0E023 		mov	r3, #-536813568
 3049 009c 4FF08052 		mov	r2, #268435456
 3050 00a0 C3F8042D 		str	r2, [r3, #3332]
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3051              		.loc 1 2265 6 view .LVU850
 3052              		.syntax unified
 3053              	@ 2265 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3054 00a4 BFF34F8F 		dsb
 3055              	@ 0 "" 2
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3056              		.loc 1 2265 6 view .LVU851
 3057              	@ 2265 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3058 00a8 BFF36F8F 		isb
 3059              	@ 0 "" 2
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3060              		.loc 1 2265 37 view .LVU852
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3061              		.loc 1 2262 23 is_stmt 0 view .LVU853
 3062              		.thumb
 3063              		.syntax unified
 3064 00ac 0124     		movs	r4, #1
 3065 00ae 0EE0     		b	.L219
 3066              	.LVL214:
 3067              	.L225:
 3068              	.LBB156:
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3069              		.loc 1 2245 33 is_stmt 1 view .LVU854
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 3070              		.loc 1 2247 8 view .LVU855
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3071              		.loc 1 2248 14 view .LVU856
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3072              		.loc 1 2248 7 is_stmt 0 view .LVU857
 3073 00b0 013C     		subs	r4, r4, #1
 3074              	.LVL215:
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3075              		.loc 1 2248 7 view .LVU858
 3076 00b2 07D0     		beq	.L231
 3077              	.L226:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3078              		.loc 1 2237 7 is_stmt 1 view .LVU859
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3079              		.loc 1 2239 8 view .LVU860
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3080              		.loc 1 2239 12 is_stmt 0 view .LVU861
 3081 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3082              	.LVL216:
ARM GAS  /tmp/ccODOtJH.s 			page 163


2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3083              		.loc 1 2239 10 view .LVU862
 3084 00b8 0028     		cmp	r0, #0
 3085 00ba F9D0     		beq	.L225
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3086              		.loc 1 2241 9 is_stmt 1 view .LVU863
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3087              		.loc 1 2241 23 is_stmt 0 view .LVU864
 3088 00bc 0C4B     		ldr	r3, .L232+24
 3089 00be 0122     		movs	r2, #1
 3090 00c0 1A60     		str	r2, [r3]
 3091 00c2 F5E7     		b	.L225
 3092              	.L231:
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3093              		.loc 1 2250 7 is_stmt 1 view .LVU865
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3094              		.loc 1 2250 21 is_stmt 0 view .LVU866
 3095 00c4 0B4B     		ldr	r3, .L232+28
 3096 00c6 0022     		movs	r2, #0
 3097 00c8 1A60     		str	r2, [r3]
 3098 00ca E2E7     		b	.L224
 3099              	.LVL217:
 3100              	.L227:
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3101              		.loc 1 2250 21 view .LVU867
 3102              	.LBE156:
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3103              		.loc 1 2177 12 view .LVU868
 3104 00cc 0024     		movs	r4, #0
 3105              	.LVL218:
 3106              	.L219:
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3107              		.loc 1 2275 28 is_stmt 1 view .LVU869
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3108              		.loc 1 2278 2 view .LVU870
 3109 00ce FFF7FEFF 		bl	vPortExitCritical
 3110              	.LVL219:
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3111              		.loc 1 2280 2 view .LVU871
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3112              		.loc 1 2281 1 is_stmt 0 view .LVU872
 3113 00d2 2046     		mov	r0, r4
 3114 00d4 38BD     		pop	{r3, r4, r5, pc}
 3115              	.LVL220:
 3116              	.L233:
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3117              		.loc 1 2281 1 view .LVU873
 3118 00d6 00BF     		.align	2
 3119              	.L232:
 3120 00d8 00000000 		.word	.LANCHOR16
 3121 00dc 00000000 		.word	.LANCHOR9
 3122 00e0 00000000 		.word	.LANCHOR1
 3123 00e4 00000000 		.word	.LANCHOR13
 3124 00e8 00000000 		.word	.LANCHOR4
 3125 00ec 00000000 		.word	.LANCHOR10
 3126 00f0 00000000 		.word	.LANCHOR20
 3127 00f4 00000000 		.word	.LANCHOR19
ARM GAS  /tmp/ccODOtJH.s 			page 164


 3128              		.cfi_endproc
 3129              	.LFE21:
 3131              		.section	.text.vTaskDelay,"ax",%progbits
 3132              		.align	1
 3133              		.global	vTaskDelay
 3134              		.syntax unified
 3135              		.thumb
 3136              		.thumb_func
 3137              		.fpu fpv4-sp-d16
 3139              	vTaskDelay:
 3140              	.LVL221:
 3141              	.LFB10:
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3142              		.loc 1 1334 2 is_stmt 1 view -0
 3143              		.cfi_startproc
 3144              		@ args = 0, pretend = 0, frame = 0
 3145              		@ frame_needed = 0, uses_anonymous_args = 0
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3146              		.loc 1 1334 2 is_stmt 0 view .LVU875
 3147 0000 10B5     		push	{r4, lr}
 3148              	.LCFI28:
 3149              		.cfi_def_cfa_offset 8
 3150              		.cfi_offset 4, -8
 3151              		.cfi_offset 14, -4
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3152              		.loc 1 1335 2 is_stmt 1 view .LVU876
 3153              	.LVL222:
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3154              		.loc 1 1338 3 view .LVU877
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3155              		.loc 1 1338 5 is_stmt 0 view .LVU878
 3156 0002 A8B1     		cbz	r0, .L235
 3157 0004 0446     		mov	r4, r0
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3158              		.loc 1 1340 4 is_stmt 1 view .LVU879
 3159 0006 104B     		ldr	r3, .L240
 3160 0008 1B68     		ldr	r3, [r3]
 3161 000a 43B1     		cbz	r3, .L236
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3162              		.loc 1 1340 4 view .LVU880
 3163              	.LBB157:
 3164              	.LBI157:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3165              		.loc 2 191 30 view .LVU881
 3166              	.LBB158:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3167              		.loc 2 193 1 view .LVU882
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3168              		.loc 2 195 2 view .LVU883
 3169              		.syntax unified
 3170              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3171 000c 4FF05003 			mov r3, #80												
 3172 0010 83F31188 		msr basepri, r3											
 3173 0014 BFF36F8F 		isb														
 3174 0018 BFF34F8F 		dsb														
 3175              	
 3176              	@ 0 "" 2
ARM GAS  /tmp/ccODOtJH.s 			page 165


 3177              	.LVL223:
 3178              		.thumb
 3179              		.syntax unified
 3180              	.L237:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3181              		.loc 2 195 2 is_stmt 0 view .LVU884
 3182              	.LBE158:
 3183              	.LBE157:
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3184              		.loc 1 1340 4 is_stmt 1 discriminator 1 view .LVU885
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3185              		.loc 1 1340 4 discriminator 1 view .LVU886
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3186              		.loc 1 1340 4 discriminator 1 view .LVU887
 3187 001c FEE7     		b	.L237
 3188              	.L236:
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3189              		.loc 1 1340 45 discriminator 2 view .LVU888
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3190              		.loc 1 1341 4 discriminator 2 view .LVU889
 3191 001e FFF7FEFF 		bl	vTaskSuspendAll
 3192              	.LVL224:
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3193              		.loc 1 1343 22 discriminator 2 view .LVU890
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3194              		.loc 1 1352 5 discriminator 2 view .LVU891
 3195 0022 0021     		movs	r1, #0
 3196 0024 2046     		mov	r0, r4
 3197 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3198              	.LVL225:
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3199              		.loc 1 1354 4 discriminator 2 view .LVU892
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3200              		.loc 1 1354 22 is_stmt 0 discriminator 2 view .LVU893
 3201 002a FFF7FEFF 		bl	xTaskResumeAll
 3202              	.LVL226:
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3203              		.loc 1 1358 28 is_stmt 1 discriminator 2 view .LVU894
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3204              		.loc 1 1363 3 discriminator 2 view .LVU895
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3205              		.loc 1 1363 5 is_stmt 0 discriminator 2 view .LVU896
 3206 002e 48B9     		cbnz	r0, .L234
 3207              	.LVL227:
 3208              	.L235:
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3209              		.loc 1 1365 4 is_stmt 1 view .LVU897
 3210 0030 4FF0E023 		mov	r3, #-536813568
 3211 0034 4FF08052 		mov	r2, #268435456
 3212 0038 C3F8042D 		str	r2, [r3, #3332]
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3213              		.loc 1 1365 4 view .LVU898
 3214              		.syntax unified
 3215              	@ 1365 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3216 003c BFF34F8F 		dsb
 3217              	@ 0 "" 2
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccODOtJH.s 			page 166


 3218              		.loc 1 1365 4 view .LVU899
 3219              	@ 1365 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3220 0040 BFF36F8F 		isb
 3221              	@ 0 "" 2
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3222              		.loc 1 1365 26 view .LVU900
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3223              		.loc 1 1369 28 view .LVU901
 3224              		.thumb
 3225              		.syntax unified
 3226              	.L234:
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3227              		.loc 1 1371 2 is_stmt 0 view .LVU902
 3228 0044 10BD     		pop	{r4, pc}
 3229              	.L241:
 3230 0046 00BF     		.align	2
 3231              	.L240:
 3232 0048 00000000 		.word	.LANCHOR16
 3233              		.cfi_endproc
 3234              	.LFE10:
 3236              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3237              		.align	1
 3238              		.global	vTaskSwitchContext
 3239              		.syntax unified
 3240              		.thumb
 3241              		.thumb_func
 3242              		.fpu fpv4-sp-d16
 3244              	vTaskSwitchContext:
 3245              	.LFB27:
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3246              		.loc 1 2948 1 is_stmt 1 view -0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 0
 3249              		@ frame_needed = 0, uses_anonymous_args = 0
 3250              		@ link register save eliminated.
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3251              		.loc 1 2949 2 view .LVU904
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3252              		.loc 1 2949 27 is_stmt 0 view .LVU905
 3253 0000 204B     		ldr	r3, .L249
 3254 0002 1B68     		ldr	r3, [r3]
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3255              		.loc 1 2949 4 view .LVU906
 3256 0004 1BB1     		cbz	r3, .L243
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3257              		.loc 1 2953 3 is_stmt 1 view .LVU907
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3258              		.loc 1 2953 17 is_stmt 0 view .LVU908
 3259 0006 204B     		ldr	r3, .L249+4
 3260 0008 0122     		movs	r2, #1
 3261 000a 1A60     		str	r2, [r3]
 3262 000c 7047     		bx	lr
 3263              	.L243:
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3264              		.loc 1 2957 3 is_stmt 1 view .LVU909
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3265              		.loc 1 2957 17 is_stmt 0 view .LVU910
ARM GAS  /tmp/ccODOtJH.s 			page 167


 3266 000e 1E4B     		ldr	r3, .L249+4
 3267 0010 0022     		movs	r2, #0
 3268 0012 1A60     		str	r2, [r3]
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3269              		.loc 1 2958 27 is_stmt 1 view .LVU911
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3270              		.loc 1 2988 33 view .LVU912
 3271              	.LBB159:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3272              		.loc 1 2999 3 view .LVU913
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3273              		.loc 1 2999 3 view .LVU914
 3274 0014 1D4B     		ldr	r3, .L249+8
 3275 0016 1B68     		ldr	r3, [r3]
 3276              	.LVL228:
 3277              	.LBB160:
 3278              	.LBI160:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 3279              		.loc 2 130 59 view .LVU915
 3280              	.LBB161:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3281              		.loc 2 132 2 view .LVU916
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3282              		.loc 2 134 3 view .LVU917
 3283              		.syntax unified
 3284              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3285 0018 B3FA83F3 		clz r3, r3
 3286              	@ 0 "" 2
 3287              	.LVL229:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3288              		.loc 2 134 3 is_stmt 0 view .LVU918
 3289              		.thumb
 3290              		.syntax unified
 3291 001c DBB2     		uxtb	r3, r3
 3292              	.LVL230:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3293              		.loc 2 135 3 is_stmt 1 view .LVU919
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3294              		.loc 2 135 3 is_stmt 0 view .LVU920
 3295              	.LBE161:
 3296              	.LBE160:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3297              		.loc 1 2999 3 view .LVU921
 3298 001e C3F11F03 		rsb	r3, r3, #31
 3299              	.LVL231:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3300              		.loc 1 2999 3 is_stmt 1 view .LVU922
 3301 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3302 0026 8A00     		lsls	r2, r1, #2
 3303 0028 1949     		ldr	r1, .L249+12
 3304 002a 8A58     		ldr	r2, [r1, r2]
 3305 002c 42B9     		cbnz	r2, .L245
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3306              		.loc 1 2999 3 view .LVU923
 3307              	.LBB162:
 3308              	.LBI162:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/ccODOtJH.s 			page 168


 3309              		.loc 2 191 30 view .LVU924
 3310              	.LBB163:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3311              		.loc 2 193 1 view .LVU925
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3312              		.loc 2 195 2 view .LVU926
 3313              		.syntax unified
 3314              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3315 002e 4FF05003 			mov r3, #80												
 3316 0032 83F31188 		msr basepri, r3											
 3317 0036 BFF36F8F 		isb														
 3318 003a BFF34F8F 		dsb														
 3319              	
 3320              	@ 0 "" 2
 3321              	.LVL232:
 3322              		.thumb
 3323              		.syntax unified
 3324              	.L246:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3325              		.loc 2 195 2 is_stmt 0 view .LVU927
 3326              	.LBE163:
 3327              	.LBE162:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3328              		.loc 1 2999 3 is_stmt 1 discriminator 1 view .LVU928
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3329              		.loc 1 2999 3 discriminator 1 view .LVU929
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3330              		.loc 1 2999 3 discriminator 1 view .LVU930
 3331 003e FEE7     		b	.L246
 3332              	.LVL233:
 3333              	.L245:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3334              		.loc 1 2999 3 discriminator 2 view .LVU931
 3335              	.LBB164:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3336              		.loc 1 2999 3 discriminator 2 view .LVU932
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3337              		.loc 1 2999 3 discriminator 2 view .LVU933
 3338 0040 1349     		ldr	r1, .L249+12
 3339 0042 03EB8300 		add	r0, r3, r3, lsl #2
 3340 0046 8200     		lsls	r2, r0, #2
 3341 0048 0A44     		add	r2, r2, r1
 3342 004a 5068     		ldr	r0, [r2, #4]
 3343 004c 4068     		ldr	r0, [r0, #4]
 3344 004e 5060     		str	r0, [r2, #4]
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3345              		.loc 1 2999 3 discriminator 2 view .LVU934
 3346 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3347 0054 4FEA8C02 		lsl	r2, ip, #2
 3348 0058 0832     		adds	r2, r2, #8
 3349 005a 1144     		add	r1, r1, r2
 3350 005c 8842     		cmp	r0, r1
 3351 005e 09D0     		beq	.L248
 3352              	.L247:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3353              		.loc 1 2999 3 discriminator 6 view .LVU935
 3354 0060 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  /tmp/ccODOtJH.s 			page 169


 3355              	.LVL234:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3356              		.loc 1 2999 3 is_stmt 0 discriminator 6 view .LVU936
 3357 0064 9A00     		lsls	r2, r3, #2
 3358 0066 0A4B     		ldr	r3, .L249+12
 3359 0068 1344     		add	r3, r3, r2
 3360 006a 5B68     		ldr	r3, [r3, #4]
 3361 006c DA68     		ldr	r2, [r3, #12]
 3362 006e 094B     		ldr	r3, .L249+16
 3363 0070 1A60     		str	r2, [r3]
 3364              	.LBE164:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3365              		.loc 1 2999 3 is_stmt 1 discriminator 6 view .LVU937
 3366              	.LBE159:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3367              		.loc 1 2999 37 discriminator 6 view .LVU938
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3368              		.loc 1 3000 26 discriminator 6 view .LVU939
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3369              		.loc 1 3017 1 is_stmt 0 discriminator 6 view .LVU940
 3370 0072 7047     		bx	lr
 3371              	.LVL235:
 3372              	.L248:
 3373              	.LBB166:
 3374              	.LBB165:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3375              		.loc 1 2999 3 is_stmt 1 discriminator 4 view .LVU941
 3376 0074 4068     		ldr	r0, [r0, #4]
 3377 0076 6246     		mov	r2, ip
 3378 0078 9100     		lsls	r1, r2, #2
 3379 007a 054A     		ldr	r2, .L249+12
 3380 007c 0A44     		add	r2, r2, r1
 3381 007e 5060     		str	r0, [r2, #4]
 3382 0080 EEE7     		b	.L247
 3383              	.L250:
 3384 0082 00BF     		.align	2
 3385              	.L249:
 3386 0084 00000000 		.word	.LANCHOR16
 3387 0088 00000000 		.word	.LANCHOR20
 3388 008c 00000000 		.word	.LANCHOR13
 3389 0090 00000000 		.word	.LANCHOR4
 3390 0094 00000000 		.word	.LANCHOR10
 3391              	.LBE165:
 3392              	.LBE166:
 3393              		.cfi_endproc
 3394              	.LFE27:
 3396              		.section	.text.vTaskSuspend,"ax",%progbits
 3397              		.align	1
 3398              		.global	vTaskSuspend
 3399              		.syntax unified
 3400              		.thumb
 3401              		.thumb_func
 3402              		.fpu fpv4-sp-d16
 3404              	vTaskSuspend:
 3405              	.LVL236:
 3406              	.LFB14:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/ccODOtJH.s 			page 170


 3407              		.loc 1 1697 2 view -0
 3408              		.cfi_startproc
 3409              		@ args = 0, pretend = 0, frame = 0
 3410              		@ frame_needed = 0, uses_anonymous_args = 0
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3411              		.loc 1 1697 2 is_stmt 0 view .LVU943
 3412 0000 38B5     		push	{r3, r4, r5, lr}
 3413              	.LCFI29:
 3414              		.cfi_def_cfa_offset 16
 3415              		.cfi_offset 3, -16
 3416              		.cfi_offset 4, -12
 3417              		.cfi_offset 5, -8
 3418              		.cfi_offset 14, -4
 3419 0002 0446     		mov	r4, r0
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3420              		.loc 1 1698 2 is_stmt 1 view .LVU944
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3421              		.loc 1 1700 3 view .LVU945
 3422 0004 FFF7FEFF 		bl	vPortEnterCritical
 3423              	.LVL237:
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3424              		.loc 1 1704 4 view .LVU946
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3425              		.loc 1 1704 12 is_stmt 0 view .LVU947
 3426 0008 5CB3     		cbz	r4, .L263
 3427              	.LVL238:
 3428              	.L252:
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3429              		.loc 1 1706 30 is_stmt 1 discriminator 4 view .LVU948
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3430              		.loc 1 1710 4 discriminator 4 view .LVU949
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3431              		.loc 1 1710 8 is_stmt 0 discriminator 4 view .LVU950
 3432 000a 251D     		adds	r5, r4, #4
 3433 000c 2846     		mov	r0, r5
 3434 000e FFF7FEFF 		bl	uxListRemove
 3435              	.LVL239:
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3436              		.loc 1 1710 6 discriminator 4 view .LVU951
 3437 0012 68B9     		cbnz	r0, .L253
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3438              		.loc 1 1712 5 is_stmt 1 view .LVU952
 3439 0014 E26A     		ldr	r2, [r4, #44]
 3440 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3441 001a 9B00     		lsls	r3, r3, #2
 3442 001c 2B49     		ldr	r1, .L267
 3443 001e CB58     		ldr	r3, [r1, r3]
 3444 0020 33B9     		cbnz	r3, .L253
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3445              		.loc 1 1712 5 discriminator 1 view .LVU953
 3446 0022 0123     		movs	r3, #1
 3447 0024 9340     		lsls	r3, r3, r2
 3448 0026 2A49     		ldr	r1, .L267+4
 3449 0028 0A68     		ldr	r2, [r1]
 3450 002a 22EA0302 		bic	r2, r2, r3
 3451 002e 0A60     		str	r2, [r1]
 3452              	.L253:
ARM GAS  /tmp/ccODOtJH.s 			page 171


1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3453              		.loc 1 1716 29 view .LVU954
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3454              		.loc 1 1720 4 view .LVU955
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3455              		.loc 1 1720 8 is_stmt 0 view .LVU956
 3456 0030 A36A     		ldr	r3, [r4, #40]
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3457              		.loc 1 1720 6 view .LVU957
 3458 0032 1BB1     		cbz	r3, .L254
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3459              		.loc 1 1722 5 is_stmt 1 view .LVU958
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3460              		.loc 1 1722 14 is_stmt 0 view .LVU959
 3461 0034 04F11800 		add	r0, r4, #24
 3462 0038 FFF7FEFF 		bl	uxListRemove
 3463              	.LVL240:
 3464              	.L254:
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3465              		.loc 1 1726 29 is_stmt 1 view .LVU960
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3466              		.loc 1 1729 4 view .LVU961
 3467 003c 2946     		mov	r1, r5
 3468 003e 2548     		ldr	r0, .L267+8
 3469 0040 FFF7FEFF 		bl	vListInsertEnd
 3470              	.LVL241:
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3471              		.loc 1 1733 5 view .LVU962
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3472              		.loc 1 1733 14 is_stmt 0 view .LVU963
 3473 0044 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3474 0048 DBB2     		uxtb	r3, r3
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3475              		.loc 1 1733 7 view .LVU964
 3476 004a 012B     		cmp	r3, #1
 3477 004c 0CD0     		beq	.L264
 3478              	.L255:
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3479              		.loc 1 1742 3 is_stmt 1 view .LVU965
 3480 004e FFF7FEFF 		bl	vPortExitCritical
 3481              	.LVL242:
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3482              		.loc 1 1744 3 view .LVU966
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3483              		.loc 1 1744 25 is_stmt 0 view .LVU967
 3484 0052 214B     		ldr	r3, .L267+12
 3485 0054 1B68     		ldr	r3, [r3]
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3486              		.loc 1 1744 5 view .LVU968
 3487 0056 5BB9     		cbnz	r3, .L265
 3488              	.L256:
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3489              		.loc 1 1756 28 is_stmt 1 view .LVU969
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3490              		.loc 1 1759 3 view .LVU970
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3491              		.loc 1 1759 13 is_stmt 0 view .LVU971
ARM GAS  /tmp/ccODOtJH.s 			page 172


 3492 0058 204B     		ldr	r3, .L267+16
 3493 005a 1B68     		ldr	r3, [r3]
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3494              		.loc 1 1759 5 view .LVU972
 3495 005c A342     		cmp	r3, r4
 3496 005e 0ED0     		beq	.L266
 3497              	.L251:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3498              		.loc 1 1790 2 view .LVU973
 3499 0060 38BD     		pop	{r3, r4, r5, pc}
 3500              	.LVL243:
 3501              	.L263:
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3502              		.loc 1 1704 12 discriminator 1 view .LVU974
 3503 0062 1E4B     		ldr	r3, .L267+16
 3504 0064 1C68     		ldr	r4, [r3]
 3505              	.LVL244:
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3506              		.loc 1 1704 12 discriminator 1 view .LVU975
 3507 0066 D0E7     		b	.L252
 3508              	.LVL245:
 3509              	.L264:
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3510              		.loc 1 1737 6 is_stmt 1 view .LVU976
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3511              		.loc 1 1737 27 is_stmt 0 view .LVU977
 3512 0068 0023     		movs	r3, #0
 3513 006a 84F85030 		strb	r3, [r4, #80]
 3514 006e EEE7     		b	.L255
 3515              	.L265:
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3516              		.loc 1 1748 4 is_stmt 1 view .LVU978
 3517 0070 FFF7FEFF 		bl	vPortEnterCritical
 3518              	.LVL246:
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3519              		.loc 1 1750 5 view .LVU979
 3520 0074 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3521              	.LVL247:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3522              		.loc 1 1752 4 view .LVU980
 3523 0078 FFF7FEFF 		bl	vPortExitCritical
 3524              	.LVL248:
 3525 007c ECE7     		b	.L256
 3526              	.L266:
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3527              		.loc 1 1761 4 view .LVU981
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3528              		.loc 1 1761 26 is_stmt 0 view .LVU982
 3529 007e 164B     		ldr	r3, .L267+12
 3530 0080 1B68     		ldr	r3, [r3]
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3531              		.loc 1 1761 6 view .LVU983
 3532 0082 B3B1     		cbz	r3, .L258
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3533              		.loc 1 1764 5 is_stmt 1 view .LVU984
 3534 0084 164B     		ldr	r3, .L267+20
 3535 0086 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccODOtJH.s 			page 173


 3536 0088 43B1     		cbz	r3, .L259
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3537              		.loc 1 1764 5 view .LVU985
 3538              	.LBB167:
 3539              	.LBI167:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3540              		.loc 2 191 30 view .LVU986
 3541              	.LBB168:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3542              		.loc 2 193 1 view .LVU987
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3543              		.loc 2 195 2 view .LVU988
 3544              		.syntax unified
 3545              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3546 008a 4FF05003 			mov r3, #80												
 3547 008e 83F31188 		msr basepri, r3											
 3548 0092 BFF36F8F 		isb														
 3549 0096 BFF34F8F 		dsb														
 3550              	
 3551              	@ 0 "" 2
 3552              	.LVL249:
 3553              		.thumb
 3554              		.syntax unified
 3555              	.L260:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3556              		.loc 2 195 2 is_stmt 0 view .LVU989
 3557              	.LBE168:
 3558              	.LBE167:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3559              		.loc 1 1764 5 is_stmt 1 discriminator 1 view .LVU990
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3560              		.loc 1 1764 5 discriminator 1 view .LVU991
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3561              		.loc 1 1764 5 discriminator 1 view .LVU992
 3562 009a FEE7     		b	.L260
 3563              	.L259:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3564              		.loc 1 1764 46 discriminator 2 view .LVU993
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3565              		.loc 1 1765 5 discriminator 2 view .LVU994
 3566 009c 4FF0E023 		mov	r3, #-536813568
 3567 00a0 4FF08052 		mov	r2, #268435456
 3568 00a4 C3F8042D 		str	r2, [r3, #3332]
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3569              		.loc 1 1765 5 discriminator 2 view .LVU995
 3570              		.syntax unified
 3571              	@ 1765 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3572 00a8 BFF34F8F 		dsb
 3573              	@ 0 "" 2
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3574              		.loc 1 1765 5 discriminator 2 view .LVU996
 3575              	@ 1765 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3576 00ac BFF36F8F 		isb
 3577              	@ 0 "" 2
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3578              		.loc 1 1765 27 discriminator 2 view .LVU997
 3579              		.thumb
ARM GAS  /tmp/ccODOtJH.s 			page 174


 3580              		.syntax unified
 3581 00b0 D6E7     		b	.L251
 3582              	.L258:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3583              		.loc 1 1772 5 view .LVU998
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3584              		.loc 1 1772 9 is_stmt 0 view .LVU999
 3585 00b2 084B     		ldr	r3, .L267+8
 3586 00b4 1A68     		ldr	r2, [r3]
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3587              		.loc 1 1772 56 view .LVU1000
 3588 00b6 0B4B     		ldr	r3, .L267+24
 3589 00b8 1B68     		ldr	r3, [r3]
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3590              		.loc 1 1772 7 view .LVU1001
 3591 00ba 9A42     		cmp	r2, r3
 3592 00bc 03D1     		bne	.L261
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3593              		.loc 1 1778 6 is_stmt 1 view .LVU1002
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3594              		.loc 1 1778 19 is_stmt 0 view .LVU1003
 3595 00be 074B     		ldr	r3, .L267+16
 3596 00c0 0022     		movs	r2, #0
 3597 00c2 1A60     		str	r2, [r3]
 3598 00c4 CCE7     		b	.L251
 3599              	.L261:
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3600              		.loc 1 1782 6 is_stmt 1 view .LVU1004
 3601 00c6 FFF7FEFF 		bl	vTaskSwitchContext
 3602              	.LVL250:
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3603              		.loc 1 1788 28 view .LVU1005
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3604              		.loc 1 1790 2 is_stmt 0 view .LVU1006
 3605 00ca C9E7     		b	.L251
 3606              	.L268:
 3607              		.align	2
 3608              	.L267:
 3609 00cc 00000000 		.word	.LANCHOR4
 3610 00d0 00000000 		.word	.LANCHOR13
 3611 00d4 00000000 		.word	.LANCHOR0
 3612 00d8 00000000 		.word	.LANCHOR11
 3613 00dc 00000000 		.word	.LANCHOR10
 3614 00e0 00000000 		.word	.LANCHOR16
 3615 00e4 00000000 		.word	.LANCHOR9
 3616              		.cfi_endproc
 3617              	.LFE14:
 3619              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3620              		.align	1
 3621              		.global	vTaskPlaceOnEventList
 3622              		.syntax unified
 3623              		.thumb
 3624              		.thumb_func
 3625              		.fpu fpv4-sp-d16
 3627              	vTaskPlaceOnEventList:
 3628              	.LVL251:
 3629              	.LFB28:
ARM GAS  /tmp/ccODOtJH.s 			page 175


3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3630              		.loc 1 3021 1 is_stmt 1 view -0
 3631              		.cfi_startproc
 3632              		@ args = 0, pretend = 0, frame = 0
 3633              		@ frame_needed = 0, uses_anonymous_args = 0
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3634              		.loc 1 3022 2 view .LVU1008
 3635 0000 58B1     		cbz	r0, .L274
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3636              		.loc 1 3021 1 is_stmt 0 discriminator 2 view .LVU1009
 3637 0002 10B5     		push	{r4, lr}
 3638              	.LCFI30:
 3639              		.cfi_def_cfa_offset 8
 3640              		.cfi_offset 4, -8
 3641              		.cfi_offset 14, -4
 3642 0004 0C46     		mov	r4, r1
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3643              		.loc 1 3022 29 is_stmt 1 discriminator 2 view .LVU1010
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3644              		.loc 1 3031 2 discriminator 2 view .LVU1011
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3645              		.loc 1 3031 43 is_stmt 0 discriminator 2 view .LVU1012
 3646 0006 094A     		ldr	r2, .L275
 3647 0008 1168     		ldr	r1, [r2]
 3648              	.LVL252:
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3649              		.loc 1 3031 2 discriminator 2 view .LVU1013
 3650 000a 1831     		adds	r1, r1, #24
 3651 000c FFF7FEFF 		bl	vListInsert
 3652              	.LVL253:
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3653              		.loc 1 3033 2 is_stmt 1 discriminator 2 view .LVU1014
 3654 0010 0121     		movs	r1, #1
 3655 0012 2046     		mov	r0, r4
 3656 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3657              	.LVL254:
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3658              		.loc 1 3034 1 is_stmt 0 discriminator 2 view .LVU1015
 3659 0018 10BD     		pop	{r4, pc}
 3660              	.LVL255:
 3661              	.L274:
 3662              	.LCFI31:
 3663              		.cfi_def_cfa_offset 0
 3664              		.cfi_restore 4
 3665              		.cfi_restore 14
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3666              		.loc 1 3022 2 is_stmt 1 view .LVU1016
 3667              	.LBB169:
 3668              	.LBI169:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3669              		.loc 2 191 30 view .LVU1017
 3670              	.LBB170:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3671              		.loc 2 193 1 view .LVU1018
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3672              		.loc 2 195 2 view .LVU1019
 3673              		.syntax unified
ARM GAS  /tmp/ccODOtJH.s 			page 176


 3674              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3675 001a 4FF05003 			mov r3, #80												
 3676 001e 83F31188 		msr basepri, r3											
 3677 0022 BFF36F8F 		isb														
 3678 0026 BFF34F8F 		dsb														
 3679              	
 3680              	@ 0 "" 2
 3681              	.LVL256:
 3682              		.thumb
 3683              		.syntax unified
 3684              	.L271:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3685              		.loc 2 195 2 is_stmt 0 view .LVU1020
 3686              	.LBE170:
 3687              	.LBE169:
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3688              		.loc 1 3022 2 is_stmt 1 discriminator 1 view .LVU1021
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3689              		.loc 1 3022 2 discriminator 1 view .LVU1022
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3690              		.loc 1 3022 2 discriminator 1 view .LVU1023
 3691 002a FEE7     		b	.L271
 3692              	.L276:
 3693              		.align	2
 3694              	.L275:
 3695 002c 00000000 		.word	.LANCHOR10
 3696              		.cfi_endproc
 3697              	.LFE28:
 3699              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3700              		.align	1
 3701              		.global	vTaskPlaceOnUnorderedEventList
 3702              		.syntax unified
 3703              		.thumb
 3704              		.thumb_func
 3705              		.fpu fpv4-sp-d16
 3707              	vTaskPlaceOnUnorderedEventList:
 3708              	.LVL257:
 3709              	.LFB29:
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3710              		.loc 1 3038 1 view -0
 3711              		.cfi_startproc
 3712              		@ args = 0, pretend = 0, frame = 0
 3713              		@ frame_needed = 0, uses_anonymous_args = 0
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3714              		.loc 1 3039 2 view .LVU1025
 3715 0000 70B1     		cbz	r0, .L284
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3716              		.loc 1 3038 1 is_stmt 0 discriminator 2 view .LVU1026
 3717 0002 10B5     		push	{r4, lr}
 3718              	.LCFI32:
 3719              		.cfi_def_cfa_offset 8
 3720              		.cfi_offset 4, -8
 3721              		.cfi_offset 14, -4
 3722 0004 1446     		mov	r4, r2
 3723 0006 0246     		mov	r2, r0
 3724              	.LVL258:
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 177


 3725              		.loc 1 3039 29 is_stmt 1 discriminator 2 view .LVU1027
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3726              		.loc 1 3043 2 discriminator 2 view .LVU1028
 3727 0008 114B     		ldr	r3, .L285
 3728 000a 1B68     		ldr	r3, [r3]
 3729 000c 8BB9     		cbnz	r3, .L280
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3730              		.loc 1 3043 2 view .LVU1029
 3731              	.LBB171:
 3732              	.LBI171:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3733              		.loc 2 191 30 view .LVU1030
 3734              	.LBB172:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3735              		.loc 2 193 1 view .LVU1031
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3736              		.loc 2 195 2 view .LVU1032
 3737              		.syntax unified
 3738              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3739 000e 4FF05003 			mov r3, #80												
 3740 0012 83F31188 		msr basepri, r3											
 3741 0016 BFF36F8F 		isb														
 3742 001a BFF34F8F 		dsb														
 3743              	
 3744              	@ 0 "" 2
 3745              	.LVL259:
 3746              		.thumb
 3747              		.syntax unified
 3748              	.L281:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3749              		.loc 2 195 2 is_stmt 0 view .LVU1033
 3750              	.LBE172:
 3751              	.LBE171:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3752              		.loc 1 3043 2 is_stmt 1 discriminator 2 view .LVU1034
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3753              		.loc 1 3043 2 discriminator 2 view .LVU1035
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3754              		.loc 1 3043 2 discriminator 2 view .LVU1036
 3755 001e FEE7     		b	.L281
 3756              	.LVL260:
 3757              	.L284:
 3758              	.LCFI33:
 3759              		.cfi_def_cfa_offset 0
 3760              		.cfi_restore 4
 3761              		.cfi_restore 14
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3762              		.loc 1 3039 2 view .LVU1037
 3763              	.LBB173:
 3764              	.LBI173:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3765              		.loc 2 191 30 view .LVU1038
 3766              	.LBB174:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3767              		.loc 2 193 1 view .LVU1039
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3768              		.loc 2 195 2 view .LVU1040
ARM GAS  /tmp/ccODOtJH.s 			page 178


 3769              		.syntax unified
 3770              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3771 0020 4FF05003 			mov r3, #80												
 3772 0024 83F31188 		msr basepri, r3											
 3773 0028 BFF36F8F 		isb														
 3774 002c BFF34F8F 		dsb														
 3775              	
 3776              	@ 0 "" 2
 3777              	.LVL261:
 3778              		.thumb
 3779              		.syntax unified
 3780              	.L279:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3781              		.loc 2 195 2 is_stmt 0 view .LVU1041
 3782              	.LBE174:
 3783              	.LBE173:
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3784              		.loc 1 3039 2 is_stmt 1 discriminator 1 view .LVU1042
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3785              		.loc 1 3039 2 discriminator 1 view .LVU1043
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3786              		.loc 1 3039 2 discriminator 1 view .LVU1044
 3787 0030 FEE7     		b	.L279
 3788              	.LVL262:
 3789              	.L280:
 3790              	.LCFI34:
 3791              		.cfi_def_cfa_offset 8
 3792              		.cfi_offset 4, -8
 3793              		.cfi_offset 14, -4
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3794              		.loc 1 3043 43 discriminator 2 view .LVU1045
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3795              		.loc 1 3048 2 discriminator 2 view .LVU1046
 3796 0032 084B     		ldr	r3, .L285+4
 3797 0034 1868     		ldr	r0, [r3]
 3798              	.LVL263:
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3799              		.loc 1 3048 2 is_stmt 0 discriminator 2 view .LVU1047
 3800 0036 41F00041 		orr	r1, r1, #-2147483648
 3801              	.LVL264:
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3802              		.loc 1 3048 2 discriminator 2 view .LVU1048
 3803 003a 8161     		str	r1, [r0, #24]
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3804              		.loc 1 3055 2 is_stmt 1 discriminator 2 view .LVU1049
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3805              		.loc 1 3055 46 is_stmt 0 discriminator 2 view .LVU1050
 3806 003c 1968     		ldr	r1, [r3]
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3807              		.loc 1 3055 2 discriminator 2 view .LVU1051
 3808 003e 1831     		adds	r1, r1, #24
 3809 0040 1046     		mov	r0, r2
 3810 0042 FFF7FEFF 		bl	vListInsertEnd
 3811              	.LVL265:
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3812              		.loc 1 3057 2 is_stmt 1 discriminator 2 view .LVU1052
 3813 0046 0121     		movs	r1, #1
ARM GAS  /tmp/ccODOtJH.s 			page 179


 3814 0048 2046     		mov	r0, r4
 3815 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3816              	.LVL266:
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3817              		.loc 1 3058 1 is_stmt 0 discriminator 2 view .LVU1053
 3818 004e 10BD     		pop	{r4, pc}
 3819              	.LVL267:
 3820              	.L286:
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3821              		.loc 1 3058 1 discriminator 2 view .LVU1054
 3822              		.align	2
 3823              	.L285:
 3824 0050 00000000 		.word	.LANCHOR16
 3825 0054 00000000 		.word	.LANCHOR10
 3826              		.cfi_endproc
 3827              	.LFE29:
 3829              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3830              		.align	1
 3831              		.global	xTaskRemoveFromEventList
 3832              		.syntax unified
 3833              		.thumb
 3834              		.thumb_func
 3835              		.fpu fpv4-sp-d16
 3837              	xTaskRemoveFromEventList:
 3838              	.LVL268:
 3839              	.LFB30:
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3840              		.loc 1 3095 1 is_stmt 1 view -0
 3841              		.cfi_startproc
 3842              		@ args = 0, pretend = 0, frame = 0
 3843              		@ frame_needed = 0, uses_anonymous_args = 0
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3844              		.loc 1 3095 1 is_stmt 0 view .LVU1056
 3845 0000 38B5     		push	{r3, r4, r5, lr}
 3846              	.LCFI35:
 3847              		.cfi_def_cfa_offset 16
 3848              		.cfi_offset 3, -16
 3849              		.cfi_offset 4, -12
 3850              		.cfi_offset 5, -8
 3851              		.cfi_offset 14, -4
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3852              		.loc 1 3096 1 is_stmt 1 view .LVU1057
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3853              		.loc 1 3097 1 view .LVU1058
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3854              		.loc 1 3112 2 view .LVU1059
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3855              		.loc 1 3112 19 is_stmt 0 view .LVU1060
 3856 0002 C368     		ldr	r3, [r0, #12]
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3857              		.loc 1 3112 17 view .LVU1061
 3858 0004 DC68     		ldr	r4, [r3, #12]
 3859              	.LVL269:
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3860              		.loc 1 3113 2 is_stmt 1 view .LVU1062
 3861 0006 24B3     		cbz	r4, .L295
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
ARM GAS  /tmp/ccODOtJH.s 			page 180


 3862              		.loc 1 3113 32 discriminator 2 view .LVU1063
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3863              		.loc 1 3114 2 discriminator 2 view .LVU1064
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3864              		.loc 1 3114 11 is_stmt 0 discriminator 2 view .LVU1065
 3865 0008 04F11805 		add	r5, r4, #24
 3866 000c 2846     		mov	r0, r5
 3867              	.LVL270:
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3868              		.loc 1 3114 11 discriminator 2 view .LVU1066
 3869 000e FFF7FEFF 		bl	uxListRemove
 3870              	.LVL271:
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3871              		.loc 1 3116 2 is_stmt 1 discriminator 2 view .LVU1067
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3872              		.loc 1 3116 27 is_stmt 0 discriminator 2 view .LVU1068
 3873 0012 184B     		ldr	r3, .L296
 3874 0014 1B68     		ldr	r3, [r3]
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3875              		.loc 1 3116 4 discriminator 2 view .LVU1069
 3876 0016 2BBB     		cbnz	r3, .L290
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3877              		.loc 1 3118 3 is_stmt 1 view .LVU1070
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3878              		.loc 1 3118 12 is_stmt 0 view .LVU1071
 3879 0018 251D     		adds	r5, r4, #4
 3880 001a 2846     		mov	r0, r5
 3881 001c FFF7FEFF 		bl	uxListRemove
 3882              	.LVL272:
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3883              		.loc 1 3119 3 is_stmt 1 view .LVU1072
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3884              		.loc 1 3119 3 view .LVU1073
 3885 0020 E06A     		ldr	r0, [r4, #44]
 3886 0022 0123     		movs	r3, #1
 3887 0024 8340     		lsls	r3, r3, r0
 3888 0026 144A     		ldr	r2, .L296+4
 3889 0028 1168     		ldr	r1, [r2]
 3890 002a 0B43     		orrs	r3, r3, r1
 3891 002c 1360     		str	r3, [r2]
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3892              		.loc 1 3119 3 view .LVU1074
 3893 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3894 0032 2946     		mov	r1, r5
 3895 0034 114B     		ldr	r3, .L296+8
 3896 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3897 003a FFF7FEFF 		bl	vListInsertEnd
 3898              	.LVL273:
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3899              		.loc 1 3119 42 view .LVU1075
 3900              	.L291:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3901              		.loc 1 3142 2 view .LVU1076
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3902              		.loc 1 3142 20 is_stmt 0 view .LVU1077
 3903 003e E26A     		ldr	r2, [r4, #44]
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccODOtJH.s 			page 181


 3904              		.loc 1 3142 47 view .LVU1078
 3905 0040 0F4B     		ldr	r3, .L296+12
 3906 0042 1B68     		ldr	r3, [r3]
 3907 0044 DB6A     		ldr	r3, [r3, #44]
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3908              		.loc 1 3142 4 view .LVU1079
 3909 0046 9A42     		cmp	r2, r3
 3910 0048 11D9     		bls	.L293
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3911              		.loc 1 3147 3 is_stmt 1 view .LVU1080
 3912              	.LVL274:
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3913              		.loc 1 3151 3 view .LVU1081
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3914              		.loc 1 3151 17 is_stmt 0 view .LVU1082
 3915 004a 0120     		movs	r0, #1
 3916 004c 0D4B     		ldr	r3, .L296+16
 3917 004e 1860     		str	r0, [r3]
 3918              	.LVL275:
 3919              	.L287:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3920              		.loc 1 3159 1 view .LVU1083
 3921 0050 38BD     		pop	{r3, r4, r5, pc}
 3922              	.LVL276:
 3923              	.L295:
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3924              		.loc 1 3113 2 is_stmt 1 view .LVU1084
 3925              	.LBB175:
 3926              	.LBI175:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3927              		.loc 2 191 30 view .LVU1085
 3928              	.LBB176:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3929              		.loc 2 193 1 view .LVU1086
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3930              		.loc 2 195 2 view .LVU1087
 3931              		.syntax unified
 3932              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3933 0052 4FF05003 			mov r3, #80												
 3934 0056 83F31188 		msr basepri, r3											
 3935 005a BFF36F8F 		isb														
 3936 005e BFF34F8F 		dsb														
 3937              	
 3938              	@ 0 "" 2
 3939              	.LVL277:
 3940              		.thumb
 3941              		.syntax unified
 3942              	.L289:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3943              		.loc 2 195 2 is_stmt 0 view .LVU1088
 3944              	.LBE176:
 3945              	.LBE175:
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3946              		.loc 1 3113 2 is_stmt 1 discriminator 1 view .LVU1089
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3947              		.loc 1 3113 2 discriminator 1 view .LVU1090
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
ARM GAS  /tmp/ccODOtJH.s 			page 182


 3948              		.loc 1 3113 2 discriminator 1 view .LVU1091
 3949 0062 FEE7     		b	.L289
 3950              	.LVL278:
 3951              	.L290:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3952              		.loc 1 3139 3 view .LVU1092
 3953 0064 2946     		mov	r1, r5
 3954 0066 0848     		ldr	r0, .L296+20
 3955 0068 FFF7FEFF 		bl	vListInsertEnd
 3956              	.LVL279:
 3957 006c E7E7     		b	.L291
 3958              	.L293:
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3959              		.loc 1 3155 11 is_stmt 0 view .LVU1093
 3960 006e 0020     		movs	r0, #0
 3961              	.LVL280:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3962              		.loc 1 3158 2 is_stmt 1 view .LVU1094
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3963              		.loc 1 3158 9 is_stmt 0 view .LVU1095
 3964 0070 EEE7     		b	.L287
 3965              	.L297:
 3966 0072 00BF     		.align	2
 3967              	.L296:
 3968 0074 00000000 		.word	.LANCHOR16
 3969 0078 00000000 		.word	.LANCHOR13
 3970 007c 00000000 		.word	.LANCHOR4
 3971 0080 00000000 		.word	.LANCHOR10
 3972 0084 00000000 		.word	.LANCHOR20
 3973 0088 00000000 		.word	.LANCHOR1
 3974              		.cfi_endproc
 3975              	.LFE30:
 3977              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3978              		.align	1
 3979              		.global	vTaskRemoveFromUnorderedEventList
 3980              		.syntax unified
 3981              		.thumb
 3982              		.thumb_func
 3983              		.fpu fpv4-sp-d16
 3985              	vTaskRemoveFromUnorderedEventList:
 3986              	.LVL281:
 3987              	.LFB31:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3988              		.loc 1 3163 1 is_stmt 1 view -0
 3989              		.cfi_startproc
 3990              		@ args = 0, pretend = 0, frame = 0
 3991              		@ frame_needed = 0, uses_anonymous_args = 0
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3992              		.loc 1 3163 1 is_stmt 0 view .LVU1097
 3993 0000 38B5     		push	{r3, r4, r5, lr}
 3994              	.LCFI36:
 3995              		.cfi_def_cfa_offset 16
 3996              		.cfi_offset 3, -16
 3997              		.cfi_offset 4, -12
 3998              		.cfi_offset 5, -8
 3999              		.cfi_offset 14, -4
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 183


 4000              		.loc 1 3164 1 is_stmt 1 view .LVU1098
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4001              		.loc 1 3168 2 view .LVU1099
 4002 0002 1C4B     		ldr	r3, .L306
 4003 0004 1B68     		ldr	r3, [r3]
 4004 0006 43B9     		cbnz	r3, .L299
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4005              		.loc 1 3168 2 view .LVU1100
 4006              	.LBB177:
 4007              	.LBI177:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4008              		.loc 2 191 30 view .LVU1101
 4009              	.LBB178:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4010              		.loc 2 193 1 view .LVU1102
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4011              		.loc 2 195 2 view .LVU1103
 4012              		.syntax unified
 4013              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4014 0008 4FF05003 			mov r3, #80												
 4015 000c 83F31188 		msr basepri, r3											
 4016 0010 BFF36F8F 		isb														
 4017 0014 BFF34F8F 		dsb														
 4018              	
 4019              	@ 0 "" 2
 4020              	.LVL282:
 4021              		.thumb
 4022              		.syntax unified
 4023              	.L300:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4024              		.loc 2 195 2 is_stmt 0 view .LVU1104
 4025              	.LBE178:
 4026              	.LBE177:
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4027              		.loc 1 3168 2 is_stmt 1 discriminator 1 view .LVU1105
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4028              		.loc 1 3168 2 discriminator 1 view .LVU1106
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4029              		.loc 1 3168 2 discriminator 1 view .LVU1107
 4030 0018 FEE7     		b	.L300
 4031              	.L299:
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4032              		.loc 1 3168 49 discriminator 2 view .LVU1108
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4033              		.loc 1 3171 2 discriminator 2 view .LVU1109
 4034 001a 41F00041 		orr	r1, r1, #-2147483648
 4035              	.LVL283:
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4036              		.loc 1 3171 2 is_stmt 0 discriminator 2 view .LVU1110
 4037 001e 0160     		str	r1, [r0]
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4038              		.loc 1 3175 2 is_stmt 1 discriminator 2 view .LVU1111
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4039              		.loc 1 3175 17 is_stmt 0 discriminator 2 view .LVU1112
 4040 0020 C468     		ldr	r4, [r0, #12]
 4041              	.LVL284:
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
ARM GAS  /tmp/ccODOtJH.s 			page 184


 4042              		.loc 1 3176 2 is_stmt 1 discriminator 2 view .LVU1113
 4043 0022 F4B1     		cbz	r4, .L305
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4044              		.loc 1 3176 32 discriminator 2 view .LVU1114
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4045              		.loc 1 3177 2 discriminator 2 view .LVU1115
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4046              		.loc 1 3177 11 is_stmt 0 discriminator 2 view .LVU1116
 4047 0024 FFF7FEFF 		bl	uxListRemove
 4048              	.LVL285:
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4049              		.loc 1 3182 2 is_stmt 1 discriminator 2 view .LVU1117
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4050              		.loc 1 3182 11 is_stmt 0 discriminator 2 view .LVU1118
 4051 0028 251D     		adds	r5, r4, #4
 4052 002a 2846     		mov	r0, r5
 4053 002c FFF7FEFF 		bl	uxListRemove
 4054              	.LVL286:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4055              		.loc 1 3183 2 is_stmt 1 discriminator 2 view .LVU1119
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4056              		.loc 1 3183 2 discriminator 2 view .LVU1120
 4057 0030 E06A     		ldr	r0, [r4, #44]
 4058 0032 0123     		movs	r3, #1
 4059 0034 8340     		lsls	r3, r3, r0
 4060 0036 104A     		ldr	r2, .L306+4
 4061 0038 1168     		ldr	r1, [r2]
 4062 003a 0B43     		orrs	r3, r3, r1
 4063 003c 1360     		str	r3, [r2]
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4064              		.loc 1 3183 2 discriminator 2 view .LVU1121
 4065 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4066 0042 2946     		mov	r1, r5
 4067 0044 0D4B     		ldr	r3, .L306+8
 4068 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4069 004a FFF7FEFF 		bl	vListInsertEnd
 4070              	.LVL287:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4071              		.loc 1 3183 41 discriminator 2 view .LVU1122
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4072              		.loc 1 3185 2 discriminator 2 view .LVU1123
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4073              		.loc 1 3185 20 is_stmt 0 discriminator 2 view .LVU1124
 4074 004e E26A     		ldr	r2, [r4, #44]
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4075              		.loc 1 3185 47 discriminator 2 view .LVU1125
 4076 0050 0B4B     		ldr	r3, .L306+12
 4077 0052 1B68     		ldr	r3, [r3]
 4078 0054 DB6A     		ldr	r3, [r3, #44]
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4079              		.loc 1 3185 4 discriminator 2 view .LVU1126
 4080 0056 9A42     		cmp	r2, r3
 4081 0058 02D9     		bls	.L298
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4082              		.loc 1 3191 3 is_stmt 1 view .LVU1127
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4083              		.loc 1 3191 17 is_stmt 0 view .LVU1128
ARM GAS  /tmp/ccODOtJH.s 			page 185


 4084 005a 0A4B     		ldr	r3, .L306+16
 4085 005c 0122     		movs	r2, #1
 4086 005e 1A60     		str	r2, [r3]
 4087              	.L298:
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4088              		.loc 1 3193 1 view .LVU1129
 4089 0060 38BD     		pop	{r3, r4, r5, pc}
 4090              	.LVL288:
 4091              	.L305:
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4092              		.loc 1 3176 2 is_stmt 1 view .LVU1130
 4093              	.LBB179:
 4094              	.LBI179:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4095              		.loc 2 191 30 view .LVU1131
 4096              	.LBB180:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4097              		.loc 2 193 1 view .LVU1132
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4098              		.loc 2 195 2 view .LVU1133
 4099              		.syntax unified
 4100              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4101 0062 4FF05003 			mov r3, #80												
 4102 0066 83F31188 		msr basepri, r3											
 4103 006a BFF36F8F 		isb														
 4104 006e BFF34F8F 		dsb														
 4105              	
 4106              	@ 0 "" 2
 4107              	.LVL289:
 4108              		.thumb
 4109              		.syntax unified
 4110              	.L302:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4111              		.loc 2 195 2 is_stmt 0 view .LVU1134
 4112              	.LBE180:
 4113              	.LBE179:
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4114              		.loc 1 3176 2 is_stmt 1 discriminator 2 view .LVU1135
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4115              		.loc 1 3176 2 discriminator 2 view .LVU1136
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4116              		.loc 1 3176 2 discriminator 2 view .LVU1137
 4117 0072 FEE7     		b	.L302
 4118              	.L307:
 4119              		.align	2
 4120              	.L306:
 4121 0074 00000000 		.word	.LANCHOR16
 4122 0078 00000000 		.word	.LANCHOR13
 4123 007c 00000000 		.word	.LANCHOR4
 4124 0080 00000000 		.word	.LANCHOR10
 4125 0084 00000000 		.word	.LANCHOR20
 4126              		.cfi_endproc
 4127              	.LFE31:
 4129              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4130              		.align	1
 4131              		.global	vTaskSetTimeOutState
 4132              		.syntax unified
ARM GAS  /tmp/ccODOtJH.s 			page 186


 4133              		.thumb
 4134              		.thumb_func
 4135              		.fpu fpv4-sp-d16
 4137              	vTaskSetTimeOutState:
 4138              	.LVL290:
 4139              	.LFB32:
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4140              		.loc 1 3197 1 view -0
 4141              		.cfi_startproc
 4142              		@ args = 0, pretend = 0, frame = 0
 4143              		@ frame_needed = 0, uses_anonymous_args = 0
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4144              		.loc 1 3198 2 view .LVU1139
 4145 0000 60B1     		cbz	r0, .L313
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4146              		.loc 1 3197 1 is_stmt 0 discriminator 2 view .LVU1140
 4147 0002 10B5     		push	{r4, lr}
 4148              	.LCFI37:
 4149              		.cfi_def_cfa_offset 8
 4150              		.cfi_offset 4, -8
 4151              		.cfi_offset 14, -4
 4152 0004 0446     		mov	r4, r0
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4153              		.loc 1 3198 27 is_stmt 1 discriminator 2 view .LVU1141
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4154              		.loc 1 3199 2 discriminator 2 view .LVU1142
 4155 0006 FFF7FEFF 		bl	vPortEnterCritical
 4156              	.LVL291:
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4157              		.loc 1 3201 3 discriminator 2 view .LVU1143
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4158              		.loc 1 3201 29 is_stmt 0 discriminator 2 view .LVU1144
 4159 000a 094B     		ldr	r3, .L314
 4160 000c 1B68     		ldr	r3, [r3]
 4161 000e 2360     		str	r3, [r4]
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4162              		.loc 1 3202 3 is_stmt 1 discriminator 2 view .LVU1145
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4163              		.loc 1 3202 30 is_stmt 0 discriminator 2 view .LVU1146
 4164 0010 084B     		ldr	r3, .L314+4
 4165 0012 1B68     		ldr	r3, [r3]
 4166 0014 6360     		str	r3, [r4, #4]
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4167              		.loc 1 3204 2 is_stmt 1 discriminator 2 view .LVU1147
 4168 0016 FFF7FEFF 		bl	vPortExitCritical
 4169              	.LVL292:
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4170              		.loc 1 3205 1 is_stmt 0 discriminator 2 view .LVU1148
 4171 001a 10BD     		pop	{r4, pc}
 4172              	.LVL293:
 4173              	.L313:
 4174              	.LCFI38:
 4175              		.cfi_def_cfa_offset 0
 4176              		.cfi_restore 4
 4177              		.cfi_restore 14
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4178              		.loc 1 3198 2 is_stmt 1 view .LVU1149
ARM GAS  /tmp/ccODOtJH.s 			page 187


 4179              	.LBB181:
 4180              	.LBI181:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4181              		.loc 2 191 30 view .LVU1150
 4182              	.LBB182:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4183              		.loc 2 193 1 view .LVU1151
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4184              		.loc 2 195 2 view .LVU1152
 4185              		.syntax unified
 4186              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4187 001c 4FF05003 			mov r3, #80												
 4188 0020 83F31188 		msr basepri, r3											
 4189 0024 BFF36F8F 		isb														
 4190 0028 BFF34F8F 		dsb														
 4191              	
 4192              	@ 0 "" 2
 4193              	.LVL294:
 4194              		.thumb
 4195              		.syntax unified
 4196              	.L310:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4197              		.loc 2 195 2 is_stmt 0 view .LVU1153
 4198              	.LBE182:
 4199              	.LBE181:
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4200              		.loc 1 3198 2 is_stmt 1 discriminator 1 view .LVU1154
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4201              		.loc 1 3198 2 discriminator 1 view .LVU1155
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4202              		.loc 1 3198 2 discriminator 1 view .LVU1156
 4203 002c FEE7     		b	.L310
 4204              	.L315:
 4205 002e 00BF     		.align	2
 4206              	.L314:
 4207 0030 00000000 		.word	.LANCHOR18
 4208 0034 00000000 		.word	.LANCHOR15
 4209              		.cfi_endproc
 4210              	.LFE32:
 4212              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4213              		.align	1
 4214              		.global	vTaskInternalSetTimeOutState
 4215              		.syntax unified
 4216              		.thumb
 4217              		.thumb_func
 4218              		.fpu fpv4-sp-d16
 4220              	vTaskInternalSetTimeOutState:
 4221              	.LVL295:
 4222              	.LFB33:
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4223              		.loc 1 3209 1 view -0
 4224              		.cfi_startproc
 4225              		@ args = 0, pretend = 0, frame = 0
 4226              		@ frame_needed = 0, uses_anonymous_args = 0
 4227              		@ link register save eliminated.
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4228              		.loc 1 3211 2 view .LVU1158
ARM GAS  /tmp/ccODOtJH.s 			page 188


3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4229              		.loc 1 3211 28 is_stmt 0 view .LVU1159
 4230 0000 034B     		ldr	r3, .L317
 4231 0002 1B68     		ldr	r3, [r3]
 4232 0004 0360     		str	r3, [r0]
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4233              		.loc 1 3212 2 is_stmt 1 view .LVU1160
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4234              		.loc 1 3212 29 is_stmt 0 view .LVU1161
 4235 0006 034B     		ldr	r3, .L317+4
 4236 0008 1B68     		ldr	r3, [r3]
 4237 000a 4360     		str	r3, [r0, #4]
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4238              		.loc 1 3213 1 view .LVU1162
 4239 000c 7047     		bx	lr
 4240              	.L318:
 4241 000e 00BF     		.align	2
 4242              	.L317:
 4243 0010 00000000 		.word	.LANCHOR18
 4244 0014 00000000 		.word	.LANCHOR15
 4245              		.cfi_endproc
 4246              	.LFE33:
 4248              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4249              		.align	1
 4250              		.global	xTaskCheckForTimeOut
 4251              		.syntax unified
 4252              		.thumb
 4253              		.thumb_func
 4254              		.fpu fpv4-sp-d16
 4256              	xTaskCheckForTimeOut:
 4257              	.LVL296:
 4258              	.LFB34:
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4259              		.loc 1 3217 1 is_stmt 1 view -0
 4260              		.cfi_startproc
 4261              		@ args = 0, pretend = 0, frame = 0
 4262              		@ frame_needed = 0, uses_anonymous_args = 0
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4263              		.loc 1 3217 1 is_stmt 0 view .LVU1164
 4264 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4265              	.LCFI39:
 4266              		.cfi_def_cfa_offset 24
 4267              		.cfi_offset 3, -24
 4268              		.cfi_offset 4, -20
 4269              		.cfi_offset 5, -16
 4270              		.cfi_offset 6, -12
 4271              		.cfi_offset 7, -8
 4272              		.cfi_offset 14, -4
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4273              		.loc 1 3218 1 is_stmt 1 view .LVU1165
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4274              		.loc 1 3220 2 view .LVU1166
 4275 0002 C8B1     		cbz	r0, .L330
 4276 0004 0C46     		mov	r4, r1
 4277 0006 0546     		mov	r5, r0
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4278              		.loc 1 3220 27 discriminator 2 view .LVU1167
ARM GAS  /tmp/ccODOtJH.s 			page 189


3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4279              		.loc 1 3221 2 discriminator 2 view .LVU1168
 4280 0008 F9B1     		cbz	r1, .L331
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4281              		.loc 1 3221 31 discriminator 2 view .LVU1169
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4282              		.loc 1 3223 2 discriminator 2 view .LVU1170
 4283 000a FFF7FEFF 		bl	vPortEnterCritical
 4284              	.LVL297:
 4285              	.LBB183:
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4286              		.loc 1 3226 3 discriminator 2 view .LVU1171
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4287              		.loc 1 3226 20 is_stmt 0 discriminator 2 view .LVU1172
 4288 000e 1B4B     		ldr	r3, .L333
 4289 0010 1968     		ldr	r1, [r3]
 4290              	.LVL298:
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4291              		.loc 1 3227 3 is_stmt 1 discriminator 2 view .LVU1173
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4292              		.loc 1 3227 62 is_stmt 0 discriminator 2 view .LVU1174
 4293 0012 6B68     		ldr	r3, [r5, #4]
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4294              		.loc 1 3227 20 discriminator 2 view .LVU1175
 4295 0014 C81A     		subs	r0, r1, r3
 4296              	.LVL299:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4297              		.loc 1 3241 4 is_stmt 1 discriminator 2 view .LVU1176
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4298              		.loc 1 3241 8 is_stmt 0 discriminator 2 view .LVU1177
 4299 0016 2268     		ldr	r2, [r4]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4300              		.loc 1 3241 6 discriminator 2 view .LVU1178
 4301 0018 B2F1FF3F 		cmp	r2, #-1
 4302 001c 26D0     		beq	.L327
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4303              		.loc 1 3251 3 is_stmt 1 view .LVU1179
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4304              		.loc 1 3251 25 is_stmt 0 view .LVU1180
 4305 001e 184E     		ldr	r6, .L333+4
 4306 0020 3668     		ldr	r6, [r6]
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4307              		.loc 1 3251 5 view .LVU1181
 4308 0022 2F68     		ldr	r7, [r5]
 4309 0024 B742     		cmp	r7, r6
 4310 0026 01D0     		beq	.L325
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4311              		.loc 1 3251 56 discriminator 1 view .LVU1182
 4312 0028 8B42     		cmp	r3, r1
 4313 002a 24D9     		bls	.L328
 4314              	.L325:
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4315              		.loc 1 3260 8 is_stmt 1 view .LVU1183
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4316              		.loc 1 3260 10 is_stmt 0 view .LVU1184
 4317 002c 8242     		cmp	r2, r0
 4318 002e 15D8     		bhi	.L332
ARM GAS  /tmp/ccODOtJH.s 			page 190


3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4319              		.loc 1 3269 4 is_stmt 1 view .LVU1185
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4320              		.loc 1 3269 19 is_stmt 0 view .LVU1186
 4321 0030 0023     		movs	r3, #0
 4322 0032 2360     		str	r3, [r4]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4323              		.loc 1 3270 4 is_stmt 1 view .LVU1187
 4324              	.LVL300:
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4325              		.loc 1 3270 12 is_stmt 0 view .LVU1188
 4326 0034 0124     		movs	r4, #1
 4327              	.LVL301:
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4328              		.loc 1 3270 12 view .LVU1189
 4329 0036 1AE0     		b	.L324
 4330              	.LVL302:
 4331              	.L330:
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4332              		.loc 1 3270 12 view .LVU1190
 4333              	.LBE183:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4334              		.loc 1 3220 2 is_stmt 1 view .LVU1191
 4335              	.LBB184:
 4336              	.LBI184:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4337              		.loc 2 191 30 view .LVU1192
 4338              	.LBB185:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4339              		.loc 2 193 1 view .LVU1193
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4340              		.loc 2 195 2 view .LVU1194
 4341              		.syntax unified
 4342              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4343 0038 4FF05003 			mov r3, #80												
 4344 003c 83F31188 		msr basepri, r3											
 4345 0040 BFF36F8F 		isb														
 4346 0044 BFF34F8F 		dsb														
 4347              	
 4348              	@ 0 "" 2
 4349              	.LVL303:
 4350              		.thumb
 4351              		.syntax unified
 4352              	.L321:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4353              		.loc 2 195 2 is_stmt 0 view .LVU1195
 4354              	.LBE185:
 4355              	.LBE184:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4356              		.loc 1 3220 2 is_stmt 1 discriminator 1 view .LVU1196
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4357              		.loc 1 3220 2 discriminator 1 view .LVU1197
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4358              		.loc 1 3220 2 discriminator 1 view .LVU1198
 4359 0048 FEE7     		b	.L321
 4360              	.L331:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 191


 4361              		.loc 1 3221 2 view .LVU1199
 4362              	.LBB186:
 4363              	.LBI186:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4364              		.loc 2 191 30 view .LVU1200
 4365              	.LBB187:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4366              		.loc 2 193 1 view .LVU1201
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4367              		.loc 2 195 2 view .LVU1202
 4368              		.syntax unified
 4369              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4370 004a 4FF05003 			mov r3, #80												
 4371 004e 83F31188 		msr basepri, r3											
 4372 0052 BFF36F8F 		isb														
 4373 0056 BFF34F8F 		dsb														
 4374              	
 4375              	@ 0 "" 2
 4376              	.LVL304:
 4377              		.thumb
 4378              		.syntax unified
 4379              	.L323:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4380              		.loc 2 195 2 is_stmt 0 view .LVU1203
 4381              	.LBE187:
 4382              	.LBE186:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4383              		.loc 1 3221 2 is_stmt 1 discriminator 2 view .LVU1204
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4384              		.loc 1 3221 2 discriminator 2 view .LVU1205
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4385              		.loc 1 3221 2 discriminator 2 view .LVU1206
 4386 005a FEE7     		b	.L323
 4387              	.LVL305:
 4388              	.L332:
 4389              	.LBB188:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4390              		.loc 1 3263 4 view .LVU1207
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4391              		.loc 1 3263 19 is_stmt 0 view .LVU1208
 4392 005c 5B1A     		subs	r3, r3, r1
 4393 005e 1344     		add	r3, r3, r2
 4394 0060 2360     		str	r3, [r4]
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4395              		.loc 1 3264 4 is_stmt 1 view .LVU1209
 4396 0062 2846     		mov	r0, r5
 4397              	.LVL306:
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4398              		.loc 1 3264 4 is_stmt 0 view .LVU1210
 4399 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4400              	.LVL307:
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4401              		.loc 1 3265 4 is_stmt 1 view .LVU1211
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4402              		.loc 1 3265 12 is_stmt 0 view .LVU1212
 4403 0068 0024     		movs	r4, #0
 4404              	.LVL308:
ARM GAS  /tmp/ccODOtJH.s 			page 192


3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4405              		.loc 1 3265 12 view .LVU1213
 4406 006a 00E0     		b	.L324
 4407              	.LVL309:
 4408              	.L327:
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4409              		.loc 1 3246 13 view .LVU1214
 4410 006c 0024     		movs	r4, #0
 4411              	.LVL310:
 4412              	.L324:
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4413              		.loc 1 3246 13 view .LVU1215
 4414              	.LBE188:
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4415              		.loc 1 3273 2 is_stmt 1 view .LVU1216
 4416 006e FFF7FEFF 		bl	vPortExitCritical
 4417              	.LVL311:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4418              		.loc 1 3275 2 view .LVU1217
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4419              		.loc 1 3276 1 is_stmt 0 view .LVU1218
 4420 0072 2046     		mov	r0, r4
 4421 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4422              	.LVL312:
 4423              	.L328:
 4424              	.LBB189:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4425              		.loc 1 3258 12 view .LVU1219
 4426 0076 0124     		movs	r4, #1
 4427              	.LVL313:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4428              		.loc 1 3258 12 view .LVU1220
 4429 0078 F9E7     		b	.L324
 4430              	.L334:
 4431 007a 00BF     		.align	2
 4432              	.L333:
 4433 007c 00000000 		.word	.LANCHOR15
 4434 0080 00000000 		.word	.LANCHOR18
 4435              	.LBE189:
 4436              		.cfi_endproc
 4437              	.LFE34:
 4439              		.section	.text.vTaskMissedYield,"ax",%progbits
 4440              		.align	1
 4441              		.global	vTaskMissedYield
 4442              		.syntax unified
 4443              		.thumb
 4444              		.thumb_func
 4445              		.fpu fpv4-sp-d16
 4447              	vTaskMissedYield:
 4448              	.LFB35:
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4449              		.loc 1 3280 1 is_stmt 1 view -0
 4450              		.cfi_startproc
 4451              		@ args = 0, pretend = 0, frame = 0
 4452              		@ frame_needed = 0, uses_anonymous_args = 0
 4453              		@ link register save eliminated.
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccODOtJH.s 			page 193


 4454              		.loc 1 3281 2 view .LVU1222
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4455              		.loc 1 3281 16 is_stmt 0 view .LVU1223
 4456 0000 014B     		ldr	r3, .L336
 4457 0002 0122     		movs	r2, #1
 4458 0004 1A60     		str	r2, [r3]
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4459              		.loc 1 3282 1 view .LVU1224
 4460 0006 7047     		bx	lr
 4461              	.L337:
 4462              		.align	2
 4463              	.L336:
 4464 0008 00000000 		.word	.LANCHOR20
 4465              		.cfi_endproc
 4466              	.LFE35:
 4468              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4469              		.align	1
 4470              		.global	xTaskGetCurrentTaskHandle
 4471              		.syntax unified
 4472              		.thumb
 4473              		.thumb_func
 4474              		.fpu fpv4-sp-d16
 4476              	xTaskGetCurrentTaskHandle:
 4477              	.LFB41:
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4478              		.loc 1 3907 2 is_stmt 1 view -0
 4479              		.cfi_startproc
 4480              		@ args = 0, pretend = 0, frame = 0
 4481              		@ frame_needed = 0, uses_anonymous_args = 0
 4482              		@ link register save eliminated.
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4483              		.loc 1 3908 2 view .LVU1226
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4484              		.loc 1 3913 3 view .LVU1227
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4485              		.loc 1 3913 11 is_stmt 0 view .LVU1228
 4486 0000 014B     		ldr	r3, .L339
 4487 0002 1868     		ldr	r0, [r3]
 4488              	.LVL314:
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4489              		.loc 1 3915 3 is_stmt 1 view .LVU1229
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4490              		.loc 1 3916 2 is_stmt 0 view .LVU1230
 4491 0004 7047     		bx	lr
 4492              	.L340:
 4493 0006 00BF     		.align	2
 4494              	.L339:
 4495 0008 00000000 		.word	.LANCHOR10
 4496              		.cfi_endproc
 4497              	.LFE41:
 4499              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4500              		.align	1
 4501              		.global	xTaskGetSchedulerState
 4502              		.syntax unified
 4503              		.thumb
 4504              		.thumb_func
 4505              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccODOtJH.s 			page 194


 4507              	xTaskGetSchedulerState:
 4508              	.LFB42:
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4509              		.loc 1 3924 2 is_stmt 1 view -0
 4510              		.cfi_startproc
 4511              		@ args = 0, pretend = 0, frame = 0
 4512              		@ frame_needed = 0, uses_anonymous_args = 0
 4513              		@ link register save eliminated.
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4514              		.loc 1 3925 2 view .LVU1232
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4515              		.loc 1 3927 3 view .LVU1233
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4516              		.loc 1 3927 25 is_stmt 0 view .LVU1234
 4517 0000 054B     		ldr	r3, .L346
 4518 0002 1B68     		ldr	r3, [r3]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4519              		.loc 1 3927 5 view .LVU1235
 4520 0004 33B1     		cbz	r3, .L343
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4521              		.loc 1 3933 4 is_stmt 1 view .LVU1236
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4522              		.loc 1 3933 29 is_stmt 0 view .LVU1237
 4523 0006 054B     		ldr	r3, .L346+4
 4524 0008 1B68     		ldr	r3, [r3]
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4525              		.loc 1 3933 6 view .LVU1238
 4526 000a 0BB1     		cbz	r3, .L345
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4527              		.loc 1 3939 13 view .LVU1239
 4528 000c 0020     		movs	r0, #0
 4529              	.LVL315:
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4530              		.loc 1 3943 3 is_stmt 1 view .LVU1240
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4531              		.loc 1 3944 2 is_stmt 0 view .LVU1241
 4532 000e 7047     		bx	lr
 4533              	.LVL316:
 4534              	.L345:
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4535              		.loc 1 3935 13 view .LVU1242
 4536 0010 0220     		movs	r0, #2
 4537 0012 7047     		bx	lr
 4538              	.L343:
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4539              		.loc 1 3929 12 view .LVU1243
 4540 0014 0120     		movs	r0, #1
 4541 0016 7047     		bx	lr
 4542              	.L347:
 4543              		.align	2
 4544              	.L346:
 4545 0018 00000000 		.word	.LANCHOR11
 4546 001c 00000000 		.word	.LANCHOR16
 4547              		.cfi_endproc
 4548              	.LFE42:
 4550              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4551              		.align	1
ARM GAS  /tmp/ccODOtJH.s 			page 195


 4552              		.global	xTaskPriorityInherit
 4553              		.syntax unified
 4554              		.thumb
 4555              		.thumb_func
 4556              		.fpu fpv4-sp-d16
 4558              	xTaskPriorityInherit:
 4559              	.LVL317:
 4560              	.LFB43:
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4561              		.loc 1 3952 2 is_stmt 1 view -0
 4562              		.cfi_startproc
 4563              		@ args = 0, pretend = 0, frame = 0
 4564              		@ frame_needed = 0, uses_anonymous_args = 0
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4565              		.loc 1 3953 2 view .LVU1245
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4566              		.loc 1 3954 2 view .LVU1246
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4567              		.loc 1 3959 3 view .LVU1247
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4568              		.loc 1 3959 5 is_stmt 0 view .LVU1248
 4569 0000 0028     		cmp	r0, #0
 4570 0002 4FD0     		beq	.L354
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4571              		.loc 1 3952 2 view .LVU1249
 4572 0004 38B5     		push	{r3, r4, r5, lr}
 4573              	.LCFI40:
 4574              		.cfi_def_cfa_offset 16
 4575              		.cfi_offset 3, -16
 4576              		.cfi_offset 4, -12
 4577              		.cfi_offset 5, -8
 4578              		.cfi_offset 14, -4
 4579 0006 0446     		mov	r4, r0
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4580              		.loc 1 3964 4 is_stmt 1 view .LVU1250
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4581              		.loc 1 3964 24 is_stmt 0 view .LVU1251
 4582 0008 C36A     		ldr	r3, [r0, #44]
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4583              		.loc 1 3964 51 view .LVU1252
 4584 000a 284A     		ldr	r2, .L361
 4585 000c 1268     		ldr	r2, [r2]
 4586 000e D26A     		ldr	r2, [r2, #44]
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4587              		.loc 1 3964 6 view .LVU1253
 4588 0010 9342     		cmp	r3, r2
 4589 0012 3FD2     		bcs	.L350
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4590              		.loc 1 3969 5 is_stmt 1 view .LVU1254
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4591              		.loc 1 3969 11 is_stmt 0 view .LVU1255
 4592 0014 8269     		ldr	r2, [r0, #24]
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4593              		.loc 1 3969 7 view .LVU1256
 4594 0016 002A     		cmp	r2, #0
 4595 0018 05DB     		blt	.L351
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccODOtJH.s 			page 196


 4596              		.loc 1 3971 6 is_stmt 1 view .LVU1257
 4597 001a 244A     		ldr	r2, .L361
 4598 001c 1268     		ldr	r2, [r2]
 4599 001e D26A     		ldr	r2, [r2, #44]
 4600 0020 C2F10702 		rsb	r2, r2, #7
 4601 0024 8261     		str	r2, [r0, #24]
 4602              	.L351:
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4603              		.loc 1 3975 30 view .LVU1258
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4604              		.loc 1 3980 5 view .LVU1259
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4605              		.loc 1 3980 9 is_stmt 0 view .LVU1260
 4606 0026 6169     		ldr	r1, [r4, #20]
 4607 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4608 002c 204A     		ldr	r2, .L361+4
 4609 002e 02EB8303 		add	r3, r2, r3, lsl #2
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4610              		.loc 1 3980 7 view .LVU1261
 4611 0032 9942     		cmp	r1, r3
 4612 0034 05D0     		beq	.L360
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4613              		.loc 1 3998 6 is_stmt 1 view .LVU1262
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4614              		.loc 1 3998 49 is_stmt 0 view .LVU1263
 4615 0036 1D4B     		ldr	r3, .L361
 4616 0038 1B68     		ldr	r3, [r3]
 4617 003a DB6A     		ldr	r3, [r3, #44]
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4618              		.loc 1 3998 35 view .LVU1264
 4619 003c E362     		str	r3, [r4, #44]
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4620              		.loc 1 4004 13 view .LVU1265
 4621 003e 0120     		movs	r0, #1
 4622              	.LVL318:
 4623              	.L348:
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4624              		.loc 1 4031 2 view .LVU1266
 4625 0040 38BD     		pop	{r3, r4, r5, pc}
 4626              	.LVL319:
 4627              	.L360:
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4628              		.loc 1 3982 6 is_stmt 1 view .LVU1267
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4629              		.loc 1 3982 10 is_stmt 0 view .LVU1268
 4630 0042 251D     		adds	r5, r4, #4
 4631 0044 2846     		mov	r0, r5
 4632              	.LVL320:
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4633              		.loc 1 3982 10 view .LVU1269
 4634 0046 FFF7FEFF 		bl	uxListRemove
 4635              	.LVL321:
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4636              		.loc 1 3982 8 view .LVU1270
 4637 004a 70B9     		cbnz	r0, .L353
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4638              		.loc 1 3984 7 is_stmt 1 view .LVU1271
ARM GAS  /tmp/ccODOtJH.s 			page 197


 4639 004c E26A     		ldr	r2, [r4, #44]
 4640 004e 02EB8203 		add	r3, r2, r2, lsl #2
 4641 0052 9B00     		lsls	r3, r3, #2
 4642 0054 1649     		ldr	r1, .L361+4
 4643 0056 CB58     		ldr	r3, [r1, r3]
 4644 0058 3BB9     		cbnz	r3, .L353
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4645              		.loc 1 3984 7 discriminator 1 view .LVU1272
 4646 005a 0123     		movs	r3, #1
 4647 005c 03FA02F2 		lsl	r2, r3, r2
 4648 0060 1449     		ldr	r1, .L361+8
 4649 0062 0B68     		ldr	r3, [r1]
 4650 0064 23EA0203 		bic	r3, r3, r2
 4651 0068 0B60     		str	r3, [r1]
 4652              	.L353:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4653              		.loc 1 3988 31 view .LVU1273
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4654              		.loc 1 3992 6 view .LVU1274
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4655              		.loc 1 3992 49 is_stmt 0 view .LVU1275
 4656 006a 104B     		ldr	r3, .L361
 4657 006c 1B68     		ldr	r3, [r3]
 4658 006e D86A     		ldr	r0, [r3, #44]
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4659              		.loc 1 3992 35 view .LVU1276
 4660 0070 E062     		str	r0, [r4, #44]
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4661              		.loc 1 3993 6 is_stmt 1 view .LVU1277
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4662              		.loc 1 3993 6 view .LVU1278
 4663 0072 0124     		movs	r4, #1
 4664              	.LVL322:
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4665              		.loc 1 3993 6 is_stmt 0 view .LVU1279
 4666 0074 04FA00F3 		lsl	r3, r4, r0
 4667 0078 0E4A     		ldr	r2, .L361+8
 4668 007a 1168     		ldr	r1, [r2]
 4669 007c 0B43     		orrs	r3, r3, r1
 4670 007e 1360     		str	r3, [r2]
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4671              		.loc 1 3993 6 is_stmt 1 view .LVU1280
 4672 0080 00EB8000 		add	r0, r0, r0, lsl #2
 4673 0084 2946     		mov	r1, r5
 4674 0086 0A4B     		ldr	r3, .L361+4
 4675 0088 03EB8000 		add	r0, r3, r0, lsl #2
 4676 008c FFF7FEFF 		bl	vListInsertEnd
 4677              	.LVL323:
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4678              		.loc 1 3993 47 view .LVU1281
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4679              		.loc 1 4004 13 is_stmt 0 view .LVU1282
 4680 0090 2046     		mov	r0, r4
 4681 0092 D5E7     		b	.L348
 4682              	.LVL324:
 4683              	.L350:
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccODOtJH.s 			page 198


 4684              		.loc 1 4008 5 is_stmt 1 view .LVU1283
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4685              		.loc 1 4008 25 is_stmt 0 view .LVU1284
 4686 0094 426C     		ldr	r2, [r0, #68]
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4687              		.loc 1 4008 56 view .LVU1285
 4688 0096 054B     		ldr	r3, .L361
 4689 0098 1B68     		ldr	r3, [r3]
 4690 009a DB6A     		ldr	r3, [r3, #44]
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4691              		.loc 1 4008 7 view .LVU1286
 4692 009c 9A42     		cmp	r2, r3
 4693 009e 03D3     		bcc	.L355
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4694              		.loc 1 3954 13 view .LVU1287
 4695 00a0 0020     		movs	r0, #0
 4696              	.LVL325:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4697              		.loc 1 3954 13 view .LVU1288
 4698 00a2 CDE7     		b	.L348
 4699              	.LVL326:
 4700              	.L354:
 4701              	.LCFI41:
 4702              		.cfi_def_cfa_offset 0
 4703              		.cfi_restore 3
 4704              		.cfi_restore 4
 4705              		.cfi_restore 5
 4706              		.cfi_restore 14
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4707              		.loc 1 3954 13 view .LVU1289
 4708 00a4 0020     		movs	r0, #0
 4709              	.LVL327:
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4710              		.loc 1 4031 2 view .LVU1290
 4711 00a6 7047     		bx	lr
 4712              	.LVL328:
 4713              	.L355:
 4714              	.LCFI42:
 4715              		.cfi_def_cfa_offset 16
 4716              		.cfi_offset 3, -16
 4717              		.cfi_offset 4, -12
 4718              		.cfi_offset 5, -8
 4719              		.cfi_offset 14, -4
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4720              		.loc 1 4017 14 view .LVU1291
 4721 00a8 0120     		movs	r0, #1
 4722              	.LVL329:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4723              		.loc 1 4027 28 is_stmt 1 view .LVU1292
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4724              		.loc 1 4030 3 view .LVU1293
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4725              		.loc 1 4030 10 is_stmt 0 view .LVU1294
 4726 00aa C9E7     		b	.L348
 4727              	.L362:
 4728              		.align	2
 4729              	.L361:
ARM GAS  /tmp/ccODOtJH.s 			page 199


 4730 00ac 00000000 		.word	.LANCHOR10
 4731 00b0 00000000 		.word	.LANCHOR4
 4732 00b4 00000000 		.word	.LANCHOR13
 4733              		.cfi_endproc
 4734              	.LFE43:
 4736              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4737              		.align	1
 4738              		.global	xTaskPriorityDisinherit
 4739              		.syntax unified
 4740              		.thumb
 4741              		.thumb_func
 4742              		.fpu fpv4-sp-d16
 4744              	xTaskPriorityDisinherit:
 4745              	.LVL330:
 4746              	.LFB44:
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4747              		.loc 1 4039 2 is_stmt 1 view -0
 4748              		.cfi_startproc
 4749              		@ args = 0, pretend = 0, frame = 0
 4750              		@ frame_needed = 0, uses_anonymous_args = 0
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4751              		.loc 1 4040 2 view .LVU1296
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4752              		.loc 1 4041 2 view .LVU1297
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4753              		.loc 1 4043 3 view .LVU1298
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4754              		.loc 1 4043 5 is_stmt 0 view .LVU1299
 4755 0000 0028     		cmp	r0, #0
 4756 0002 4CD0     		beq	.L370
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4757              		.loc 1 4039 2 view .LVU1300
 4758 0004 38B5     		push	{r3, r4, r5, lr}
 4759              	.LCFI43:
 4760              		.cfi_def_cfa_offset 16
 4761              		.cfi_offset 3, -16
 4762              		.cfi_offset 4, -12
 4763              		.cfi_offset 5, -8
 4764              		.cfi_offset 14, -4
 4765 0006 0446     		mov	r4, r0
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4766              		.loc 1 4049 4 is_stmt 1 view .LVU1301
 4767 0008 274B     		ldr	r3, .L378
 4768 000a 1B68     		ldr	r3, [r3]
 4769 000c 8342     		cmp	r3, r0
 4770 000e 08D0     		beq	.L365
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4771              		.loc 1 4049 4 view .LVU1302
 4772              	.LBB190:
 4773              	.LBI190:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4774              		.loc 2 191 30 view .LVU1303
 4775              	.LBB191:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4776              		.loc 2 193 1 view .LVU1304
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4777              		.loc 2 195 2 view .LVU1305
ARM GAS  /tmp/ccODOtJH.s 			page 200


 4778              		.syntax unified
 4779              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4780 0010 4FF05003 			mov r3, #80												
 4781 0014 83F31188 		msr basepri, r3											
 4782 0018 BFF36F8F 		isb														
 4783 001c BFF34F8F 		dsb														
 4784              	
 4785              	@ 0 "" 2
 4786              	.LVL331:
 4787              		.thumb
 4788              		.syntax unified
 4789              	.L366:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4790              		.loc 2 195 2 is_stmt 0 view .LVU1306
 4791              	.LBE191:
 4792              	.LBE190:
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4793              		.loc 1 4049 4 is_stmt 1 discriminator 1 view .LVU1307
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4794              		.loc 1 4049 4 discriminator 1 view .LVU1308
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4795              		.loc 1 4049 4 discriminator 1 view .LVU1309
 4796 0020 FEE7     		b	.L366
 4797              	.L365:
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4798              		.loc 1 4049 41 discriminator 2 view .LVU1310
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4799              		.loc 1 4050 4 discriminator 2 view .LVU1311
 4800 0022 836C     		ldr	r3, [r0, #72]
 4801 0024 43B9     		cbnz	r3, .L367
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4802              		.loc 1 4050 4 view .LVU1312
 4803              	.LBB192:
 4804              	.LBI192:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4805              		.loc 2 191 30 view .LVU1313
 4806              	.LBB193:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4807              		.loc 2 193 1 view .LVU1314
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4808              		.loc 2 195 2 view .LVU1315
 4809              		.syntax unified
 4810              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4811 0026 4FF05003 			mov r3, #80												
 4812 002a 83F31188 		msr basepri, r3											
 4813 002e BFF36F8F 		isb														
 4814 0032 BFF34F8F 		dsb														
 4815              	
 4816              	@ 0 "" 2
 4817              	.LVL332:
 4818              		.thumb
 4819              		.syntax unified
 4820              	.L368:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4821              		.loc 2 195 2 is_stmt 0 view .LVU1316
 4822              	.LBE193:
 4823              	.LBE192:
ARM GAS  /tmp/ccODOtJH.s 			page 201


4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4824              		.loc 1 4050 4 is_stmt 1 discriminator 2 view .LVU1317
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4825              		.loc 1 4050 4 discriminator 2 view .LVU1318
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4826              		.loc 1 4050 4 discriminator 2 view .LVU1319
 4827 0036 FEE7     		b	.L368
 4828              	.L367:
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4829              		.loc 1 4050 40 discriminator 2 view .LVU1320
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4830              		.loc 1 4051 4 discriminator 2 view .LVU1321
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4831              		.loc 1 4051 28 is_stmt 0 discriminator 2 view .LVU1322
 4832 0038 013B     		subs	r3, r3, #1
 4833 003a 8364     		str	r3, [r0, #72]
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4834              		.loc 1 4055 4 is_stmt 1 discriminator 2 view .LVU1323
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4835              		.loc 1 4055 13 is_stmt 0 discriminator 2 view .LVU1324
 4836 003c C16A     		ldr	r1, [r0, #44]
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4837              		.loc 1 4055 34 discriminator 2 view .LVU1325
 4838 003e 426C     		ldr	r2, [r0, #68]
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4839              		.loc 1 4055 6 discriminator 2 view .LVU1326
 4840 0040 9142     		cmp	r1, r2
 4841 0042 2ED0     		beq	.L371
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4842              		.loc 1 4058 5 is_stmt 1 view .LVU1327
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4843              		.loc 1 4058 7 is_stmt 0 view .LVU1328
 4844 0044 0BB1     		cbz	r3, .L377
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4845              		.loc 1 4041 13 view .LVU1329
 4846 0046 0020     		movs	r0, #0
 4847              	.LVL333:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4848              		.loc 1 4107 28 is_stmt 1 view .LVU1330
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4849              		.loc 1 4110 3 view .LVU1331
 4850              	.L363:
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4851              		.loc 1 4111 2 is_stmt 0 view .LVU1332
 4852 0048 38BD     		pop	{r3, r4, r5, pc}
 4853              	.LVL334:
 4854              	.L377:
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4855              		.loc 1 4065 6 is_stmt 1 view .LVU1333
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4856              		.loc 1 4065 10 is_stmt 0 view .LVU1334
 4857 004a 051D     		adds	r5, r0, #4
 4858 004c 2846     		mov	r0, r5
 4859              	.LVL335:
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4860              		.loc 1 4065 10 view .LVU1335
 4861 004e FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccODOtJH.s 			page 202


 4862              	.LVL336:
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4863              		.loc 1 4065 8 view .LVU1336
 4864 0052 70B9     		cbnz	r0, .L369
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4865              		.loc 1 4067 7 is_stmt 1 view .LVU1337
 4866 0054 E26A     		ldr	r2, [r4, #44]
 4867 0056 02EB8203 		add	r3, r2, r2, lsl #2
 4868 005a 9B00     		lsls	r3, r3, #2
 4869 005c 1349     		ldr	r1, .L378+4
 4870 005e CB58     		ldr	r3, [r1, r3]
 4871 0060 3BB9     		cbnz	r3, .L369
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4872              		.loc 1 4067 7 discriminator 1 view .LVU1338
 4873 0062 0123     		movs	r3, #1
 4874 0064 03FA02F2 		lsl	r2, r3, r2
 4875 0068 1149     		ldr	r1, .L378+8
 4876 006a 0B68     		ldr	r3, [r1]
 4877 006c 23EA0203 		bic	r3, r3, r2
 4878 0070 0B60     		str	r3, [r1]
 4879              	.L369:
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4880              		.loc 1 4071 31 view .LVU1339
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4881              		.loc 1 4076 67 view .LVU1340
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4882              		.loc 1 4077 6 view .LVU1341
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4883              		.loc 1 4077 31 is_stmt 0 view .LVU1342
 4884 0072 606C     		ldr	r0, [r4, #68]
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4885              		.loc 1 4077 24 view .LVU1343
 4886 0074 E062     		str	r0, [r4, #44]
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4887              		.loc 1 4082 6 is_stmt 1 view .LVU1344
 4888 0076 C0F10703 		rsb	r3, r0, #7
 4889 007a A361     		str	r3, [r4, #24]
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4890              		.loc 1 4083 6 view .LVU1345
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4891              		.loc 1 4083 6 view .LVU1346
 4892 007c 0124     		movs	r4, #1
 4893              	.LVL337:
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4894              		.loc 1 4083 6 is_stmt 0 view .LVU1347
 4895 007e 04FA00F3 		lsl	r3, r4, r0
 4896 0082 0B4A     		ldr	r2, .L378+8
 4897 0084 1168     		ldr	r1, [r2]
 4898 0086 0B43     		orrs	r3, r3, r1
 4899 0088 1360     		str	r3, [r2]
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4900              		.loc 1 4083 6 is_stmt 1 view .LVU1348
 4901 008a 00EB8000 		add	r0, r0, r0, lsl #2
 4902 008e 2946     		mov	r1, r5
 4903 0090 064B     		ldr	r3, .L378+4
 4904 0092 03EB8000 		add	r0, r3, r0, lsl #2
 4905 0096 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/ccODOtJH.s 			page 203


 4906              	.LVL338:
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4907              		.loc 1 4083 36 view .LVU1349
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4908              		.loc 1 4093 6 view .LVU1350
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4909              		.loc 1 4093 14 is_stmt 0 view .LVU1351
 4910 009a 2046     		mov	r0, r4
 4911 009c D4E7     		b	.L363
 4912              	.LVL339:
 4913              	.L370:
 4914              	.LCFI44:
 4915              		.cfi_def_cfa_offset 0
 4916              		.cfi_restore 3
 4917              		.cfi_restore 4
 4918              		.cfi_restore 5
 4919              		.cfi_restore 14
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4920              		.loc 1 4041 13 view .LVU1352
 4921 009e 0020     		movs	r0, #0
 4922              	.LVL340:
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4923              		.loc 1 4111 2 view .LVU1353
 4924 00a0 7047     		bx	lr
 4925              	.LVL341:
 4926              	.L371:
 4927              	.LCFI45:
 4928              		.cfi_def_cfa_offset 16
 4929              		.cfi_offset 3, -16
 4930              		.cfi_offset 4, -12
 4931              		.cfi_offset 5, -8
 4932              		.cfi_offset 14, -4
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4933              		.loc 1 4041 13 view .LVU1354
 4934 00a2 0020     		movs	r0, #0
 4935              	.LVL342:
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4936              		.loc 1 4041 13 view .LVU1355
 4937 00a4 D0E7     		b	.L363
 4938              	.L379:
 4939 00a6 00BF     		.align	2
 4940              	.L378:
 4941 00a8 00000000 		.word	.LANCHOR10
 4942 00ac 00000000 		.word	.LANCHOR4
 4943 00b0 00000000 		.word	.LANCHOR13
 4944              		.cfi_endproc
 4945              	.LFE44:
 4947              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4948              		.align	1
 4949              		.global	vTaskPriorityDisinheritAfterTimeout
 4950              		.syntax unified
 4951              		.thumb
 4952              		.thumb_func
 4953              		.fpu fpv4-sp-d16
 4955              	vTaskPriorityDisinheritAfterTimeout:
 4956              	.LVL343:
 4957              	.LFB45:
ARM GAS  /tmp/ccODOtJH.s 			page 204


4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4958              		.loc 1 4119 2 is_stmt 1 view -0
 4959              		.cfi_startproc
 4960              		@ args = 0, pretend = 0, frame = 0
 4961              		@ frame_needed = 0, uses_anonymous_args = 0
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4962              		.loc 1 4120 2 view .LVU1357
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4963              		.loc 1 4121 2 view .LVU1358
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4964              		.loc 1 4122 2 view .LVU1359
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4965              		.loc 1 4124 3 view .LVU1360
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4966              		.loc 1 4124 5 is_stmt 0 view .LVU1361
 4967 0000 0028     		cmp	r0, #0
 4968 0002 56D0     		beq	.L390
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4969              		.loc 1 4119 2 view .LVU1362
 4970 0004 38B5     		push	{r3, r4, r5, lr}
 4971              	.LCFI46:
 4972              		.cfi_def_cfa_offset 16
 4973              		.cfi_offset 3, -16
 4974              		.cfi_offset 4, -12
 4975              		.cfi_offset 5, -8
 4976              		.cfi_offset 14, -4
 4977 0006 0446     		mov	r4, r0
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4978              		.loc 1 4128 4 is_stmt 1 view .LVU1363
 4979 0008 836C     		ldr	r3, [r0, #72]
 4980 000a 43B9     		cbnz	r3, .L382
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4981              		.loc 1 4128 4 view .LVU1364
 4982              	.LBB194:
 4983              	.LBI194:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4984              		.loc 2 191 30 view .LVU1365
 4985              	.LBB195:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4986              		.loc 2 193 1 view .LVU1366
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4987              		.loc 2 195 2 view .LVU1367
 4988              		.syntax unified
 4989              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4990 000c 4FF05003 			mov r3, #80												
 4991 0010 83F31188 		msr basepri, r3											
 4992 0014 BFF36F8F 		isb														
 4993 0018 BFF34F8F 		dsb														
 4994              	
 4995              	@ 0 "" 2
 4996              	.LVL344:
 4997              		.thumb
 4998              		.syntax unified
 4999              	.L383:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5000              		.loc 2 195 2 is_stmt 0 view .LVU1368
 5001              	.LBE195:
ARM GAS  /tmp/ccODOtJH.s 			page 205


 5002              	.LBE194:
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5003              		.loc 1 4128 4 is_stmt 1 discriminator 1 view .LVU1369
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5004              		.loc 1 4128 4 discriminator 1 view .LVU1370
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5005              		.loc 1 4128 4 discriminator 1 view .LVU1371
 5006 001c FEE7     		b	.L383
 5007              	.L382:
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5008              		.loc 1 4128 40 discriminator 2 view .LVU1372
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5009              		.loc 1 4134 4 discriminator 2 view .LVU1373
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5010              		.loc 1 4134 13 is_stmt 0 discriminator 2 view .LVU1374
 5011 001e 426C     		ldr	r2, [r0, #68]
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5012              		.loc 1 4134 6 discriminator 2 view .LVU1375
 5013 0020 8A42     		cmp	r2, r1
 5014 0022 00D2     		bcs	.L384
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5015              		.loc 1 4136 21 view .LVU1376
 5016 0024 0A46     		mov	r2, r1
 5017              	.L384:
 5018              	.LVL345:
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5019              		.loc 1 4144 4 is_stmt 1 view .LVU1377
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5020              		.loc 1 4144 13 is_stmt 0 view .LVU1378
 5021 0026 E16A     		ldr	r1, [r4, #44]
 5022              	.LVL346:
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5023              		.loc 1 4144 6 view .LVU1379
 5024 0028 9142     		cmp	r1, r2
 5025 002a 01D0     		beq	.L380
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5026              		.loc 1 4150 5 is_stmt 1 view .LVU1380
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5027              		.loc 1 4150 7 is_stmt 0 view .LVU1381
 5028 002c 012B     		cmp	r3, #1
 5029 002e 00D0     		beq	.L393
 5030              	.LVL347:
 5031              	.L380:
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5032              		.loc 1 4213 2 view .LVU1382
 5033 0030 38BD     		pop	{r3, r4, r5, pc}
 5034              	.LVL348:
 5035              	.L393:
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5036              		.loc 1 4155 6 is_stmt 1 view .LVU1383
 5037 0032 204B     		ldr	r3, .L395
 5038 0034 1B68     		ldr	r3, [r3]
 5039 0036 A342     		cmp	r3, r4
 5040 0038 32D0     		beq	.L394
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5041              		.loc 1 4155 43 discriminator 2 view .LVU1384
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
ARM GAS  /tmp/ccODOtJH.s 			page 206


 5042              		.loc 1 4160 67 discriminator 2 view .LVU1385
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 5043              		.loc 1 4161 6 discriminator 2 view .LVU1386
 5044              	.LVL349:
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5045              		.loc 1 4162 6 discriminator 2 view .LVU1387
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5046              		.loc 1 4162 24 is_stmt 0 discriminator 2 view .LVU1388
 5047 003a E262     		str	r2, [r4, #44]
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5048              		.loc 1 4166 6 is_stmt 1 discriminator 2 view .LVU1389
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5049              		.loc 1 4166 12 is_stmt 0 discriminator 2 view .LVU1390
 5050 003c A369     		ldr	r3, [r4, #24]
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5051              		.loc 1 4166 8 discriminator 2 view .LVU1391
 5052 003e 002B     		cmp	r3, #0
 5053 0040 02DB     		blt	.L387
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5054              		.loc 1 4168 7 is_stmt 1 view .LVU1392
 5055 0042 C2F10702 		rsb	r2, r2, #7
 5056              	.LVL350:
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5057              		.loc 1 4168 7 is_stmt 0 view .LVU1393
 5058 0046 A261     		str	r2, [r4, #24]
 5059              	.L387:
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5060              		.loc 1 4172 31 is_stmt 1 view .LVU1394
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5061              		.loc 1 4181 6 view .LVU1395
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5062              		.loc 1 4181 10 is_stmt 0 view .LVU1396
 5063 0048 6269     		ldr	r2, [r4, #20]
 5064 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5065              	.LVL351:
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5066              		.loc 1 4181 10 view .LVU1397
 5067 004e 1A4B     		ldr	r3, .L395+4
 5068 0050 03EB8101 		add	r1, r3, r1, lsl #2
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5069              		.loc 1 4181 8 view .LVU1398
 5070 0054 8A42     		cmp	r2, r1
 5071 0056 EBD1     		bne	.L380
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5072              		.loc 1 4183 7 is_stmt 1 view .LVU1399
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5073              		.loc 1 4183 11 is_stmt 0 view .LVU1400
 5074 0058 251D     		adds	r5, r4, #4
 5075 005a 2846     		mov	r0, r5
 5076              	.LVL352:
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5077              		.loc 1 4183 11 view .LVU1401
 5078 005c FFF7FEFF 		bl	uxListRemove
 5079              	.LVL353:
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5080              		.loc 1 4183 9 view .LVU1402
 5081 0060 70B9     		cbnz	r0, .L388
ARM GAS  /tmp/ccODOtJH.s 			page 207


4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5082              		.loc 1 4185 8 is_stmt 1 view .LVU1403
 5083 0062 E26A     		ldr	r2, [r4, #44]
 5084 0064 02EB8203 		add	r3, r2, r2, lsl #2
 5085 0068 9B00     		lsls	r3, r3, #2
 5086 006a 1349     		ldr	r1, .L395+4
 5087 006c CB58     		ldr	r3, [r1, r3]
 5088 006e 3BB9     		cbnz	r3, .L388
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5089              		.loc 1 4185 8 discriminator 1 view .LVU1404
 5090 0070 0123     		movs	r3, #1
 5091 0072 03FA02F2 		lsl	r2, r3, r2
 5092 0076 1149     		ldr	r1, .L395+8
 5093 0078 0B68     		ldr	r3, [r1]
 5094 007a 23EA0203 		bic	r3, r3, r2
 5095 007e 0B60     		str	r3, [r1]
 5096              	.L388:
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5097              		.loc 1 4189 32 view .LVU1405
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5098              		.loc 1 4192 7 view .LVU1406
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5099              		.loc 1 4192 7 view .LVU1407
 5100 0080 E06A     		ldr	r0, [r4, #44]
 5101 0082 0123     		movs	r3, #1
 5102 0084 8340     		lsls	r3, r3, r0
 5103 0086 0D4A     		ldr	r2, .L395+8
 5104 0088 1168     		ldr	r1, [r2]
 5105 008a 0B43     		orrs	r3, r3, r1
 5106 008c 1360     		str	r3, [r2]
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5107              		.loc 1 4192 7 view .LVU1408
 5108 008e 00EB8000 		add	r0, r0, r0, lsl #2
 5109 0092 2946     		mov	r1, r5
 5110 0094 084B     		ldr	r3, .L395+4
 5111 0096 03EB8000 		add	r0, r3, r0, lsl #2
 5112 009a FFF7FEFF 		bl	vListInsertEnd
 5113              	.LVL354:
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5114              		.loc 1 4192 37 view .LVU1409
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5115              		.loc 1 4211 28 view .LVU1410
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5116              		.loc 1 4213 2 is_stmt 0 view .LVU1411
 5117 009e C7E7     		b	.L380
 5118              	.LVL355:
 5119              	.L394:
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5120              		.loc 1 4155 6 is_stmt 1 view .LVU1412
 5121              	.LBB196:
 5122              	.LBI196:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5123              		.loc 2 191 30 view .LVU1413
 5124              	.LBB197:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5125              		.loc 2 193 1 view .LVU1414
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/ccODOtJH.s 			page 208


 5126              		.loc 2 195 2 view .LVU1415
 5127              		.syntax unified
 5128              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5129 00a0 4FF05003 			mov r3, #80												
 5130 00a4 83F31188 		msr basepri, r3											
 5131 00a8 BFF36F8F 		isb														
 5132 00ac BFF34F8F 		dsb														
 5133              	
 5134              	@ 0 "" 2
 5135              	.LVL356:
 5136              		.thumb
 5137              		.syntax unified
 5138              	.L386:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5139              		.loc 2 195 2 is_stmt 0 view .LVU1416
 5140              	.LBE197:
 5141              	.LBE196:
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5142              		.loc 1 4155 6 is_stmt 1 discriminator 2 view .LVU1417
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5143              		.loc 1 4155 6 discriminator 2 view .LVU1418
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5144              		.loc 1 4155 6 discriminator 2 view .LVU1419
 5145 00b0 FEE7     		b	.L386
 5146              	.LVL357:
 5147              	.L390:
 5148              	.LCFI47:
 5149              		.cfi_def_cfa_offset 0
 5150              		.cfi_restore 3
 5151              		.cfi_restore 4
 5152              		.cfi_restore 5
 5153              		.cfi_restore 14
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5154              		.loc 1 4155 6 is_stmt 0 discriminator 2 view .LVU1420
 5155 00b2 7047     		bx	lr
 5156              	.L396:
 5157              		.align	2
 5158              	.L395:
 5159 00b4 00000000 		.word	.LANCHOR10
 5160 00b8 00000000 		.word	.LANCHOR4
 5161 00bc 00000000 		.word	.LANCHOR13
 5162              		.cfi_endproc
 5163              	.LFE45:
 5165              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5166              		.align	1
 5167              		.global	uxTaskResetEventItemValue
 5168              		.syntax unified
 5169              		.thumb
 5170              		.thumb_func
 5171              		.fpu fpv4-sp-d16
 5173              	uxTaskResetEventItemValue:
 5174              	.LFB46:
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5175              		.loc 1 4534 1 is_stmt 1 view -0
 5176              		.cfi_startproc
 5177              		@ args = 0, pretend = 0, frame = 0
 5178              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccODOtJH.s 			page 209


 5179              		@ link register save eliminated.
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5180              		.loc 1 4535 1 view .LVU1422
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5181              		.loc 1 4537 2 view .LVU1423
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5182              		.loc 1 4537 13 is_stmt 0 view .LVU1424
 5183 0000 044A     		ldr	r2, .L398
 5184 0002 1368     		ldr	r3, [r2]
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5185              		.loc 1 4537 11 view .LVU1425
 5186 0004 9869     		ldr	r0, [r3, #24]
 5187              	.LVL358:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5188              		.loc 1 4541 2 is_stmt 1 view .LVU1426
 5189 0006 1368     		ldr	r3, [r2]
 5190 0008 DB6A     		ldr	r3, [r3, #44]
 5191 000a 1268     		ldr	r2, [r2]
 5192 000c C3F10703 		rsb	r3, r3, #7
 5193 0010 9361     		str	r3, [r2, #24]
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5194              		.loc 1 4543 2 view .LVU1427
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5195              		.loc 1 4544 1 is_stmt 0 view .LVU1428
 5196 0012 7047     		bx	lr
 5197              	.L399:
 5198              		.align	2
 5199              	.L398:
 5200 0014 00000000 		.word	.LANCHOR10
 5201              		.cfi_endproc
 5202              	.LFE46:
 5204              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5205              		.align	1
 5206              		.global	pvTaskIncrementMutexHeldCount
 5207              		.syntax unified
 5208              		.thumb
 5209              		.thumb_func
 5210              		.fpu fpv4-sp-d16
 5212              	pvTaskIncrementMutexHeldCount:
 5213              	.LFB47:
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5214              		.loc 1 4550 2 is_stmt 1 view -0
 5215              		.cfi_startproc
 5216              		@ args = 0, pretend = 0, frame = 0
 5217              		@ frame_needed = 0, uses_anonymous_args = 0
 5218              		@ link register save eliminated.
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5219              		.loc 1 4553 3 view .LVU1430
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5220              		.loc 1 4553 20 is_stmt 0 view .LVU1431
 5221 0000 054B     		ldr	r3, .L402
 5222 0002 1B68     		ldr	r3, [r3]
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5223              		.loc 1 4553 5 view .LVU1432
 5224 0004 23B1     		cbz	r3, .L401
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5225              		.loc 1 4555 4 is_stmt 1 view .LVU1433
ARM GAS  /tmp/ccODOtJH.s 			page 210


4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5226              		.loc 1 4555 18 is_stmt 0 view .LVU1434
 5227 0006 044B     		ldr	r3, .L402
 5228 0008 1A68     		ldr	r2, [r3]
 5229 000a 936C     		ldr	r3, [r2, #72]
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5230              		.loc 1 4555 35 view .LVU1435
 5231 000c 0133     		adds	r3, r3, #1
 5232 000e 9364     		str	r3, [r2, #72]
 5233              	.L401:
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5234              		.loc 1 4558 3 is_stmt 1 view .LVU1436
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5235              		.loc 1 4558 10 is_stmt 0 view .LVU1437
 5236 0010 014B     		ldr	r3, .L402
 5237 0012 1868     		ldr	r0, [r3]
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5238              		.loc 1 4559 2 view .LVU1438
 5239 0014 7047     		bx	lr
 5240              	.L403:
 5241 0016 00BF     		.align	2
 5242              	.L402:
 5243 0018 00000000 		.word	.LANCHOR10
 5244              		.cfi_endproc
 5245              	.LFE47:
 5247              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5248              		.align	1
 5249              		.global	ulTaskNotifyTake
 5250              		.syntax unified
 5251              		.thumb
 5252              		.thumb_func
 5253              		.fpu fpv4-sp-d16
 5255              	ulTaskNotifyTake:
 5256              	.LVL359:
 5257              	.LFB48:
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5258              		.loc 1 4567 2 is_stmt 1 view -0
 5259              		.cfi_startproc
 5260              		@ args = 0, pretend = 0, frame = 0
 5261              		@ frame_needed = 0, uses_anonymous_args = 0
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5262              		.loc 1 4567 2 is_stmt 0 view .LVU1440
 5263 0000 38B5     		push	{r3, r4, r5, lr}
 5264              	.LCFI48:
 5265              		.cfi_def_cfa_offset 16
 5266              		.cfi_offset 3, -16
 5267              		.cfi_offset 4, -12
 5268              		.cfi_offset 5, -8
 5269              		.cfi_offset 14, -4
 5270 0002 0546     		mov	r5, r0
 5271 0004 0C46     		mov	r4, r1
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5272              		.loc 1 4568 2 is_stmt 1 view .LVU1441
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5273              		.loc 1 4570 3 view .LVU1442
 5274 0006 FFF7FEFF 		bl	vPortEnterCritical
 5275              	.LVL360:
ARM GAS  /tmp/ccODOtJH.s 			page 211


4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5276              		.loc 1 4573 4 view .LVU1443
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5277              		.loc 1 4573 20 is_stmt 0 view .LVU1444
 5278 000a 1A4B     		ldr	r3, .L410
 5279 000c 1B68     		ldr	r3, [r3]
 5280 000e DB6C     		ldr	r3, [r3, #76]
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5281              		.loc 1 4573 6 view .LVU1445
 5282 0010 2BB9     		cbnz	r3, .L405
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5283              		.loc 1 4576 5 is_stmt 1 view .LVU1446
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5284              		.loc 1 4576 17 is_stmt 0 view .LVU1447
 5285 0012 184B     		ldr	r3, .L410
 5286 0014 1B68     		ldr	r3, [r3]
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5287              		.loc 1 4576 33 view .LVU1448
 5288 0016 0122     		movs	r2, #1
 5289 0018 83F85020 		strb	r2, [r3, #80]
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5290              		.loc 1 4578 5 is_stmt 1 view .LVU1449
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5291              		.loc 1 4578 7 is_stmt 0 view .LVU1450
 5292 001c ACB9     		cbnz	r4, .L409
 5293              	.L405:
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5294              		.loc 1 4596 29 is_stmt 1 view .LVU1451
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5295              		.loc 1 4599 3 view .LVU1452
 5296 001e FFF7FEFF 		bl	vPortExitCritical
 5297              	.LVL361:
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5298              		.loc 1 4601 3 view .LVU1453
 5299 0022 FFF7FEFF 		bl	vPortEnterCritical
 5300              	.LVL362:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5301              		.loc 1 4603 27 view .LVU1454
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5302              		.loc 1 4604 4 view .LVU1455
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5303              		.loc 1 4604 27 is_stmt 0 view .LVU1456
 5304 0026 134B     		ldr	r3, .L410
 5305 0028 1B68     		ldr	r3, [r3]
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5306              		.loc 1 4604 13 view .LVU1457
 5307 002a DC6C     		ldr	r4, [r3, #76]
 5308              	.LVL363:
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5309              		.loc 1 4606 4 is_stmt 1 view .LVU1458
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5310              		.loc 1 4606 6 is_stmt 0 view .LVU1459
 5311 002c 24B1     		cbz	r4, .L406
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5312              		.loc 1 4608 5 is_stmt 1 view .LVU1460
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5313              		.loc 1 4608 7 is_stmt 0 view .LVU1461
ARM GAS  /tmp/ccODOtJH.s 			page 212


 5314 002e DDB1     		cbz	r5, .L407
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5315              		.loc 1 4610 6 is_stmt 1 view .LVU1462
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5316              		.loc 1 4610 18 is_stmt 0 view .LVU1463
 5317 0030 104B     		ldr	r3, .L410
 5318 0032 1B68     		ldr	r3, [r3]
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5319              		.loc 1 4610 36 view .LVU1464
 5320 0034 0022     		movs	r2, #0
 5321 0036 DA64     		str	r2, [r3, #76]
 5322              	.L406:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5323              		.loc 1 4619 29 is_stmt 1 view .LVU1465
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5324              		.loc 1 4622 4 view .LVU1466
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5325              		.loc 1 4622 16 is_stmt 0 view .LVU1467
 5326 0038 0E4B     		ldr	r3, .L410
 5327 003a 1B68     		ldr	r3, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5328              		.loc 1 4622 32 view .LVU1468
 5329 003c 0022     		movs	r2, #0
 5330 003e 83F85020 		strb	r2, [r3, #80]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5331              		.loc 1 4624 3 is_stmt 1 view .LVU1469
 5332 0042 FFF7FEFF 		bl	vPortExitCritical
 5333              	.LVL364:
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5334              		.loc 1 4626 3 view .LVU1470
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5335              		.loc 1 4627 2 is_stmt 0 view .LVU1471
 5336 0046 2046     		mov	r0, r4
 5337 0048 38BD     		pop	{r3, r4, r5, pc}
 5338              	.LVL365:
 5339              	.L409:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5340              		.loc 1 4580 6 is_stmt 1 view .LVU1472
 5341 004a 1146     		mov	r1, r2
 5342 004c 2046     		mov	r0, r4
 5343 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5344              	.LVL366:
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5345              		.loc 1 4581 35 view .LVU1473
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5346              		.loc 1 4587 6 view .LVU1474
 5347 0052 4FF0E023 		mov	r3, #-536813568
 5348 0056 4FF08052 		mov	r2, #268435456
 5349 005a C3F8042D 		str	r2, [r3, #3332]
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5350              		.loc 1 4587 6 view .LVU1475
 5351              		.syntax unified
 5352              	@ 4587 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5353 005e BFF34F8F 		dsb
 5354              	@ 0 "" 2
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5355              		.loc 1 4587 6 view .LVU1476
ARM GAS  /tmp/ccODOtJH.s 			page 213


 5356              	@ 4587 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5357 0062 BFF36F8F 		isb
 5358              	@ 0 "" 2
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5359              		.loc 1 4587 28 view .LVU1477
 5360              		.thumb
 5361              		.syntax unified
 5362 0066 DAE7     		b	.L405
 5363              	.LVL367:
 5364              	.L407:
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5365              		.loc 1 4614 6 view .LVU1478
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5366              		.loc 1 4614 18 is_stmt 0 view .LVU1479
 5367 0068 024B     		ldr	r3, .L410
 5368 006a 1B68     		ldr	r3, [r3]
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5369              		.loc 1 4614 47 view .LVU1480
 5370 006c 621E     		subs	r2, r4, #1
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5371              		.loc 1 4614 36 view .LVU1481
 5372 006e DA64     		str	r2, [r3, #76]
 5373 0070 E2E7     		b	.L406
 5374              	.L411:
 5375 0072 00BF     		.align	2
 5376              	.L410:
 5377 0074 00000000 		.word	.LANCHOR10
 5378              		.cfi_endproc
 5379              	.LFE48:
 5381              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5382              		.align	1
 5383              		.global	xTaskNotifyWait
 5384              		.syntax unified
 5385              		.thumb
 5386              		.thumb_func
 5387              		.fpu fpv4-sp-d16
 5389              	xTaskNotifyWait:
 5390              	.LVL368:
 5391              	.LFB49:
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5392              		.loc 1 4635 2 is_stmt 1 view -0
 5393              		.cfi_startproc
 5394              		@ args = 0, pretend = 0, frame = 0
 5395              		@ frame_needed = 0, uses_anonymous_args = 0
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5396              		.loc 1 4635 2 is_stmt 0 view .LVU1483
 5397 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5398              	.LCFI49:
 5399              		.cfi_def_cfa_offset 24
 5400              		.cfi_offset 3, -24
 5401              		.cfi_offset 4, -20
 5402              		.cfi_offset 5, -16
 5403              		.cfi_offset 6, -12
 5404              		.cfi_offset 7, -8
 5405              		.cfi_offset 14, -4
 5406 0002 0646     		mov	r6, r0
 5407 0004 0F46     		mov	r7, r1
ARM GAS  /tmp/ccODOtJH.s 			page 214


 5408 0006 1446     		mov	r4, r2
 5409 0008 1D46     		mov	r5, r3
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5410              		.loc 1 4636 2 is_stmt 1 view .LVU1484
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5411              		.loc 1 4638 3 view .LVU1485
 5412 000a FFF7FEFF 		bl	vPortEnterCritical
 5413              	.LVL369:
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5414              		.loc 1 4641 4 view .LVU1486
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5415              		.loc 1 4641 20 is_stmt 0 view .LVU1487
 5416 000e 214B     		ldr	r3, .L420
 5417 0010 1B68     		ldr	r3, [r3]
 5418 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5419 0016 D2B2     		uxtb	r2, r2
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5420              		.loc 1 4641 6 view .LVU1488
 5421 0018 022A     		cmp	r2, #2
 5422 001a 0AD0     		beq	.L413
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5423              		.loc 1 4646 5 is_stmt 1 view .LVU1489
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5424              		.loc 1 4646 35 is_stmt 0 view .LVU1490
 5425 001c 1D4B     		ldr	r3, .L420
 5426 001e 1A68     		ldr	r2, [r3]
 5427 0020 D06C     		ldr	r0, [r2, #76]
 5428 0022 20EA0606 		bic	r6, r0, r6
 5429              	.LVL370:
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5430              		.loc 1 4646 35 view .LVU1491
 5431 0026 D664     		str	r6, [r2, #76]
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5432              		.loc 1 4649 5 is_stmt 1 view .LVU1492
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5433              		.loc 1 4649 17 is_stmt 0 view .LVU1493
 5434 0028 1B68     		ldr	r3, [r3]
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5435              		.loc 1 4649 33 view .LVU1494
 5436 002a 0122     		movs	r2, #1
 5437 002c 83F85020 		strb	r2, [r3, #80]
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5438              		.loc 1 4651 5 is_stmt 1 view .LVU1495
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5439              		.loc 1 4651 7 is_stmt 0 view .LVU1496
 5440 0030 CDB9     		cbnz	r5, .L418
 5441              	.L413:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5442              		.loc 1 4669 29 is_stmt 1 view .LVU1497
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5443              		.loc 1 4672 3 view .LVU1498
 5444 0032 FFF7FEFF 		bl	vPortExitCritical
 5445              	.LVL371:
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5446              		.loc 1 4674 3 view .LVU1499
 5447 0036 FFF7FEFF 		bl	vPortEnterCritical
 5448              	.LVL372:
ARM GAS  /tmp/ccODOtJH.s 			page 215


4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5449              		.loc 1 4676 27 view .LVU1500
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5450              		.loc 1 4678 4 view .LVU1501
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5451              		.loc 1 4678 6 is_stmt 0 view .LVU1502
 5452 003a 1CB1     		cbz	r4, .L414
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5453              		.loc 1 4682 5 is_stmt 1 view .LVU1503
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5454              		.loc 1 4682 41 is_stmt 0 view .LVU1504
 5455 003c 154B     		ldr	r3, .L420
 5456 003e 1B68     		ldr	r3, [r3]
 5457 0040 DB6C     		ldr	r3, [r3, #76]
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5458              		.loc 1 4682 27 view .LVU1505
 5459 0042 2360     		str	r3, [r4]
 5460              	.L414:
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5461              		.loc 1 4689 4 is_stmt 1 view .LVU1506
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5462              		.loc 1 4689 20 is_stmt 0 view .LVU1507
 5463 0044 134B     		ldr	r3, .L420
 5464 0046 1B68     		ldr	r3, [r3]
 5465 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5466 004c DBB2     		uxtb	r3, r3
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5467              		.loc 1 4689 6 view .LVU1508
 5468 004e 022B     		cmp	r3, #2
 5469 0050 18D0     		beq	.L419
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5470              		.loc 1 4692 13 view .LVU1509
 5471 0052 0024     		movs	r4, #0
 5472              	.LVL373:
 5473              	.L415:
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5474              		.loc 1 4702 4 is_stmt 1 view .LVU1510
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5475              		.loc 1 4702 16 is_stmt 0 view .LVU1511
 5476 0054 0F4B     		ldr	r3, .L420
 5477 0056 1B68     		ldr	r3, [r3]
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5478              		.loc 1 4702 32 view .LVU1512
 5479 0058 0022     		movs	r2, #0
 5480 005a 83F85020 		strb	r2, [r3, #80]
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5481              		.loc 1 4704 3 is_stmt 1 view .LVU1513
 5482 005e FFF7FEFF 		bl	vPortExitCritical
 5483              	.LVL374:
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5484              		.loc 1 4706 3 view .LVU1514
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5485              		.loc 1 4707 2 is_stmt 0 view .LVU1515
 5486 0062 2046     		mov	r0, r4
 5487 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5488              	.LVL375:
 5489              	.L418:
ARM GAS  /tmp/ccODOtJH.s 			page 216


4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5490              		.loc 1 4653 6 is_stmt 1 view .LVU1516
 5491 0066 1146     		mov	r1, r2
 5492 0068 2846     		mov	r0, r5
 5493 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5494              	.LVL376:
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5495              		.loc 1 4654 35 view .LVU1517
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5496              		.loc 1 4660 6 view .LVU1518
 5497 006e 4FF0E023 		mov	r3, #-536813568
 5498 0072 4FF08052 		mov	r2, #268435456
 5499 0076 C3F8042D 		str	r2, [r3, #3332]
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5500              		.loc 1 4660 6 view .LVU1519
 5501              		.syntax unified
 5502              	@ 4660 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5503 007a BFF34F8F 		dsb
 5504              	@ 0 "" 2
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5505              		.loc 1 4660 6 view .LVU1520
 5506              	@ 4660 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5507 007e BFF36F8F 		isb
 5508              	@ 0 "" 2
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5509              		.loc 1 4660 28 view .LVU1521
 5510              		.thumb
 5511              		.syntax unified
 5512 0082 D6E7     		b	.L413
 5513              	.L419:
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5514              		.loc 1 4698 5 view .LVU1522
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5515              		.loc 1 4698 35 is_stmt 0 view .LVU1523
 5516 0084 034B     		ldr	r3, .L420
 5517 0086 1B68     		ldr	r3, [r3]
 5518 0088 D96C     		ldr	r1, [r3, #76]
 5519 008a 21EA0707 		bic	r7, r1, r7
 5520              	.LVL377:
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5521              		.loc 1 4698 35 view .LVU1524
 5522 008e DF64     		str	r7, [r3, #76]
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5523              		.loc 1 4699 5 is_stmt 1 view .LVU1525
 5524              	.LVL378:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5525              		.loc 1 4699 13 is_stmt 0 view .LVU1526
 5526 0090 0124     		movs	r4, #1
 5527              	.LVL379:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5528              		.loc 1 4699 13 view .LVU1527
 5529 0092 DFE7     		b	.L415
 5530              	.L421:
 5531              		.align	2
 5532              	.L420:
 5533 0094 00000000 		.word	.LANCHOR10
 5534              		.cfi_endproc
ARM GAS  /tmp/ccODOtJH.s 			page 217


 5535              	.LFE49:
 5537              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5538              		.align	1
 5539              		.global	xTaskGenericNotify
 5540              		.syntax unified
 5541              		.thumb
 5542              		.thumb_func
 5543              		.fpu fpv4-sp-d16
 5545              	xTaskGenericNotify:
 5546              	.LVL380:
 5547              	.LFB50:
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5548              		.loc 1 4715 2 is_stmt 1 view -0
 5549              		.cfi_startproc
 5550              		@ args = 0, pretend = 0, frame = 0
 5551              		@ frame_needed = 0, uses_anonymous_args = 0
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5552              		.loc 1 4715 2 is_stmt 0 view .LVU1529
 5553 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5554              	.LCFI50:
 5555              		.cfi_def_cfa_offset 24
 5556              		.cfi_offset 3, -24
 5557              		.cfi_offset 4, -20
 5558              		.cfi_offset 5, -16
 5559              		.cfi_offset 6, -12
 5560              		.cfi_offset 7, -8
 5561              		.cfi_offset 14, -4
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5562              		.loc 1 4716 2 is_stmt 1 view .LVU1530
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5563              		.loc 1 4717 2 view .LVU1531
 5564              	.LVL381:
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5565              		.loc 1 4718 2 view .LVU1532
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5566              		.loc 1 4720 3 view .LVU1533
 5567 0002 A8B1     		cbz	r0, .L441
 5568 0004 0F46     		mov	r7, r1
 5569 0006 1446     		mov	r4, r2
 5570 0008 1D46     		mov	r5, r3
 5571 000a 0646     		mov	r6, r0
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5572              		.loc 1 4720 32 discriminator 2 view .LVU1534
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5573              		.loc 1 4721 3 discriminator 2 view .LVU1535
 5574              	.LVL382:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5575              		.loc 1 4723 3 discriminator 2 view .LVU1536
 5576 000c FFF7FEFF 		bl	vPortEnterCritical
 5577              	.LVL383:
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5578              		.loc 1 4725 4 discriminator 2 view .LVU1537
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5579              		.loc 1 4725 6 is_stmt 0 discriminator 2 view .LVU1538
 5580 0010 0DB1     		cbz	r5, .L425
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5581              		.loc 1 4727 5 is_stmt 1 view .LVU1539
ARM GAS  /tmp/ccODOtJH.s 			page 218


4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5582              		.loc 1 4727 42 is_stmt 0 view .LVU1540
 5583 0012 F36C     		ldr	r3, [r6, #76]
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5584              		.loc 1 4727 35 view .LVU1541
 5585 0014 2B60     		str	r3, [r5]
 5586              	.L425:
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5587              		.loc 1 4730 4 is_stmt 1 view .LVU1542
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5588              		.loc 1 4730 26 is_stmt 0 view .LVU1543
 5589 0016 96F85030 		ldrb	r3, [r6, #80]	@ zero_extendqisi2
 5590 001a DBB2     		uxtb	r3, r3
 5591              	.LVL384:
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5592              		.loc 1 4732 4 is_stmt 1 view .LVU1544
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5593              		.loc 1 4732 25 is_stmt 0 view .LVU1545
 5594 001c 0222     		movs	r2, #2
 5595 001e 86F85020 		strb	r2, [r6, #80]
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5596              		.loc 1 4734 4 is_stmt 1 view .LVU1546
 5597 0022 042C     		cmp	r4, #4
 5598 0024 1FD8     		bhi	.L426
 5599 0026 DFE804F0 		tbb	[pc, r4]
 5600              	.L428:
 5601 002a 2B       		.byte	(.L437-.L428)/2
 5602 002b 0C       		.byte	(.L431-.L428)/2
 5603 002c 11       		.byte	(.L430-.L428)/2
 5604 002d 16       		.byte	(.L429-.L428)/2
 5605 002e 19       		.byte	(.L427-.L428)/2
 5606              	.LVL385:
 5607 002f 00       		.p2align 1
 5608              	.L441:
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5609              		.loc 1 4720 3 view .LVU1547
 5610              	.LBB198:
 5611              	.LBI198:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5612              		.loc 2 191 30 view .LVU1548
 5613              	.LBB199:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5614              		.loc 2 193 1 view .LVU1549
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5615              		.loc 2 195 2 view .LVU1550
 5616              		.syntax unified
 5617              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5618 0030 4FF05003 			mov r3, #80												
 5619 0034 83F31188 		msr basepri, r3											
 5620 0038 BFF36F8F 		isb														
 5621 003c BFF34F8F 		dsb														
 5622              	
 5623              	@ 0 "" 2
 5624              	.LVL386:
 5625              		.thumb
 5626              		.syntax unified
 5627              	.L424:
ARM GAS  /tmp/ccODOtJH.s 			page 219


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5628              		.loc 2 195 2 is_stmt 0 view .LVU1551
 5629              	.LBE199:
 5630              	.LBE198:
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5631              		.loc 1 4720 3 is_stmt 1 discriminator 1 view .LVU1552
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5632              		.loc 1 4720 3 discriminator 1 view .LVU1553
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5633              		.loc 1 4720 3 discriminator 1 view .LVU1554
 5634 0040 FEE7     		b	.L424
 5635              	.LVL387:
 5636              	.L431:
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5637              		.loc 1 4737 6 view .LVU1555
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5638              		.loc 1 4737 29 is_stmt 0 view .LVU1556
 5639 0042 F26C     		ldr	r2, [r6, #76]
 5640 0044 1743     		orrs	r7, r7, r2
 5641              	.LVL388:
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5642              		.loc 1 4737 29 view .LVU1557
 5643 0046 F764     		str	r7, [r6, #76]
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5644              		.loc 1 4738 6 is_stmt 1 view .LVU1558
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5645              		.loc 1 4717 13 is_stmt 0 view .LVU1559
 5646 0048 0124     		movs	r4, #1
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5647              		.loc 1 4738 6 view .LVU1560
 5648 004a 1AE0     		b	.L432
 5649              	.LVL389:
 5650              	.L430:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5651              		.loc 1 4741 6 is_stmt 1 view .LVU1561
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5652              		.loc 1 4741 13 is_stmt 0 view .LVU1562
 5653 004c F26C     		ldr	r2, [r6, #76]
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5654              		.loc 1 4741 32 view .LVU1563
 5655 004e 0132     		adds	r2, r2, #1
 5656 0050 F264     		str	r2, [r6, #76]
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5657              		.loc 1 4742 6 is_stmt 1 view .LVU1564
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5658              		.loc 1 4717 13 is_stmt 0 view .LVU1565
 5659 0052 0124     		movs	r4, #1
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5660              		.loc 1 4742 6 view .LVU1566
 5661 0054 15E0     		b	.L432
 5662              	.L429:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5663              		.loc 1 4745 6 is_stmt 1 view .LVU1567
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5664              		.loc 1 4745 29 is_stmt 0 view .LVU1568
 5665 0056 F764     		str	r7, [r6, #76]
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 220


 5666              		.loc 1 4746 6 is_stmt 1 view .LVU1569
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5667              		.loc 1 4717 13 is_stmt 0 view .LVU1570
 5668 0058 0124     		movs	r4, #1
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5669              		.loc 1 4746 6 view .LVU1571
 5670 005a 12E0     		b	.L432
 5671              	.L427:
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5672              		.loc 1 4749 6 is_stmt 1 view .LVU1572
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5673              		.loc 1 4749 8 is_stmt 0 view .LVU1573
 5674 005c 022B     		cmp	r3, #2
 5675 005e 16D0     		beq	.L438
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5676              		.loc 1 4751 7 is_stmt 1 view .LVU1574
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5677              		.loc 1 4751 30 is_stmt 0 view .LVU1575
 5678 0060 F764     		str	r7, [r6, #76]
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5679              		.loc 1 4717 13 view .LVU1576
 5680 0062 0124     		movs	r4, #1
 5681 0064 0DE0     		b	.L432
 5682              	.L426:
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5683              		.loc 1 4769 6 is_stmt 1 view .LVU1577
 5684 0066 F26C     		ldr	r2, [r6, #76]
 5685 0068 B2F1FF3F 		cmp	r2, #-1
 5686 006c 11D0     		beq	.L439
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5687              		.loc 1 4769 6 view .LVU1578
 5688              	.LBB200:
 5689              	.LBI200:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5690              		.loc 2 191 30 view .LVU1579
 5691              	.LBB201:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5692              		.loc 2 193 1 view .LVU1580
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5693              		.loc 2 195 2 view .LVU1581
 5694              		.syntax unified
 5695              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5696 006e 4FF05003 			mov r3, #80												
 5697 0072 83F31188 		msr basepri, r3											
 5698 0076 BFF36F8F 		isb														
 5699 007a BFF34F8F 		dsb														
 5700              	
 5701              	@ 0 "" 2
 5702              	.LVL390:
 5703              		.thumb
 5704              		.syntax unified
 5705              	.L433:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5706              		.loc 2 195 2 is_stmt 0 view .LVU1582
 5707              	.LBE201:
 5708              	.LBE200:
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 221


 5709              		.loc 1 4769 6 is_stmt 1 discriminator 2 view .LVU1583
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5710              		.loc 1 4769 6 discriminator 2 view .LVU1584
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5711              		.loc 1 4769 6 discriminator 2 view .LVU1585
 5712 007e FEE7     		b	.L433
 5713              	.LVL391:
 5714              	.L437:
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5715              		.loc 1 4732 25 is_stmt 0 view .LVU1586
 5716 0080 0124     		movs	r4, #1
 5717              	.LVL392:
 5718              	.L432:
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5719              		.loc 1 4774 22 is_stmt 1 view .LVU1587
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5720              		.loc 1 4778 4 view .LVU1588
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5721              		.loc 1 4778 6 is_stmt 0 view .LVU1589
 5722 0082 012B     		cmp	r3, #1
 5723 0084 07D0     		beq	.L442
 5724              	.LVL393:
 5725              	.L434:
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5726              		.loc 1 4815 29 is_stmt 1 view .LVU1590
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5727              		.loc 1 4818 3 view .LVU1591
 5728 0086 FFF7FEFF 		bl	vPortExitCritical
 5729              	.LVL394:
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5730              		.loc 1 4820 3 view .LVU1592
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5731              		.loc 1 4821 2 is_stmt 0 view .LVU1593
 5732 008a 2046     		mov	r0, r4
 5733 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5734              	.LVL395:
 5735              	.L438:
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5736              		.loc 1 4756 15 view .LVU1594
 5737 008e 0024     		movs	r4, #0
 5738 0090 F7E7     		b	.L432
 5739              	.L439:
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5740              		.loc 1 4717 13 view .LVU1595
 5741 0092 0124     		movs	r4, #1
 5742 0094 F5E7     		b	.L432
 5743              	.LVL396:
 5744              	.L442:
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5745              		.loc 1 4780 5 is_stmt 1 view .LVU1596
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5746              		.loc 1 4780 14 is_stmt 0 view .LVU1597
 5747 0096 351D     		adds	r5, r6, #4
 5748              	.LVL397:
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5749              		.loc 1 4780 14 view .LVU1598
 5750 0098 2846     		mov	r0, r5
ARM GAS  /tmp/ccODOtJH.s 			page 222


 5751 009a FFF7FEFF 		bl	uxListRemove
 5752              	.LVL398:
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5753              		.loc 1 4781 5 is_stmt 1 view .LVU1599
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5754              		.loc 1 4781 5 view .LVU1600
 5755 009e F06A     		ldr	r0, [r6, #44]
 5756 00a0 0123     		movs	r3, #1
 5757 00a2 8340     		lsls	r3, r3, r0
 5758 00a4 134A     		ldr	r2, .L443
 5759 00a6 1168     		ldr	r1, [r2]
 5760 00a8 0B43     		orrs	r3, r3, r1
 5761 00aa 1360     		str	r3, [r2]
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5762              		.loc 1 4781 5 view .LVU1601
 5763 00ac 00EB8000 		add	r0, r0, r0, lsl #2
 5764 00b0 2946     		mov	r1, r5
 5765 00b2 114B     		ldr	r3, .L443+4
 5766 00b4 03EB8000 		add	r0, r3, r0, lsl #2
 5767 00b8 FFF7FEFF 		bl	vListInsertEnd
 5768              	.LVL399:
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5769              		.loc 1 4781 35 view .LVU1602
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5770              		.loc 1 4784 5 view .LVU1603
 5771 00bc B36A     		ldr	r3, [r6, #40]
 5772 00be 43B1     		cbz	r3, .L435
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5773              		.loc 1 4784 5 view .LVU1604
 5774              	.LBB202:
 5775              	.LBI202:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5776              		.loc 2 191 30 view .LVU1605
 5777              	.LBB203:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5778              		.loc 2 193 1 view .LVU1606
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5779              		.loc 2 195 2 view .LVU1607
 5780              		.syntax unified
 5781              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5782 00c0 4FF05003 			mov r3, #80												
 5783 00c4 83F31188 		msr basepri, r3											
 5784 00c8 BFF36F8F 		isb														
 5785 00cc BFF34F8F 		dsb														
 5786              	
 5787              	@ 0 "" 2
 5788              	.LVL400:
 5789              		.thumb
 5790              		.syntax unified
 5791              	.L436:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5792              		.loc 2 195 2 is_stmt 0 view .LVU1608
 5793              	.LBE203:
 5794              	.LBE202:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5795              		.loc 1 4784 5 is_stmt 1 discriminator 3 view .LVU1609
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 223


 5796              		.loc 1 4784 5 discriminator 3 view .LVU1610
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5797              		.loc 1 4784 5 discriminator 3 view .LVU1611
 5798 00d0 FEE7     		b	.L436
 5799              	.L435:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5800              		.loc 1 4784 82 discriminator 2 view .LVU1612
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5801              		.loc 1 4802 5 discriminator 2 view .LVU1613
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5802              		.loc 1 4802 14 is_stmt 0 discriminator 2 view .LVU1614
 5803 00d2 F26A     		ldr	r2, [r6, #44]
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5804              		.loc 1 4802 41 discriminator 2 view .LVU1615
 5805 00d4 094B     		ldr	r3, .L443+8
 5806 00d6 1B68     		ldr	r3, [r3]
 5807 00d8 DB6A     		ldr	r3, [r3, #44]
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5808              		.loc 1 4802 7 discriminator 2 view .LVU1616
 5809 00da 9A42     		cmp	r2, r3
 5810 00dc D3D9     		bls	.L434
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5811              		.loc 1 4806 6 is_stmt 1 view .LVU1617
 5812 00de 4FF0E023 		mov	r3, #-536813568
 5813 00e2 4FF08052 		mov	r2, #268435456
 5814 00e6 C3F8042D 		str	r2, [r3, #3332]
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5815              		.loc 1 4806 6 view .LVU1618
 5816              		.syntax unified
 5817              	@ 4806 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5818 00ea BFF34F8F 		dsb
 5819              	@ 0 "" 2
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5820              		.loc 1 4806 6 view .LVU1619
 5821              	@ 4806 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5822 00ee BFF36F8F 		isb
 5823              	@ 0 "" 2
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5824              		.loc 1 4806 37 view .LVU1620
 5825              		.thumb
 5826              		.syntax unified
 5827 00f2 C8E7     		b	.L434
 5828              	.L444:
 5829              		.align	2
 5830              	.L443:
 5831 00f4 00000000 		.word	.LANCHOR13
 5832 00f8 00000000 		.word	.LANCHOR4
 5833 00fc 00000000 		.word	.LANCHOR10
 5834              		.cfi_endproc
 5835              	.LFE50:
 5837              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5838              		.align	1
 5839              		.global	xTaskGenericNotifyFromISR
 5840              		.syntax unified
 5841              		.thumb
 5842              		.thumb_func
 5843              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccODOtJH.s 			page 224


 5845              	xTaskGenericNotifyFromISR:
 5846              	.LVL401:
 5847              	.LFB51:
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5848              		.loc 1 4829 2 view -0
 5849              		.cfi_startproc
 5850              		@ args = 4, pretend = 0, frame = 0
 5851              		@ frame_needed = 0, uses_anonymous_args = 0
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5852              		.loc 1 4830 2 view .LVU1622
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5853              		.loc 1 4831 2 view .LVU1623
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5854              		.loc 1 4832 2 view .LVU1624
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5855              		.loc 1 4833 2 view .LVU1625
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5856              		.loc 1 4835 3 view .LVU1626
 5857 0000 08B3     		cbz	r0, .L468
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5858              		.loc 1 4829 2 is_stmt 0 discriminator 2 view .LVU1627
 5859 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5860              	.LCFI51:
 5861              		.cfi_def_cfa_offset 24
 5862              		.cfi_offset 4, -24
 5863              		.cfi_offset 5, -20
 5864              		.cfi_offset 6, -16
 5865              		.cfi_offset 7, -12
 5866              		.cfi_offset 8, -8
 5867              		.cfi_offset 14, -4
 5868 0006 0E46     		mov	r6, r1
 5869 0008 1446     		mov	r4, r2
 5870 000a 1D46     		mov	r5, r3
 5871 000c 0746     		mov	r7, r0
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5872              		.loc 1 4835 32 is_stmt 1 discriminator 2 view .LVU1628
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5873              		.loc 1 4853 3 discriminator 2 view .LVU1629
 5874 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5875              	.LVL402:
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5876              		.loc 1 4855 3 discriminator 2 view .LVU1630
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5877              		.loc 1 4857 3 discriminator 2 view .LVU1631
 5878              	.LBB204:
 5879              	.LBI204:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5880              		.loc 2 207 34 discriminator 2 view .LVU1632
 5881              	.LBB205:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5882              		.loc 2 209 1 discriminator 2 view .LVU1633
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5883              		.loc 2 211 2 discriminator 2 view .LVU1634
 5884              		.syntax unified
 5885              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5886 0012 EFF31188 			mrs r8, basepri											
 5887 0016 4FF05003 		mov r3, #80												
ARM GAS  /tmp/ccODOtJH.s 			page 225


 5888 001a 83F31188 		msr basepri, r3											
 5889 001e BFF36F8F 		isb														
 5890 0022 BFF34F8F 		dsb														
 5891              	
 5892              	@ 0 "" 2
 5893              	.LVL403:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5894              		.loc 2 223 2 discriminator 2 view .LVU1635
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5895              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1636
 5896              		.thumb
 5897              		.syntax unified
 5898              	.LBE205:
 5899              	.LBE204:
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5900              		.loc 1 4859 4 is_stmt 1 discriminator 2 view .LVU1637
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5901              		.loc 1 4859 6 is_stmt 0 discriminator 2 view .LVU1638
 5902 0026 0DB1     		cbz	r5, .L448
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5903              		.loc 1 4861 5 is_stmt 1 view .LVU1639
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5904              		.loc 1 4861 42 is_stmt 0 view .LVU1640
 5905 0028 FB6C     		ldr	r3, [r7, #76]
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5906              		.loc 1 4861 35 view .LVU1641
 5907 002a 2B60     		str	r3, [r5]
 5908              	.L448:
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5909              		.loc 1 4864 4 is_stmt 1 view .LVU1642
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5910              		.loc 1 4864 26 is_stmt 0 view .LVU1643
 5911 002c 97F85030 		ldrb	r3, [r7, #80]	@ zero_extendqisi2
 5912 0030 DBB2     		uxtb	r3, r3
 5913              	.LVL404:
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5914              		.loc 1 4865 4 is_stmt 1 view .LVU1644
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5915              		.loc 1 4865 25 is_stmt 0 view .LVU1645
 5916 0032 0222     		movs	r2, #2
 5917 0034 87F85020 		strb	r2, [r7, #80]
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5918              		.loc 1 4867 4 is_stmt 1 view .LVU1646
 5919 0038 042C     		cmp	r4, #4
 5920 003a 1FD8     		bhi	.L449
 5921 003c DFE804F0 		tbb	[pc, r4]
 5922              	.L451:
 5923 0040 2B       		.byte	(.L463-.L451)/2
 5924 0041 0C       		.byte	(.L454-.L451)/2
 5925 0042 11       		.byte	(.L453-.L451)/2
 5926 0043 16       		.byte	(.L452-.L451)/2
 5927 0044 19       		.byte	(.L450-.L451)/2
 5928              	.LVL405:
 5929 0045 00       		.p2align 1
 5930              	.L468:
 5931              	.LCFI52:
 5932              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccODOtJH.s 			page 226


 5933              		.cfi_restore 4
 5934              		.cfi_restore 5
 5935              		.cfi_restore 6
 5936              		.cfi_restore 7
 5937              		.cfi_restore 8
 5938              		.cfi_restore 14
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5939              		.loc 1 4835 3 view .LVU1647
 5940              	.LBB206:
 5941              	.LBI206:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5942              		.loc 2 191 30 view .LVU1648
 5943              	.LBB207:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5944              		.loc 2 193 1 view .LVU1649
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5945              		.loc 2 195 2 view .LVU1650
 5946              		.syntax unified
 5947              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5948 0046 4FF05003 			mov r3, #80												
 5949 004a 83F31188 		msr basepri, r3											
 5950 004e BFF36F8F 		isb														
 5951 0052 BFF34F8F 		dsb														
 5952              	
 5953              	@ 0 "" 2
 5954              	.LVL406:
 5955              		.thumb
 5956              		.syntax unified
 5957              	.L447:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5958              		.loc 2 195 2 is_stmt 0 view .LVU1651
 5959              	.LBE207:
 5960              	.LBE206:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5961              		.loc 1 4835 3 is_stmt 1 discriminator 1 view .LVU1652
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5962              		.loc 1 4835 3 discriminator 1 view .LVU1653
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5963              		.loc 1 4835 3 discriminator 1 view .LVU1654
 5964 0056 FEE7     		b	.L447
 5965              	.LVL407:
 5966              	.L454:
 5967              	.LCFI53:
 5968              		.cfi_def_cfa_offset 24
 5969              		.cfi_offset 4, -24
 5970              		.cfi_offset 5, -20
 5971              		.cfi_offset 6, -16
 5972              		.cfi_offset 7, -12
 5973              		.cfi_offset 8, -8
 5974              		.cfi_offset 14, -4
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5975              		.loc 1 4870 6 view .LVU1655
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5976              		.loc 1 4870 29 is_stmt 0 view .LVU1656
 5977 0058 FA6C     		ldr	r2, [r7, #76]
 5978 005a 1643     		orrs	r6, r6, r2
 5979              	.LVL408:
ARM GAS  /tmp/ccODOtJH.s 			page 227


4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5980              		.loc 1 4870 29 view .LVU1657
 5981 005c FE64     		str	r6, [r7, #76]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5982              		.loc 1 4871 6 is_stmt 1 view .LVU1658
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5983              		.loc 1 4832 13 is_stmt 0 view .LVU1659
 5984 005e 0124     		movs	r4, #1
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5985              		.loc 1 4871 6 view .LVU1660
 5986 0060 1AE0     		b	.L455
 5987              	.LVL409:
 5988              	.L453:
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5989              		.loc 1 4874 6 is_stmt 1 view .LVU1661
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5990              		.loc 1 4874 13 is_stmt 0 view .LVU1662
 5991 0062 FA6C     		ldr	r2, [r7, #76]
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5992              		.loc 1 4874 32 view .LVU1663
 5993 0064 0132     		adds	r2, r2, #1
 5994 0066 FA64     		str	r2, [r7, #76]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5995              		.loc 1 4875 6 is_stmt 1 view .LVU1664
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5996              		.loc 1 4832 13 is_stmt 0 view .LVU1665
 5997 0068 0124     		movs	r4, #1
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5998              		.loc 1 4875 6 view .LVU1666
 5999 006a 15E0     		b	.L455
 6000              	.L452:
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6001              		.loc 1 4878 6 is_stmt 1 view .LVU1667
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6002              		.loc 1 4878 29 is_stmt 0 view .LVU1668
 6003 006c FE64     		str	r6, [r7, #76]
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6004              		.loc 1 4879 6 is_stmt 1 view .LVU1669
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6005              		.loc 1 4832 13 is_stmt 0 view .LVU1670
 6006 006e 0124     		movs	r4, #1
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6007              		.loc 1 4879 6 view .LVU1671
 6008 0070 12E0     		b	.L455
 6009              	.L450:
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6010              		.loc 1 4882 6 is_stmt 1 view .LVU1672
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6011              		.loc 1 4882 8 is_stmt 0 view .LVU1673
 6012 0072 022B     		cmp	r3, #2
 6013 0074 17D0     		beq	.L464
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6014              		.loc 1 4884 7 is_stmt 1 view .LVU1674
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6015              		.loc 1 4884 30 is_stmt 0 view .LVU1675
 6016 0076 FE64     		str	r6, [r7, #76]
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
ARM GAS  /tmp/ccODOtJH.s 			page 228


 6017              		.loc 1 4832 13 view .LVU1676
 6018 0078 0124     		movs	r4, #1
 6019 007a 0DE0     		b	.L455
 6020              	.L449:
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6021              		.loc 1 4902 6 is_stmt 1 view .LVU1677
 6022 007c FA6C     		ldr	r2, [r7, #76]
 6023 007e B2F1FF3F 		cmp	r2, #-1
 6024 0082 12D0     		beq	.L465
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6025              		.loc 1 4902 6 view .LVU1678
 6026              	.LBB208:
 6027              	.LBI208:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6028              		.loc 2 191 30 view .LVU1679
 6029              	.LBB209:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6030              		.loc 2 193 1 view .LVU1680
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6031              		.loc 2 195 2 view .LVU1681
 6032              		.syntax unified
 6033              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6034 0084 4FF05003 			mov r3, #80												
 6035 0088 83F31188 		msr basepri, r3											
 6036 008c BFF36F8F 		isb														
 6037 0090 BFF34F8F 		dsb														
 6038              	
 6039              	@ 0 "" 2
 6040              	.LVL410:
 6041              		.thumb
 6042              		.syntax unified
 6043              	.L456:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6044              		.loc 2 195 2 is_stmt 0 view .LVU1682
 6045              	.LBE209:
 6046              	.LBE208:
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6047              		.loc 1 4902 6 is_stmt 1 discriminator 2 view .LVU1683
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6048              		.loc 1 4902 6 discriminator 2 view .LVU1684
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6049              		.loc 1 4902 6 discriminator 2 view .LVU1685
 6050 0094 FEE7     		b	.L456
 6051              	.LVL411:
 6052              	.L463:
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6053              		.loc 1 4865 25 is_stmt 0 view .LVU1686
 6054 0096 0124     		movs	r4, #1
 6055              	.LVL412:
 6056              	.L455:
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6057              		.loc 1 4906 31 is_stmt 1 view .LVU1687
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6058              		.loc 1 4910 4 view .LVU1688
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6059              		.loc 1 4910 6 is_stmt 0 view .LVU1689
 6060 0098 012B     		cmp	r3, #1
ARM GAS  /tmp/ccODOtJH.s 			page 229


 6061 009a 08D0     		beq	.L469
 6062              	.LVL413:
 6063              	.L457:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6064              		.loc 1 4943 30 is_stmt 1 view .LVU1690
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6065              		.loc 1 4947 3 view .LVU1691
 6066              	.LBB210:
 6067              	.LBI210:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6068              		.loc 2 227 30 view .LVU1692
 6069              	.LBB211:
 6070              		.loc 2 229 2 view .LVU1693
 6071              		.syntax unified
 6072              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6073 009c 88F31188 			msr basepri, r8	
 6074              	@ 0 "" 2
 6075              	.LVL414:
 6076              		.loc 2 229 2 is_stmt 0 view .LVU1694
 6077              		.thumb
 6078              		.syntax unified
 6079              	.LBE211:
 6080              	.LBE210:
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6081              		.loc 1 4949 3 is_stmt 1 view .LVU1695
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6082              		.loc 1 4950 2 is_stmt 0 view .LVU1696
 6083 00a0 2046     		mov	r0, r4
 6084 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6085              	.LVL415:
 6086              	.L464:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6087              		.loc 1 4889 15 view .LVU1697
 6088 00a6 0024     		movs	r4, #0
 6089 00a8 F6E7     		b	.L455
 6090              	.L465:
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6091              		.loc 1 4832 13 view .LVU1698
 6092 00aa 0124     		movs	r4, #1
 6093 00ac F4E7     		b	.L455
 6094              	.LVL416:
 6095              	.L469:
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6096              		.loc 1 4913 5 is_stmt 1 view .LVU1699
 6097 00ae BB6A     		ldr	r3, [r7, #40]
 6098              	.LVL417:
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6099              		.loc 1 4913 5 is_stmt 0 view .LVU1700
 6100 00b0 43B1     		cbz	r3, .L458
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6101              		.loc 1 4913 5 is_stmt 1 view .LVU1701
 6102              	.LBB212:
 6103              	.LBI212:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6104              		.loc 2 191 30 view .LVU1702
 6105              	.LBB213:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccODOtJH.s 			page 230


 6106              		.loc 2 193 1 view .LVU1703
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6107              		.loc 2 195 2 view .LVU1704
 6108              		.syntax unified
 6109              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6110 00b2 4FF05003 			mov r3, #80												
 6111 00b6 83F31188 		msr basepri, r3											
 6112 00ba BFF36F8F 		isb														
 6113 00be BFF34F8F 		dsb														
 6114              	
 6115              	@ 0 "" 2
 6116              	.LVL418:
 6117              		.thumb
 6118              		.syntax unified
 6119              	.L459:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6120              		.loc 2 195 2 is_stmt 0 view .LVU1705
 6121              	.LBE213:
 6122              	.LBE212:
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6123              		.loc 1 4913 5 is_stmt 1 discriminator 3 view .LVU1706
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6124              		.loc 1 4913 5 discriminator 3 view .LVU1707
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6125              		.loc 1 4913 5 discriminator 3 view .LVU1708
 6126 00c2 FEE7     		b	.L459
 6127              	.L458:
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6128              		.loc 1 4913 82 discriminator 2 view .LVU1709
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6129              		.loc 1 4915 5 discriminator 2 view .LVU1710
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6130              		.loc 1 4915 30 is_stmt 0 discriminator 2 view .LVU1711
 6131 00c4 154B     		ldr	r3, .L470
 6132 00c6 1B68     		ldr	r3, [r3]
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6133              		.loc 1 4915 7 discriminator 2 view .LVU1712
 6134 00c8 0BBB     		cbnz	r3, .L460
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6135              		.loc 1 4917 6 is_stmt 1 view .LVU1713
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6136              		.loc 1 4917 15 is_stmt 0 view .LVU1714
 6137 00ca 3D1D     		adds	r5, r7, #4
 6138              	.LVL419:
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6139              		.loc 1 4917 15 view .LVU1715
 6140 00cc 2846     		mov	r0, r5
 6141 00ce FFF7FEFF 		bl	uxListRemove
 6142              	.LVL420:
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6143              		.loc 1 4918 6 is_stmt 1 view .LVU1716
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6144              		.loc 1 4918 6 view .LVU1717
 6145 00d2 F86A     		ldr	r0, [r7, #44]
 6146 00d4 0123     		movs	r3, #1
 6147 00d6 8340     		lsls	r3, r3, r0
 6148 00d8 114A     		ldr	r2, .L470+4
ARM GAS  /tmp/ccODOtJH.s 			page 231


 6149 00da 1168     		ldr	r1, [r2]
 6150 00dc 0B43     		orrs	r3, r3, r1
 6151 00de 1360     		str	r3, [r2]
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6152              		.loc 1 4918 6 view .LVU1718
 6153 00e0 00EB8000 		add	r0, r0, r0, lsl #2
 6154 00e4 2946     		mov	r1, r5
 6155 00e6 0F4B     		ldr	r3, .L470+8
 6156 00e8 03EB8000 		add	r0, r3, r0, lsl #2
 6157 00ec FFF7FEFF 		bl	vListInsertEnd
 6158              	.LVL421:
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6159              		.loc 1 4918 36 view .LVU1719
 6160              	.L461:
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6161              		.loc 1 4927 5 view .LVU1720
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6162              		.loc 1 4927 14 is_stmt 0 view .LVU1721
 6163 00f0 FA6A     		ldr	r2, [r7, #44]
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6164              		.loc 1 4927 41 view .LVU1722
 6165 00f2 0D4B     		ldr	r3, .L470+12
 6166 00f4 1B68     		ldr	r3, [r3]
 6167 00f6 DB6A     		ldr	r3, [r3, #44]
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6168              		.loc 1 4927 7 view .LVU1723
 6169 00f8 9A42     		cmp	r2, r3
 6170 00fa CFD9     		bls	.L457
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6171              		.loc 1 4931 6 is_stmt 1 view .LVU1724
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6172              		.loc 1 4931 8 is_stmt 0 view .LVU1725
 6173 00fc 069B     		ldr	r3, [sp, #24]
 6174 00fe 13B1     		cbz	r3, .L462
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6175              		.loc 1 4933 7 is_stmt 1 view .LVU1726
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6176              		.loc 1 4933 34 is_stmt 0 view .LVU1727
 6177 0100 0123     		movs	r3, #1
 6178 0102 069A     		ldr	r2, [sp, #24]
 6179 0104 1360     		str	r3, [r2]
 6180              	.L462:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6181              		.loc 1 4939 6 is_stmt 1 view .LVU1728
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6182              		.loc 1 4939 20 is_stmt 0 view .LVU1729
 6183 0106 094B     		ldr	r3, .L470+16
 6184 0108 0122     		movs	r2, #1
 6185 010a 1A60     		str	r2, [r3]
 6186 010c C6E7     		b	.L457
 6187              	.LVL422:
 6188              	.L460:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6189              		.loc 1 4924 6 is_stmt 1 view .LVU1730
 6190 010e 07F11801 		add	r1, r7, #24
 6191 0112 0748     		ldr	r0, .L470+20
 6192 0114 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/ccODOtJH.s 			page 232


 6193              	.LVL423:
 6194 0118 EAE7     		b	.L461
 6195              	.L471:
 6196 011a 00BF     		.align	2
 6197              	.L470:
 6198 011c 00000000 		.word	.LANCHOR16
 6199 0120 00000000 		.word	.LANCHOR13
 6200 0124 00000000 		.word	.LANCHOR4
 6201 0128 00000000 		.word	.LANCHOR10
 6202 012c 00000000 		.word	.LANCHOR20
 6203 0130 00000000 		.word	.LANCHOR1
 6204              		.cfi_endproc
 6205              	.LFE51:
 6207              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6208              		.align	1
 6209              		.global	vTaskNotifyGiveFromISR
 6210              		.syntax unified
 6211              		.thumb
 6212              		.thumb_func
 6213              		.fpu fpv4-sp-d16
 6215              	vTaskNotifyGiveFromISR:
 6216              	.LVL424:
 6217              	.LFB52:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6218              		.loc 1 4958 2 view -0
 6219              		.cfi_startproc
 6220              		@ args = 0, pretend = 0, frame = 0
 6221              		@ frame_needed = 0, uses_anonymous_args = 0
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6222              		.loc 1 4958 2 is_stmt 0 view .LVU1732
 6223 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6224              	.LCFI54:
 6225              		.cfi_def_cfa_offset 24
 6226              		.cfi_offset 3, -24
 6227              		.cfi_offset 4, -20
 6228              		.cfi_offset 5, -16
 6229              		.cfi_offset 6, -12
 6230              		.cfi_offset 7, -8
 6231              		.cfi_offset 14, -4
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6232              		.loc 1 4959 2 is_stmt 1 view .LVU1733
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6233              		.loc 1 4960 2 view .LVU1734
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6234              		.loc 1 4961 2 view .LVU1735
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6235              		.loc 1 4963 3 view .LVU1736
 6236 0002 D8B1     		cbz	r0, .L482
 6237 0004 0D46     		mov	r5, r1
 6238 0006 0446     		mov	r4, r0
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6239              		.loc 1 4963 32 discriminator 2 view .LVU1737
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6240              		.loc 1 4981 3 discriminator 2 view .LVU1738
 6241 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6242              	.LVL425:
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccODOtJH.s 			page 233


 6243              		.loc 1 4983 3 discriminator 2 view .LVU1739
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6244              		.loc 1 4985 3 discriminator 2 view .LVU1740
 6245              	.LBB214:
 6246              	.LBI214:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6247              		.loc 2 207 34 discriminator 2 view .LVU1741
 6248              	.LBB215:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6249              		.loc 2 209 1 discriminator 2 view .LVU1742
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6250              		.loc 2 211 2 discriminator 2 view .LVU1743
 6251              		.syntax unified
 6252              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6253 000c EFF31186 			mrs r6, basepri											
 6254 0010 4FF05003 		mov r3, #80												
 6255 0014 83F31188 		msr basepri, r3											
 6256 0018 BFF36F8F 		isb														
 6257 001c BFF34F8F 		dsb														
 6258              	
 6259              	@ 0 "" 2
 6260              	.LVL426:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6261              		.loc 2 223 2 discriminator 2 view .LVU1744
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6262              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1745
 6263              		.thumb
 6264              		.syntax unified
 6265              	.LBE215:
 6266              	.LBE214:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6267              		.loc 1 4987 4 is_stmt 1 discriminator 2 view .LVU1746
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6268              		.loc 1 4987 26 is_stmt 0 discriminator 2 view .LVU1747
 6269 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6270 0024 DBB2     		uxtb	r3, r3
 6271              	.LVL427:
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6272              		.loc 1 4988 4 is_stmt 1 discriminator 2 view .LVU1748
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6273              		.loc 1 4988 25 is_stmt 0 discriminator 2 view .LVU1749
 6274 0026 0222     		movs	r2, #2
 6275 0028 84F85020 		strb	r2, [r4, #80]
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6276              		.loc 1 4992 4 is_stmt 1 discriminator 2 view .LVU1750
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6277              		.loc 1 4992 11 is_stmt 0 discriminator 2 view .LVU1751
 6278 002c E26C     		ldr	r2, [r4, #76]
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6279              		.loc 1 4992 30 discriminator 2 view .LVU1752
 6280 002e 0132     		adds	r2, r2, #1
 6281 0030 E264     		str	r2, [r4, #76]
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6282              		.loc 1 4994 36 is_stmt 1 discriminator 2 view .LVU1753
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6283              		.loc 1 4998 4 discriminator 2 view .LVU1754
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccODOtJH.s 			page 234


 6284              		.loc 1 4998 6 is_stmt 0 discriminator 2 view .LVU1755
 6285 0032 012B     		cmp	r3, #1
 6286 0034 0BD0     		beq	.L483
 6287              	.LVL428:
 6288              	.L475:
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6289              		.loc 1 5031 30 is_stmt 1 view .LVU1756
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6290              		.loc 1 5035 3 view .LVU1757
 6291              	.LBB216:
 6292              	.LBI216:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6293              		.loc 2 227 30 view .LVU1758
 6294              	.LBB217:
 6295              		.loc 2 229 2 view .LVU1759
 6296              		.syntax unified
 6297              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6298 0036 86F31188 			msr basepri, r6	
 6299              	@ 0 "" 2
 6300              	.LVL429:
 6301              		.loc 2 229 2 is_stmt 0 view .LVU1760
 6302              		.thumb
 6303              		.syntax unified
 6304              	.LBE217:
 6305              	.LBE216:
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6306              		.loc 1 5036 2 view .LVU1761
 6307 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6308              	.LVL430:
 6309              	.L482:
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6310              		.loc 1 4963 3 is_stmt 1 view .LVU1762
 6311              	.LBB218:
 6312              	.LBI218:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6313              		.loc 2 191 30 view .LVU1763
 6314              	.LBB219:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6315              		.loc 2 193 1 view .LVU1764
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6316              		.loc 2 195 2 view .LVU1765
 6317              		.syntax unified
 6318              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6319 003c 4FF05003 			mov r3, #80												
 6320 0040 83F31188 		msr basepri, r3											
 6321 0044 BFF36F8F 		isb														
 6322 0048 BFF34F8F 		dsb														
 6323              	
 6324              	@ 0 "" 2
 6325              	.LVL431:
 6326              		.thumb
 6327              		.syntax unified
 6328              	.L474:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6329              		.loc 2 195 2 is_stmt 0 view .LVU1766
 6330              	.LBE219:
 6331              	.LBE218:
ARM GAS  /tmp/ccODOtJH.s 			page 235


4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6332              		.loc 1 4963 3 is_stmt 1 discriminator 1 view .LVU1767
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6333              		.loc 1 4963 3 discriminator 1 view .LVU1768
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6334              		.loc 1 4963 3 discriminator 1 view .LVU1769
 6335 004c FEE7     		b	.L474
 6336              	.LVL432:
 6337              	.L483:
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6338              		.loc 1 5001 5 view .LVU1770
 6339 004e A36A     		ldr	r3, [r4, #40]
 6340              	.LVL433:
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6341              		.loc 1 5001 5 is_stmt 0 view .LVU1771
 6342 0050 43B1     		cbz	r3, .L476
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6343              		.loc 1 5001 5 is_stmt 1 view .LVU1772
 6344              	.LBB220:
 6345              	.LBI220:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6346              		.loc 2 191 30 view .LVU1773
 6347              	.LBB221:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6348              		.loc 2 193 1 view .LVU1774
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6349              		.loc 2 195 2 view .LVU1775
 6350              		.syntax unified
 6351              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6352 0052 4FF05003 			mov r3, #80												
 6353 0056 83F31188 		msr basepri, r3											
 6354 005a BFF36F8F 		isb														
 6355 005e BFF34F8F 		dsb														
 6356              	
 6357              	@ 0 "" 2
 6358              	.LVL434:
 6359              		.thumb
 6360              		.syntax unified
 6361              	.L477:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6362              		.loc 2 195 2 is_stmt 0 view .LVU1776
 6363              	.LBE221:
 6364              	.LBE220:
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6365              		.loc 1 5001 5 is_stmt 1 discriminator 2 view .LVU1777
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6366              		.loc 1 5001 5 discriminator 2 view .LVU1778
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6367              		.loc 1 5001 5 discriminator 2 view .LVU1779
 6368 0062 FEE7     		b	.L477
 6369              	.L476:
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6370              		.loc 1 5001 82 discriminator 2 view .LVU1780
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6371              		.loc 1 5003 5 discriminator 2 view .LVU1781
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6372              		.loc 1 5003 30 is_stmt 0 discriminator 2 view .LVU1782
ARM GAS  /tmp/ccODOtJH.s 			page 236


 6373 0064 144B     		ldr	r3, .L484
 6374 0066 1B68     		ldr	r3, [r3]
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6375              		.loc 1 5003 7 discriminator 2 view .LVU1783
 6376 0068 FBB9     		cbnz	r3, .L478
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6377              		.loc 1 5005 6 is_stmt 1 view .LVU1784
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6378              		.loc 1 5005 15 is_stmt 0 view .LVU1785
 6379 006a 271D     		adds	r7, r4, #4
 6380 006c 3846     		mov	r0, r7
 6381 006e FFF7FEFF 		bl	uxListRemove
 6382              	.LVL435:
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6383              		.loc 1 5006 6 is_stmt 1 view .LVU1786
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6384              		.loc 1 5006 6 view .LVU1787
 6385 0072 E06A     		ldr	r0, [r4, #44]
 6386 0074 0123     		movs	r3, #1
 6387 0076 8340     		lsls	r3, r3, r0
 6388 0078 104A     		ldr	r2, .L484+4
 6389 007a 1168     		ldr	r1, [r2]
 6390 007c 0B43     		orrs	r3, r3, r1
 6391 007e 1360     		str	r3, [r2]
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6392              		.loc 1 5006 6 view .LVU1788
 6393 0080 00EB8000 		add	r0, r0, r0, lsl #2
 6394 0084 3946     		mov	r1, r7
 6395 0086 0E4B     		ldr	r3, .L484+8
 6396 0088 03EB8000 		add	r0, r3, r0, lsl #2
 6397 008c FFF7FEFF 		bl	vListInsertEnd
 6398              	.LVL436:
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6399              		.loc 1 5006 36 view .LVU1789
 6400              	.L479:
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6401              		.loc 1 5015 5 view .LVU1790
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6402              		.loc 1 5015 14 is_stmt 0 view .LVU1791
 6403 0090 E26A     		ldr	r2, [r4, #44]
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6404              		.loc 1 5015 41 view .LVU1792
 6405 0092 0C4B     		ldr	r3, .L484+12
 6406 0094 1B68     		ldr	r3, [r3]
 6407 0096 DB6A     		ldr	r3, [r3, #44]
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6408              		.loc 1 5015 7 view .LVU1793
 6409 0098 9A42     		cmp	r2, r3
 6410 009a CCD9     		bls	.L475
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6411              		.loc 1 5019 6 is_stmt 1 view .LVU1794
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6412              		.loc 1 5019 8 is_stmt 0 view .LVU1795
 6413 009c 0DB1     		cbz	r5, .L480
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6414              		.loc 1 5021 7 is_stmt 1 view .LVU1796
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccODOtJH.s 			page 237


 6415              		.loc 1 5021 34 is_stmt 0 view .LVU1797
 6416 009e 0123     		movs	r3, #1
 6417 00a0 2B60     		str	r3, [r5]
 6418              	.L480:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6419              		.loc 1 5027 6 is_stmt 1 view .LVU1798
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6420              		.loc 1 5027 20 is_stmt 0 view .LVU1799
 6421 00a2 094B     		ldr	r3, .L484+16
 6422 00a4 0122     		movs	r2, #1
 6423 00a6 1A60     		str	r2, [r3]
 6424 00a8 C5E7     		b	.L475
 6425              	.L478:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6426              		.loc 1 5012 6 is_stmt 1 view .LVU1800
 6427 00aa 04F11801 		add	r1, r4, #24
 6428 00ae 0748     		ldr	r0, .L484+20
 6429 00b0 FFF7FEFF 		bl	vListInsertEnd
 6430              	.LVL437:
 6431 00b4 ECE7     		b	.L479
 6432              	.L485:
 6433 00b6 00BF     		.align	2
 6434              	.L484:
 6435 00b8 00000000 		.word	.LANCHOR16
 6436 00bc 00000000 		.word	.LANCHOR13
 6437 00c0 00000000 		.word	.LANCHOR4
 6438 00c4 00000000 		.word	.LANCHOR10
 6439 00c8 00000000 		.word	.LANCHOR20
 6440 00cc 00000000 		.word	.LANCHOR1
 6441              		.cfi_endproc
 6442              	.LFE52:
 6444              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6445              		.align	1
 6446              		.global	xTaskNotifyStateClear
 6447              		.syntax unified
 6448              		.thumb
 6449              		.thumb_func
 6450              		.fpu fpv4-sp-d16
 6452              	xTaskNotifyStateClear:
 6453              	.LVL438:
 6454              	.LFB53:
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6455              		.loc 1 5045 2 view -0
 6456              		.cfi_startproc
 6457              		@ args = 0, pretend = 0, frame = 0
 6458              		@ frame_needed = 0, uses_anonymous_args = 0
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6459              		.loc 1 5045 2 is_stmt 0 view .LVU1802
 6460 0000 10B5     		push	{r4, lr}
 6461              	.LCFI55:
 6462              		.cfi_def_cfa_offset 8
 6463              		.cfi_offset 4, -8
 6464              		.cfi_offset 14, -4
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6465              		.loc 1 5046 2 is_stmt 1 view .LVU1803
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6466              		.loc 1 5047 2 view .LVU1804
ARM GAS  /tmp/ccODOtJH.s 			page 238


5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6467              		.loc 1 5051 3 view .LVU1805
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6468              		.loc 1 5051 11 is_stmt 0 view .LVU1806
 6469 0002 0446     		mov	r4, r0
 6470 0004 58B1     		cbz	r0, .L491
 6471              	.LVL439:
 6472              	.L487:
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6473              		.loc 1 5053 3 is_stmt 1 discriminator 4 view .LVU1807
 6474 0006 FFF7FEFF 		bl	vPortEnterCritical
 6475              	.LVL440:
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6476              		.loc 1 5055 4 discriminator 4 view .LVU1808
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6477              		.loc 1 5055 13 is_stmt 0 discriminator 4 view .LVU1809
 6478 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6479 000e DBB2     		uxtb	r3, r3
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6480              		.loc 1 5055 6 discriminator 4 view .LVU1810
 6481 0010 022B     		cmp	r3, #2
 6482 0012 07D0     		beq	.L492
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6483              		.loc 1 5062 13 view .LVU1811
 6484 0014 0024     		movs	r4, #0
 6485              	.LVL441:
 6486              	.L488:
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6487              		.loc 1 5065 3 is_stmt 1 view .LVU1812
 6488 0016 FFF7FEFF 		bl	vPortExitCritical
 6489              	.LVL442:
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6490              		.loc 1 5067 3 view .LVU1813
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6491              		.loc 1 5068 2 is_stmt 0 view .LVU1814
 6492 001a 2046     		mov	r0, r4
 6493 001c 10BD     		pop	{r4, pc}
 6494              	.LVL443:
 6495              	.L491:
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6496              		.loc 1 5051 11 discriminator 1 view .LVU1815
 6497 001e 044B     		ldr	r3, .L493
 6498 0020 1C68     		ldr	r4, [r3]
 6499              	.LVL444:
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6500              		.loc 1 5051 11 discriminator 1 view .LVU1816
 6501 0022 F0E7     		b	.L487
 6502              	.LVL445:
 6503              	.L492:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6504              		.loc 1 5057 5 is_stmt 1 view .LVU1817
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6505              		.loc 1 5057 26 is_stmt 0 view .LVU1818
 6506 0024 0023     		movs	r3, #0
 6507 0026 84F85030 		strb	r3, [r4, #80]
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6508              		.loc 1 5058 5 is_stmt 1 view .LVU1819
ARM GAS  /tmp/ccODOtJH.s 			page 239


 6509              	.LVL446:
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6510              		.loc 1 5058 13 is_stmt 0 view .LVU1820
 6511 002a 0124     		movs	r4, #1
 6512              	.LVL447:
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6513              		.loc 1 5058 13 view .LVU1821
 6514 002c F3E7     		b	.L488
 6515              	.L494:
 6516 002e 00BF     		.align	2
 6517              	.L493:
 6518 0030 00000000 		.word	.LANCHOR10
 6519              		.cfi_endproc
 6520              	.LFE53:
 6522              		.global	pxCurrentTCB
 6523              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6524              		.align	2
 6525              		.set	.LANCHOR10,. + 0
 6528              	pxCurrentTCB:
 6529 0000 00000000 		.space	4
 6530              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6531              		.align	2
 6532              		.set	.LANCHOR2,. + 0
 6535              	pxDelayedTaskList:
 6536 0000 00000000 		.space	4
 6537              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6538              		.align	2
 6539              		.set	.LANCHOR8,. + 0
 6542              	pxOverflowDelayedTaskList:
 6543 0000 00000000 		.space	4
 6544              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6545              		.align	2
 6546              		.set	.LANCHOR4,. + 0
 6549              	pxReadyTasksLists:
 6550 0000 00000000 		.space	140
 6550      00000000 
 6550      00000000 
 6550      00000000 
 6550      00000000 
 6551              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6552              		.align	2
 6553              		.set	.LANCHOR9,. + 0
 6556              	uxCurrentNumberOfTasks:
 6557 0000 00000000 		.space	4
 6558              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6559              		.align	2
 6560              		.set	.LANCHOR14,. + 0
 6563              	uxDeletedTasksWaitingCleanUp:
 6564 0000 00000000 		.space	4
 6565              		.section	.bss.uxPendedTicks,"aw",%nobits
 6566              		.align	2
 6567              		.set	.LANCHOR19,. + 0
 6570              	uxPendedTicks:
 6571 0000 00000000 		.space	4
 6572              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6573              		.align	2
 6574              		.set	.LANCHOR16,. + 0
ARM GAS  /tmp/ccODOtJH.s 			page 240


 6577              	uxSchedulerSuspended:
 6578 0000 00000000 		.space	4
 6579              		.section	.bss.uxTaskNumber,"aw",%nobits
 6580              		.align	2
 6581              		.set	.LANCHOR12,. + 0
 6584              	uxTaskNumber:
 6585 0000 00000000 		.space	4
 6586              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6587              		.align	2
 6588              		.set	.LANCHOR13,. + 0
 6591              	uxTopReadyPriority:
 6592 0000 00000000 		.space	4
 6593              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6594              		.align	2
 6595              		.set	.LANCHOR5,. + 0
 6598              	xDelayedTaskList1:
 6599 0000 00000000 		.space	20
 6599      00000000 
 6599      00000000 
 6599      00000000 
 6599      00000000 
 6600              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6601              		.align	2
 6602              		.set	.LANCHOR6,. + 0
 6605              	xDelayedTaskList2:
 6606 0000 00000000 		.space	20
 6606      00000000 
 6606      00000000 
 6606      00000000 
 6606      00000000 
 6607              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6608              		.align	2
 6609              		.set	.LANCHOR17,. + 0
 6612              	xIdleTaskHandle:
 6613 0000 00000000 		.space	4
 6614              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6615              		.align	2
 6616              		.set	.LANCHOR3,. + 0
 6619              	xNextTaskUnblockTime:
 6620 0000 00000000 		.space	4
 6621              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6622              		.align	2
 6623              		.set	.LANCHOR18,. + 0
 6626              	xNumOfOverflows:
 6627 0000 00000000 		.space	4
 6628              		.section	.bss.xPendingReadyList,"aw",%nobits
 6629              		.align	2
 6630              		.set	.LANCHOR1,. + 0
 6633              	xPendingReadyList:
 6634 0000 00000000 		.space	20
 6634      00000000 
 6634      00000000 
 6634      00000000 
 6634      00000000 
 6635              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6636              		.align	2
 6637              		.set	.LANCHOR11,. + 0
ARM GAS  /tmp/ccODOtJH.s 			page 241


 6640              	xSchedulerRunning:
 6641 0000 00000000 		.space	4
 6642              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6643              		.align	2
 6644              		.set	.LANCHOR0,. + 0
 6647              	xSuspendedTaskList:
 6648 0000 00000000 		.space	20
 6648      00000000 
 6648      00000000 
 6648      00000000 
 6648      00000000 
 6649              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6650              		.align	2
 6651              		.set	.LANCHOR7,. + 0
 6654              	xTasksWaitingTermination:
 6655 0000 00000000 		.space	20
 6655      00000000 
 6655      00000000 
 6655      00000000 
 6655      00000000 
 6656              		.section	.bss.xTickCount,"aw",%nobits
 6657              		.align	2
 6658              		.set	.LANCHOR15,. + 0
 6661              	xTickCount:
 6662 0000 00000000 		.space	4
 6663              		.section	.bss.xYieldPending,"aw",%nobits
 6664              		.align	2
 6665              		.set	.LANCHOR20,. + 0
 6668              	xYieldPending:
 6669 0000 00000000 		.space	4
 6670              		.text
 6671              	.Letext0:
 6672              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.2.0/include/stddef.h"
 6673              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6674              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6675              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6676              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6677              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6678              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6679              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccODOtJH.s 			page 242


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccODOtJH.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccODOtJH.s:25     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccODOtJH.s:115    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/ccODOtJH.s:121    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccODOtJH.s:127    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccODOtJH.s:170    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/ccODOtJH.s:176    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccODOtJH.s:182    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccODOtJH.s:342    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccODOtJH.s:348    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccODOtJH.s:423    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/ccODOtJH.s:435    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccODOtJH.s:441    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccODOtJH.s:577    .text.prvAddNewTaskToReadyList:0000000000000090 $d
     /tmp/ccODOtJH.s:587    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccODOtJH.s:593    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/ccODOtJH.s:671    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccODOtJH.s:677    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccODOtJH.s:754    .text.prvCheckTasksWaitingTermination:0000000000000040 $d
     /tmp/ccODOtJH.s:761    .text.prvIdleTask:0000000000000000 $t
     /tmp/ccODOtJH.s:767    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccODOtJH.s:816    .text.prvIdleTask:0000000000000024 $d
     /tmp/ccODOtJH.s:821    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccODOtJH.s:827    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccODOtJH.s:947    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/ccODOtJH.s:958    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/ccODOtJH.s:965    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/ccODOtJH.s:1130   .text.xTaskCreate:0000000000000000 $t
     /tmp/ccODOtJH.s:1137   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccODOtJH.s:1262   .text.vTaskDelete:0000000000000000 $t
     /tmp/ccODOtJH.s:1269   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccODOtJH.s:1454   .text.vTaskDelete:00000000000000bc $d
     /tmp/ccODOtJH.s:1467   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccODOtJH.s:1474   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccODOtJH.s:1520   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/ccODOtJH.s:1525   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccODOtJH.s:1532   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccODOtJH.s:1613   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/ccODOtJH.s:1618   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccODOtJH.s:1625   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccODOtJH.s:1870   .text.vTaskPrioritySet:00000000000000dc $d
     /tmp/ccODOtJH.s:1877   .text.vTaskResume:0000000000000000 $t
     /tmp/ccODOtJH.s:1884   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccODOtJH.s:2015   .text.vTaskResume:000000000000007c $d
     /tmp/ccODOtJH.s:2022   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccODOtJH.s:2029   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccODOtJH.s:2200   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/ccODOtJH.s:2209   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/ccODOtJH.s:2213   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccODOtJH.s:2220   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccODOtJH.s:2322   .text.vTaskStartScheduler:000000000000005c $d
     /tmp/ccODOtJH.s:2332   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccODOtJH.s:2339   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccODOtJH.s:2382   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/ccODOtJH.s:2387   .text.vTaskSuspendAll:0000000000000000 $t
ARM GAS  /tmp/ccODOtJH.s 			page 243


     /tmp/ccODOtJH.s:2394   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccODOtJH.s:2412   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccODOtJH.s:2417   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccODOtJH.s:2424   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccODOtJH.s:2445   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccODOtJH.s:2450   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccODOtJH.s:2457   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccODOtJH.s:2486   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/ccODOtJH.s:2491   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccODOtJH.s:2498   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccODOtJH.s:2514   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccODOtJH.s:2519   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccODOtJH.s:2526   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccODOtJH.s:2587   .text.pcTaskGetName:0000000000000024 $d
     /tmp/ccODOtJH.s:2592   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccODOtJH.s:2599   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccODOtJH.s:2862   .text.xTaskIncrementTick:00000000000000ec $d
     /tmp/ccODOtJH.s:2877   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccODOtJH.s:2884   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccODOtJH.s:3120   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/ccODOtJH.s:3132   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccODOtJH.s:3139   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccODOtJH.s:3232   .text.vTaskDelay:0000000000000048 $d
     /tmp/ccODOtJH.s:3237   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccODOtJH.s:3244   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccODOtJH.s:3386   .text.vTaskSwitchContext:0000000000000084 $d
     /tmp/ccODOtJH.s:3397   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccODOtJH.s:3404   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccODOtJH.s:3609   .text.vTaskSuspend:00000000000000cc $d
     /tmp/ccODOtJH.s:3620   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccODOtJH.s:3627   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccODOtJH.s:3695   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/ccODOtJH.s:3700   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccODOtJH.s:3707   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccODOtJH.s:3824   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/ccODOtJH.s:3830   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccODOtJH.s:3837   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccODOtJH.s:3968   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/ccODOtJH.s:3978   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccODOtJH.s:3985   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccODOtJH.s:4121   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/ccODOtJH.s:4130   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccODOtJH.s:4137   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccODOtJH.s:4207   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/ccODOtJH.s:4213   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccODOtJH.s:4220   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccODOtJH.s:4243   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccODOtJH.s:4249   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccODOtJH.s:4256   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccODOtJH.s:4433   .text.xTaskCheckForTimeOut:000000000000007c $d
     /tmp/ccODOtJH.s:4440   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccODOtJH.s:4447   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccODOtJH.s:4464   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccODOtJH.s:4469   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccODOtJH.s:4476   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccODOtJH.s:4495   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccODOtJH.s:4500   .text.xTaskGetSchedulerState:0000000000000000 $t
ARM GAS  /tmp/ccODOtJH.s 			page 244


     /tmp/ccODOtJH.s:4507   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccODOtJH.s:4545   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/ccODOtJH.s:4551   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccODOtJH.s:4558   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccODOtJH.s:4730   .text.xTaskPriorityInherit:00000000000000ac $d
     /tmp/ccODOtJH.s:4737   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccODOtJH.s:4744   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccODOtJH.s:4941   .text.xTaskPriorityDisinherit:00000000000000a8 $d
     /tmp/ccODOtJH.s:4948   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccODOtJH.s:4955   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccODOtJH.s:5159   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000b4 $d
     /tmp/ccODOtJH.s:5166   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccODOtJH.s:5173   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccODOtJH.s:5200   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccODOtJH.s:5205   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccODOtJH.s:5212   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccODOtJH.s:5243   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccODOtJH.s:5248   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccODOtJH.s:5255   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccODOtJH.s:5377   .text.ulTaskNotifyTake:0000000000000074 $d
     /tmp/ccODOtJH.s:5382   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccODOtJH.s:5389   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccODOtJH.s:5533   .text.xTaskNotifyWait:0000000000000094 $d
     /tmp/ccODOtJH.s:5538   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccODOtJH.s:5545   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccODOtJH.s:5601   .text.xTaskGenericNotify:000000000000002a $d
     /tmp/ccODOtJH.s:5831   .text.xTaskGenericNotify:00000000000000f4 $d
     /tmp/ccODOtJH.s:5838   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccODOtJH.s:5845   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccODOtJH.s:5923   .text.xTaskGenericNotifyFromISR:0000000000000040 $d
     /tmp/ccODOtJH.s:6198   .text.xTaskGenericNotifyFromISR:000000000000011c $d
     /tmp/ccODOtJH.s:6208   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccODOtJH.s:6215   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccODOtJH.s:6435   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/ccODOtJH.s:6445   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccODOtJH.s:6452   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccODOtJH.s:6518   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/ccODOtJH.s:6528   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccODOtJH.s:6524   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccODOtJH.s:6531   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccODOtJH.s:6535   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccODOtJH.s:6538   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccODOtJH.s:6542   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccODOtJH.s:6545   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccODOtJH.s:6549   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccODOtJH.s:6552   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccODOtJH.s:6556   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccODOtJH.s:6559   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccODOtJH.s:6563   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccODOtJH.s:6566   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccODOtJH.s:6570   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccODOtJH.s:6573   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccODOtJH.s:6577   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccODOtJH.s:6580   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccODOtJH.s:6584   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccODOtJH.s:6587   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccODOtJH.s:6591   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
ARM GAS  /tmp/ccODOtJH.s 			page 245


     /tmp/ccODOtJH.s:6594   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccODOtJH.s:6598   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccODOtJH.s:6601   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccODOtJH.s:6605   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccODOtJH.s:6608   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccODOtJH.s:6612   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccODOtJH.s:6615   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccODOtJH.s:6619   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccODOtJH.s:6622   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccODOtJH.s:6626   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccODOtJH.s:6629   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccODOtJH.s:6633   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccODOtJH.s:6636   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccODOtJH.s:6640   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccODOtJH.s:6643   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccODOtJH.s:6647   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccODOtJH.s:6650   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccODOtJH.s:6654   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccODOtJH.s:6657   .bss.xTickCount:0000000000000000 $d
     /tmp/ccODOtJH.s:6661   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccODOtJH.s:6664   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccODOtJH.s:6668   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccODOtJH.s:5607   .text.xTaskGenericNotify:000000000000002f $d
     /tmp/ccODOtJH.s:5607   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/ccODOtJH.s:5929   .text.xTaskGenericNotifyFromISR:0000000000000045 $d
     /tmp/ccODOtJH.s:5929   .text.xTaskGenericNotifyFromISR:0000000000000046 $t

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
