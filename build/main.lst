ARM GAS  /tmp/ccwZeu25.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	1
  23              		.arch armv7e-m
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  27              		.fpu fpv4-sp-d16
  29              	MX_GPIO_Init:
  30              	.LFB139:
  31              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** #include "wolfssl/wolfcrypt/aes.h"
  24:Core/Src/main.c **** #include "wolfssl/wolfcrypt/random.h"
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /tmp/ccwZeu25.s 			page 2


  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** UART_HandleTypeDef huart2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** osThreadId defaultTaskHandle;
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  56:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccwZeu25.s 			page 3


  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 101:Core/Src/main.c ****   /* add mutexes, ... */
 102:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 105:Core/Src/main.c ****   /* add semaphores, ... */
 106:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 109:Core/Src/main.c ****   /* start timers, add new ones, ... */
 110:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 113:Core/Src/main.c ****   /* add queues, ... */
 114:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Create the thread(s) */
 117:Core/Src/main.c ****   /* definition and creation of defaultTask */
 118:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 119:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 122:Core/Src/main.c ****   /* add threads, ... */
 123:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Start scheduler */
 126:Core/Src/main.c ****   osKernelStart();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 129:Core/Src/main.c ****   /* Infinite loop */
 130:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 131:Core/Src/main.c ****   while (1)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     /* USER CODE END WHILE */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c ****   /* USER CODE END 3 */
 138:Core/Src/main.c **** }
 139:Core/Src/main.c **** 
ARM GAS  /tmp/ccwZeu25.s 			page 4


 140:Core/Src/main.c **** /**
 141:Core/Src/main.c ****   * @brief System Clock Configuration
 142:Core/Src/main.c ****   * @retval None
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c **** void SystemClock_Config(void)
 145:Core/Src/main.c **** {
 146:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 152:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 153:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 154:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 165:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     Error_Handler();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c **** }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief USART2 Initialization Function
 186:Core/Src/main.c ****   * @param None
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 190:Core/Src/main.c **** {
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
ARM GAS  /tmp/ccwZeu25.s 			page 5


 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 199:Core/Src/main.c ****   huart2.Instance = USART2;
 200:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 201:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 202:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 203:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 204:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 205:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 206:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 207:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****     Error_Handler();
 210:Core/Src/main.c ****   }
 211:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief GPIO Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_GPIO_Init(void)
 223:Core/Src/main.c **** {
  32              		.loc 1 223 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 40
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 30B5     		push	{r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
  42 0002 8BB0     		sub	sp, sp, #44
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 56
 224:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 224 3 view .LVU1
  46              		.loc 1 224 20 is_stmt 0 view .LVU2
  47 0004 0024     		movs	r4, #0
  48 0006 0594     		str	r4, [sp, #20]
  49 0008 0694     		str	r4, [sp, #24]
  50 000a 0794     		str	r4, [sp, #28]
  51 000c 0894     		str	r4, [sp, #32]
  52 000e 0994     		str	r4, [sp, #36]
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 227:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 227 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 227 3 view .LVU4
  56 0010 0194     		str	r4, [sp, #4]
  57              		.loc 1 227 3 view .LVU5
ARM GAS  /tmp/ccwZeu25.s 			page 6


  58 0012 224B     		ldr	r3, .L3
  59 0014 1A6B     		ldr	r2, [r3, #48]
  60 0016 42F00402 		orr	r2, r2, #4
  61 001a 1A63     		str	r2, [r3, #48]
  62              		.loc 1 227 3 view .LVU6
  63 001c 1A6B     		ldr	r2, [r3, #48]
  64 001e 02F00402 		and	r2, r2, #4
  65 0022 0192     		str	r2, [sp, #4]
  66              		.loc 1 227 3 view .LVU7
  67 0024 019A     		ldr	r2, [sp, #4]
  68              	.LBE4:
  69              		.loc 1 227 3 view .LVU8
 228:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 228 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 228 3 view .LVU10
  73 0026 0294     		str	r4, [sp, #8]
  74              		.loc 1 228 3 view .LVU11
  75 0028 1A6B     		ldr	r2, [r3, #48]
  76 002a 42F08002 		orr	r2, r2, #128
  77 002e 1A63     		str	r2, [r3, #48]
  78              		.loc 1 228 3 view .LVU12
  79 0030 1A6B     		ldr	r2, [r3, #48]
  80 0032 02F08002 		and	r2, r2, #128
  81 0036 0292     		str	r2, [sp, #8]
  82              		.loc 1 228 3 view .LVU13
  83 0038 029A     		ldr	r2, [sp, #8]
  84              	.LBE5:
  85              		.loc 1 228 3 view .LVU14
 229:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  86              		.loc 1 229 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 229 3 view .LVU16
  89 003a 0394     		str	r4, [sp, #12]
  90              		.loc 1 229 3 view .LVU17
  91 003c 1A6B     		ldr	r2, [r3, #48]
  92 003e 42F00102 		orr	r2, r2, #1
  93 0042 1A63     		str	r2, [r3, #48]
  94              		.loc 1 229 3 view .LVU18
  95 0044 1A6B     		ldr	r2, [r3, #48]
  96 0046 02F00102 		and	r2, r2, #1
  97 004a 0392     		str	r2, [sp, #12]
  98              		.loc 1 229 3 view .LVU19
  99 004c 039A     		ldr	r2, [sp, #12]
 100              	.LBE6:
 101              		.loc 1 229 3 view .LVU20
 230:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 102              		.loc 1 230 3 view .LVU21
 103              	.LBB7:
 104              		.loc 1 230 3 view .LVU22
 105 004e 0494     		str	r4, [sp, #16]
 106              		.loc 1 230 3 view .LVU23
 107 0050 1A6B     		ldr	r2, [r3, #48]
 108 0052 42F00202 		orr	r2, r2, #2
 109 0056 1A63     		str	r2, [r3, #48]
 110              		.loc 1 230 3 view .LVU24
 111 0058 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccwZeu25.s 			page 7


 112 005a 03F00203 		and	r3, r3, #2
 113 005e 0493     		str	r3, [sp, #16]
 114              		.loc 1 230 3 view .LVU25
 115 0060 049B     		ldr	r3, [sp, #16]
 116              	.LBE7:
 117              		.loc 1 230 3 view .LVU26
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 233:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 118              		.loc 1 233 3 view .LVU27
 119 0062 0F4D     		ldr	r5, .L3+4
 120 0064 2246     		mov	r2, r4
 121 0066 2021     		movs	r1, #32
 122 0068 2846     		mov	r0, r5
 123 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL0:
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 236:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 125              		.loc 1 236 3 view .LVU28
 126              		.loc 1 236 23 is_stmt 0 view .LVU29
 127 006e 4FF40053 		mov	r3, #8192
 128 0072 0593     		str	r3, [sp, #20]
 237:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 129              		.loc 1 237 3 is_stmt 1 view .LVU30
 130              		.loc 1 237 24 is_stmt 0 view .LVU31
 131 0074 0B4B     		ldr	r3, .L3+8
 132 0076 0693     		str	r3, [sp, #24]
 238:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 238 3 is_stmt 1 view .LVU32
 134              		.loc 1 238 24 is_stmt 0 view .LVU33
 135 0078 0794     		str	r4, [sp, #28]
 239:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 136              		.loc 1 239 3 is_stmt 1 view .LVU34
 137 007a 05A9     		add	r1, sp, #20
 138 007c 0A48     		ldr	r0, .L3+12
 139 007e FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL1:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 242:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 141              		.loc 1 242 3 view .LVU35
 142              		.loc 1 242 23 is_stmt 0 view .LVU36
 143 0082 2023     		movs	r3, #32
 144 0084 0593     		str	r3, [sp, #20]
 243:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 145              		.loc 1 243 3 is_stmt 1 view .LVU37
 146              		.loc 1 243 24 is_stmt 0 view .LVU38
 147 0086 0123     		movs	r3, #1
 148 0088 0693     		str	r3, [sp, #24]
 244:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 149              		.loc 1 244 3 is_stmt 1 view .LVU39
 150              		.loc 1 244 24 is_stmt 0 view .LVU40
 151 008a 0794     		str	r4, [sp, #28]
 245:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 152              		.loc 1 245 3 is_stmt 1 view .LVU41
 153              		.loc 1 245 25 is_stmt 0 view .LVU42
ARM GAS  /tmp/ccwZeu25.s 			page 8


 154 008c 0894     		str	r4, [sp, #32]
 246:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 155              		.loc 1 246 3 is_stmt 1 view .LVU43
 156 008e 05A9     		add	r1, sp, #20
 157 0090 2846     		mov	r0, r5
 158 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL2:
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** }
 160              		.loc 1 248 1 is_stmt 0 view .LVU44
 161 0096 0BB0     		add	sp, sp, #44
 162              	.LCFI2:
 163              		.cfi_def_cfa_offset 12
 164              		@ sp needed
 165 0098 30BD     		pop	{r4, r5, pc}
 166              	.L4:
 167 009a 00BF     		.align	2
 168              	.L3:
 169 009c 00380240 		.word	1073887232
 170 00a0 00000240 		.word	1073872896
 171 00a4 00002110 		.word	270598144
 172 00a8 00080240 		.word	1073874944
 173              		.cfi_endproc
 174              	.LFE139:
 176              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 177              		.align	2
 178              	.LC2:
 179 0000 31323334 		.ascii	"1234567890abcdef\000"
 179      35363738 
 179      39306162 
 179      63646566 
 179      00
 180 0011 000000   		.align	2
 181              	.LC3:
 182 0014 4C6F7265 		.ascii	"Lorem ipsum  \015\012\000"
 182      6D206970 
 182      73756D20 
 182      200D0A00 
 183              		.section	.text.StartDefaultTask,"ax",%progbits
 184              		.align	1
 185              		.global	StartDefaultTask
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	StartDefaultTask:
 192              	.LFB140:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /* USER CODE END 4 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 255:Core/Src/main.c **** /**
 256:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 257:Core/Src/main.c ****   * @param  argument: Not used
 258:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccwZeu25.s 			page 9


 259:Core/Src/main.c ****   */
 260:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 261:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 262:Core/Src/main.c **** {
 193              		.loc 1 262 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 416
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL3:
 198              		.loc 1 262 1 is_stmt 0 view .LVU46
 199 0000 10B5     		push	{r4, lr}
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 4, -8
 203              		.cfi_offset 14, -4
 204 0002 EAB0     		sub	sp, sp, #424
 205              	.LCFI4:
 206              		.cfi_def_cfa_offset 432
 207              	.LVL4:
 208              	.L6:
 263:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 264:Core/Src/main.c ****   /* Infinite loop */
 265:Core/Src/main.c ****   for(;;)
 209              		.loc 1 265 3 is_stmt 1 view .LVU47
 210              	.LBB8:
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****     WC_RNG * rng;
 211              		.loc 1 268 5 view .LVU48
 269:Core/Src/main.c ****     Aes aes;
 212              		.loc 1 269 5 view .LVU49
 270:Core/Src/main.c ****     
 271:Core/Src/main.c ****     int ret = -1;
 213              		.loc 1 271 5 view .LVU50
 272:Core/Src/main.c ****     byte key[] = {"1234567890abcdef"};
 214              		.loc 1 272 5 view .LVU51
 215              		.loc 1 272 10 is_stmt 0 view .LVU52
 216 0004 0DF12C0C 		add	ip, sp, #44
 217 0008 274C     		ldr	r4, .L8
 218 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 219 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 220 0010 2368     		ldr	r3, [r4]
 221 0012 8CF80030 		strb	r3, [ip]
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     byte iv[AES_BLOCK_SIZE];
 222              		.loc 1 274 5 is_stmt 1 view .LVU53
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****     byte text[]  = {"Lorem ipsum  \r\n"};
 223              		.loc 1 277 5 view .LVU54
 224              		.loc 1 277 10 is_stmt 0 view .LVU55
 225 0016 07AC     		add	r4, sp, #28
 226 0018 244B     		ldr	r3, .L8+4
 227 001a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 228 001c 84E80F00 		stm	r4, {r0, r1, r2, r3}
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 
ARM GAS  /tmp/ccwZeu25.s 			page 10


 280:Core/Src/main.c ****     int AES_TEXT_SIZE = sizeof(text);
 229              		.loc 1 280 5 is_stmt 1 view .LVU56
 230              	.LVL5:
 281:Core/Src/main.c ****     if(AES_TEXT_SIZE%AES_BLOCK_SIZE!=0){
 231              		.loc 1 281 5 view .LVU57
 282:Core/Src/main.c ****       AES_TEXT_SIZE = sizeof(text)+(AES_BLOCK_SIZE-sizeof(text)%AES_BLOCK_SIZE);
 283:Core/Src/main.c ****     }
 284:Core/Src/main.c ****     byte plain[AES_TEXT_SIZE];
 232              		.loc 1 284 5 view .LVU58
 285:Core/Src/main.c ****     byte plain2[AES_TEXT_SIZE];
 233              		.loc 1 285 5 view .LVU59
 286:Core/Src/main.c ****     byte cipher[AES_TEXT_SIZE];
 234              		.loc 1 286 5 view .LVU60
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****     strcpy(plain, text);
 235              		.loc 1 288 5 view .LVU61
 236 0020 2146     		mov	r1, r4
 237 0022 5EA8     		add	r0, sp, #376
 238              	.LVL6:
 239              		.loc 1 288 5 is_stmt 0 view .LVU62
 240 0024 FFF7FEFF 		bl	strcpy
 241              	.LVL7:
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****     ret = wc_InitRng(rng);
 242              		.loc 1 290 5 is_stmt 1 view .LVU63
 243              		.loc 1 290 11 is_stmt 0 view .LVU64
 244 0028 0024     		movs	r4, #0
 245 002a 2046     		mov	r0, r4
 246 002c FFF7FEFF 		bl	wc_InitRng
 247              	.LVL8:
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****     ret = wc_RNG_GenerateBlock(rng, iv, AES_BLOCK_SIZE);
 248              		.loc 1 292 5 is_stmt 1 view .LVU65
 249              		.loc 1 292 11 is_stmt 0 view .LVU66
 250 0030 1022     		movs	r2, #16
 251 0032 03A9     		add	r1, sp, #12
 252 0034 2046     		mov	r0, r4
 253 0036 FFF7FEFF 		bl	wc_RNG_GenerateBlock
 254              	.LVL9:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****     HAL_UART_Transmit(&huart2,plain,sizeof(plain),1000);
 255              		.loc 1 294 5 is_stmt 1 view .LVU67
 256 003a 1D4C     		ldr	r4, .L8+8
 257 003c 4FF47A73 		mov	r3, #1000
 258 0040 1022     		movs	r2, #16
 259 0042 5EA9     		add	r1, sp, #376
 260              	.LVL10:
 261              		.loc 1 294 5 is_stmt 0 view .LVU68
 262 0044 2046     		mov	r0, r4
 263 0046 FFF7FEFF 		bl	HAL_UART_Transmit
 264              	.LVL11:
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****     ret = wc_AesSetKey(&aes, key, AES_BLOCK_SIZE, iv, AES_ENCRYPTION);
 265              		.loc 1 296 5 is_stmt 1 view .LVU69
 266              		.loc 1 296 11 is_stmt 0 view .LVU70
 267 004a 0023     		movs	r3, #0
 268 004c 0093     		str	r3, [sp]
ARM GAS  /tmp/ccwZeu25.s 			page 11


 269 004e 03AB     		add	r3, sp, #12
 270 0050 1022     		movs	r2, #16
 271 0052 0BA9     		add	r1, sp, #44
 272 0054 10A8     		add	r0, sp, #64
 273 0056 FFF7FEFF 		bl	wc_AesSetKey
 274              	.LVL12:
 297:Core/Src/main.c ****     ret = wc_AesCbcEncrypt(&aes, cipher, plain, sizeof(plain));
 275              		.loc 1 297 5 is_stmt 1 view .LVU71
 276              		.loc 1 297 11 is_stmt 0 view .LVU72
 277 005a 1023     		movs	r3, #16
 278 005c 5EAA     		add	r2, sp, #376
 279              	.LVL13:
 280              		.loc 1 297 11 view .LVU73
 281 005e 66A9     		add	r1, sp, #408
 282              	.LVL14:
 283              		.loc 1 297 11 view .LVU74
 284 0060 10A8     		add	r0, sp, #64
 285 0062 FFF7FEFF 		bl	wc_AesCbcEncrypt
 286              	.LVL15:
 298:Core/Src/main.c ****    
 299:Core/Src/main.c ****     HAL_UART_Transmit(&huart2,cipher,sizeof(cipher),1000);
 287              		.loc 1 299 5 is_stmt 1 view .LVU75
 288 0066 4FF47A73 		mov	r3, #1000
 289 006a 1022     		movs	r2, #16
 290 006c 66A9     		add	r1, sp, #408
 291              	.LVL16:
 292              		.loc 1 299 5 is_stmt 0 view .LVU76
 293 006e 2046     		mov	r0, r4
 294 0070 FFF7FEFF 		bl	HAL_UART_Transmit
 295              	.LVL17:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     ret = wc_AesSetKey(&aes, key, AES_BLOCK_SIZE, iv, AES_DECRYPTION);
 296              		.loc 1 301 5 is_stmt 1 view .LVU77
 297              		.loc 1 301 11 is_stmt 0 view .LVU78
 298 0074 0123     		movs	r3, #1
 299 0076 0093     		str	r3, [sp]
 300 0078 03AB     		add	r3, sp, #12
 301 007a 1022     		movs	r2, #16
 302 007c 0BA9     		add	r1, sp, #44
 303 007e 10A8     		add	r0, sp, #64
 304 0080 FFF7FEFF 		bl	wc_AesSetKey
 305              	.LVL18:
 302:Core/Src/main.c ****     ret = wc_AesCbcDecrypt(&aes, plain2, cipher, sizeof(cipher));
 306              		.loc 1 302 5 is_stmt 1 view .LVU79
 307              		.loc 1 302 11 is_stmt 0 view .LVU80
 308 0084 1023     		movs	r3, #16
 309 0086 66AA     		add	r2, sp, #408
 310              	.LVL19:
 311              		.loc 1 302 11 view .LVU81
 312 0088 62A9     		add	r1, sp, #392
 313              	.LVL20:
 314              		.loc 1 302 11 view .LVU82
 315 008a 10A8     		add	r0, sp, #64
 316 008c FFF7FEFF 		bl	wc_AesCbcDecrypt
 317              	.LVL21:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****     HAL_UART_Transmit(&huart2,plain2,sizeof(plain2),1000);
ARM GAS  /tmp/ccwZeu25.s 			page 12


 318              		.loc 1 304 5 is_stmt 1 view .LVU83
 319 0090 4FF47A73 		mov	r3, #1000
 320 0094 1022     		movs	r2, #16
 321 0096 62A9     		add	r1, sp, #392
 322              	.LVL22:
 323              		.loc 1 304 5 is_stmt 0 view .LVU84
 324 0098 2046     		mov	r0, r4
 325 009a FFF7FEFF 		bl	HAL_UART_Transmit
 326              	.LVL23:
 305:Core/Src/main.c ****     
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****     osDelay(1000);
 327              		.loc 1 307 5 is_stmt 1 view .LVU85
 328 009e 4FF47A70 		mov	r0, #1000
 329 00a2 FFF7FEFF 		bl	osDelay
 330              	.LVL24:
 331              	.LBE8:
 265:Core/Src/main.c ****   {
 332              		.loc 1 265 8 view .LVU86
 333 00a6 ADE7     		b	.L6
 334              	.L9:
 335              		.align	2
 336              	.L8:
 337 00a8 00000000 		.word	.LC2
 338 00ac 14000000 		.word	.LC3
 339 00b0 00000000 		.word	.LANCHOR0
 340              		.cfi_endproc
 341              	.LFE140:
 343              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 344              		.align	1
 345              		.global	HAL_TIM_PeriodElapsedCallback
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 349              		.fpu fpv4-sp-d16
 351              	HAL_TIM_PeriodElapsedCallback:
 352              	.LVL25:
 353              	.LFB141:
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c ****   /* USER CODE END 5 */
 310:Core/Src/main.c **** }
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****  /**
 313:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 314:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 315:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 316:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 317:Core/Src/main.c ****   * @param  htim : TIM handle
 318:Core/Src/main.c ****   * @retval None
 319:Core/Src/main.c ****   */
 320:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 321:Core/Src/main.c **** {
 354              		.loc 1 321 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		.loc 1 321 1 is_stmt 0 view .LVU88
ARM GAS  /tmp/ccwZeu25.s 			page 13


 359 0000 08B5     		push	{r3, lr}
 360              	.LCFI5:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 3, -8
 363              		.cfi_offset 14, -4
 322:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 325:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 364              		.loc 1 325 3 is_stmt 1 view .LVU89
 365              		.loc 1 325 11 is_stmt 0 view .LVU90
 366 0002 0268     		ldr	r2, [r0]
 367              		.loc 1 325 6 view .LVU91
 368 0004 034B     		ldr	r3, .L14
 369 0006 9A42     		cmp	r2, r3
 370 0008 00D0     		beq	.L13
 371              	.LVL26:
 372              	.L10:
 326:Core/Src/main.c ****     HAL_IncTick();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 331:Core/Src/main.c **** }
 373              		.loc 1 331 1 view .LVU92
 374 000a 08BD     		pop	{r3, pc}
 375              	.LVL27:
 376              	.L13:
 326:Core/Src/main.c ****     HAL_IncTick();
 377              		.loc 1 326 5 is_stmt 1 view .LVU93
 378 000c FFF7FEFF 		bl	HAL_IncTick
 379              	.LVL28:
 380              		.loc 1 331 1 is_stmt 0 view .LVU94
 381 0010 FBE7     		b	.L10
 382              	.L15:
 383 0012 00BF     		.align	2
 384              	.L14:
 385 0014 00000140 		.word	1073807360
 386              		.cfi_endproc
 387              	.LFE141:
 389              		.section	.text.Error_Handler,"ax",%progbits
 390              		.align	1
 391              		.global	Error_Handler
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu fpv4-sp-d16
 397              	Error_Handler:
 398              	.LFB142:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 335:Core/Src/main.c ****   * @retval None
 336:Core/Src/main.c ****   */
 337:Core/Src/main.c **** void Error_Handler(void)
 338:Core/Src/main.c **** {
 399              		.loc 1 338 1 is_stmt 1 view -0
ARM GAS  /tmp/ccwZeu25.s 			page 14


 400              		.cfi_startproc
 401              		@ Volatile: function does not return.
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 339:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 340:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 341:Core/Src/main.c ****   __disable_irq();
 405              		.loc 1 341 3 view .LVU96
 406              	.LBB9:
 407              	.LBI9:
 408              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccwZeu25.s 			page 15


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccwZeu25.s 			page 16


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 409              		.loc 2 140 27 view .LVU97
 410              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 411              		.loc 2 142 3 view .LVU98
 412              		.syntax unified
 413              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 414 0000 72B6     		cpsid i
 415              	@ 0 "" 2
 416              		.thumb
 417              		.syntax unified
 418              	.L17:
 419              	.LBE10:
 420              	.LBE9:
 342:Core/Src/main.c ****   while (1)
 421              		.loc 1 342 3 discriminator 1 view .LVU99
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****   }
 422              		.loc 1 344 3 discriminator 1 view .LVU100
ARM GAS  /tmp/ccwZeu25.s 			page 17


 342:Core/Src/main.c ****   while (1)
 423              		.loc 1 342 9 discriminator 1 view .LVU101
 424 0002 FEE7     		b	.L17
 425              		.cfi_endproc
 426              	.LFE142:
 428              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 429              		.align	1
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv4-sp-d16
 435              	MX_USART2_UART_Init:
 436              	.LFB138:
 190:Core/Src/main.c **** 
 437              		.loc 1 190 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441 0000 08B5     		push	{r3, lr}
 442              	.LCFI6:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
 199:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 446              		.loc 1 199 3 view .LVU103
 199:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 447              		.loc 1 199 19 is_stmt 0 view .LVU104
 448 0002 0A48     		ldr	r0, .L22
 449 0004 0A4B     		ldr	r3, .L22+4
 450 0006 0360     		str	r3, [r0]
 200:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 451              		.loc 1 200 3 is_stmt 1 view .LVU105
 200:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 452              		.loc 1 200 24 is_stmt 0 view .LVU106
 453 0008 4FF4E133 		mov	r3, #115200
 454 000c 4360     		str	r3, [r0, #4]
 201:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 455              		.loc 1 201 3 is_stmt 1 view .LVU107
 201:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 456              		.loc 1 201 26 is_stmt 0 view .LVU108
 457 000e 0023     		movs	r3, #0
 458 0010 8360     		str	r3, [r0, #8]
 202:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 459              		.loc 1 202 3 is_stmt 1 view .LVU109
 202:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 460              		.loc 1 202 24 is_stmt 0 view .LVU110
 461 0012 C360     		str	r3, [r0, #12]
 203:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 462              		.loc 1 203 3 is_stmt 1 view .LVU111
 203:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 463              		.loc 1 203 22 is_stmt 0 view .LVU112
 464 0014 0361     		str	r3, [r0, #16]
 204:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 465              		.loc 1 204 3 is_stmt 1 view .LVU113
 204:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 466              		.loc 1 204 20 is_stmt 0 view .LVU114
 467 0016 0C22     		movs	r2, #12
ARM GAS  /tmp/ccwZeu25.s 			page 18


 468 0018 4261     		str	r2, [r0, #20]
 205:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 469              		.loc 1 205 3 is_stmt 1 view .LVU115
 205:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 470              		.loc 1 205 25 is_stmt 0 view .LVU116
 471 001a 8361     		str	r3, [r0, #24]
 206:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 472              		.loc 1 206 3 is_stmt 1 view .LVU117
 206:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 473              		.loc 1 206 28 is_stmt 0 view .LVU118
 474 001c C361     		str	r3, [r0, #28]
 207:Core/Src/main.c ****   {
 475              		.loc 1 207 3 is_stmt 1 view .LVU119
 207:Core/Src/main.c ****   {
 476              		.loc 1 207 7 is_stmt 0 view .LVU120
 477 001e FFF7FEFF 		bl	HAL_UART_Init
 478              	.LVL29:
 207:Core/Src/main.c ****   {
 479              		.loc 1 207 6 view .LVU121
 480 0022 00B9     		cbnz	r0, .L21
 215:Core/Src/main.c **** 
 481              		.loc 1 215 1 view .LVU122
 482 0024 08BD     		pop	{r3, pc}
 483              	.L21:
 209:Core/Src/main.c ****   }
 484              		.loc 1 209 5 is_stmt 1 view .LVU123
 485 0026 FFF7FEFF 		bl	Error_Handler
 486              	.LVL30:
 487              	.L23:
 488 002a 00BF     		.align	2
 489              	.L22:
 490 002c 00000000 		.word	.LANCHOR0
 491 0030 00440040 		.word	1073759232
 492              		.cfi_endproc
 493              	.LFE138:
 495              		.section	.text.SystemClock_Config,"ax",%progbits
 496              		.align	1
 497              		.global	SystemClock_Config
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 501              		.fpu fpv4-sp-d16
 503              	SystemClock_Config:
 504              	.LFB137:
 145:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 505              		.loc 1 145 1 view -0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 80
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509 0000 00B5     		push	{lr}
 510              	.LCFI7:
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 14, -4
 513 0002 95B0     		sub	sp, sp, #84
 514              	.LCFI8:
 515              		.cfi_def_cfa_offset 88
 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccwZeu25.s 			page 19


 516              		.loc 1 146 3 view .LVU125
 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 517              		.loc 1 146 22 is_stmt 0 view .LVU126
 518 0004 3022     		movs	r2, #48
 519 0006 0021     		movs	r1, #0
 520 0008 08A8     		add	r0, sp, #32
 521 000a FFF7FEFF 		bl	memset
 522              	.LVL31:
 147:Core/Src/main.c **** 
 523              		.loc 1 147 3 is_stmt 1 view .LVU127
 147:Core/Src/main.c **** 
 524              		.loc 1 147 22 is_stmt 0 view .LVU128
 525 000e 0023     		movs	r3, #0
 526 0010 0393     		str	r3, [sp, #12]
 527 0012 0493     		str	r3, [sp, #16]
 528 0014 0593     		str	r3, [sp, #20]
 529 0016 0693     		str	r3, [sp, #24]
 530 0018 0793     		str	r3, [sp, #28]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 531              		.loc 1 151 3 is_stmt 1 view .LVU129
 532              	.LBB11:
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 533              		.loc 1 151 3 view .LVU130
 534 001a 0193     		str	r3, [sp, #4]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 535              		.loc 1 151 3 view .LVU131
 536 001c 1F4A     		ldr	r2, .L30
 537 001e 116C     		ldr	r1, [r2, #64]
 538 0020 41F08051 		orr	r1, r1, #268435456
 539 0024 1164     		str	r1, [r2, #64]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 540              		.loc 1 151 3 view .LVU132
 541 0026 126C     		ldr	r2, [r2, #64]
 542 0028 02F08052 		and	r2, r2, #268435456
 543 002c 0192     		str	r2, [sp, #4]
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 544              		.loc 1 151 3 view .LVU133
 545 002e 019A     		ldr	r2, [sp, #4]
 546              	.LBE11:
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 547              		.loc 1 151 3 view .LVU134
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 548              		.loc 1 152 3 view .LVU135
 549              	.LBB12:
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 550              		.loc 1 152 3 view .LVU136
 551 0030 0293     		str	r3, [sp, #8]
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 552              		.loc 1 152 3 view .LVU137
 553 0032 1B49     		ldr	r1, .L30+4
 554 0034 0A68     		ldr	r2, [r1]
 555 0036 22F44042 		bic	r2, r2, #49152
 556 003a 42F40042 		orr	r2, r2, #32768
 557 003e 0A60     		str	r2, [r1]
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 558              		.loc 1 152 3 view .LVU138
 559 0040 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccwZeu25.s 			page 20


 560 0042 02F44042 		and	r2, r2, #49152
 561 0046 0292     		str	r2, [sp, #8]
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 562              		.loc 1 152 3 view .LVU139
 563 0048 029A     		ldr	r2, [sp, #8]
 564              	.LBE12:
 152:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 565              		.loc 1 152 3 view .LVU140
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 566              		.loc 1 156 3 view .LVU141
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 567              		.loc 1 156 36 is_stmt 0 view .LVU142
 568 004a 0221     		movs	r1, #2
 569 004c 0891     		str	r1, [sp, #32]
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 570              		.loc 1 157 3 is_stmt 1 view .LVU143
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 571              		.loc 1 157 30 is_stmt 0 view .LVU144
 572 004e 0122     		movs	r2, #1
 573 0050 0B92     		str	r2, [sp, #44]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 574              		.loc 1 158 3 is_stmt 1 view .LVU145
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 575              		.loc 1 158 41 is_stmt 0 view .LVU146
 576 0052 1022     		movs	r2, #16
 577 0054 0C92     		str	r2, [sp, #48]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 578              		.loc 1 159 3 is_stmt 1 view .LVU147
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 579              		.loc 1 159 34 is_stmt 0 view .LVU148
 580 0056 0E91     		str	r1, [sp, #56]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 581              		.loc 1 160 3 is_stmt 1 view .LVU149
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 582              		.loc 1 160 35 is_stmt 0 view .LVU150
 583 0058 0F93     		str	r3, [sp, #60]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 584              		.loc 1 161 3 is_stmt 1 view .LVU151
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 585              		.loc 1 161 30 is_stmt 0 view .LVU152
 586 005a 1092     		str	r2, [sp, #64]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 587              		.loc 1 162 3 is_stmt 1 view .LVU153
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 588              		.loc 1 162 30 is_stmt 0 view .LVU154
 589 005c 4FF4A873 		mov	r3, #336
 590 0060 1193     		str	r3, [sp, #68]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 591              		.loc 1 163 3 is_stmt 1 view .LVU155
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 592              		.loc 1 163 30 is_stmt 0 view .LVU156
 593 0062 0423     		movs	r3, #4
 594 0064 1293     		str	r3, [sp, #72]
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 595              		.loc 1 164 3 is_stmt 1 view .LVU157
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 596              		.loc 1 164 30 is_stmt 0 view .LVU158
ARM GAS  /tmp/ccwZeu25.s 			page 21


 597 0066 0723     		movs	r3, #7
 598 0068 1393     		str	r3, [sp, #76]
 165:Core/Src/main.c ****   {
 599              		.loc 1 165 3 is_stmt 1 view .LVU159
 165:Core/Src/main.c ****   {
 600              		.loc 1 165 7 is_stmt 0 view .LVU160
 601 006a 08A8     		add	r0, sp, #32
 602 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 603              	.LVL32:
 165:Core/Src/main.c ****   {
 604              		.loc 1 165 6 view .LVU161
 605 0070 80B9     		cbnz	r0, .L28
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 606              		.loc 1 171 3 is_stmt 1 view .LVU162
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 607              		.loc 1 171 31 is_stmt 0 view .LVU163
 608 0072 0F23     		movs	r3, #15
 609 0074 0393     		str	r3, [sp, #12]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 610              		.loc 1 173 3 is_stmt 1 view .LVU164
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 611              		.loc 1 173 34 is_stmt 0 view .LVU165
 612 0076 0221     		movs	r1, #2
 613 0078 0491     		str	r1, [sp, #16]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 614              		.loc 1 174 3 is_stmt 1 view .LVU166
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 615              		.loc 1 174 35 is_stmt 0 view .LVU167
 616 007a 0023     		movs	r3, #0
 617 007c 0593     		str	r3, [sp, #20]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 618              		.loc 1 175 3 is_stmt 1 view .LVU168
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 619              		.loc 1 175 36 is_stmt 0 view .LVU169
 620 007e 4FF48052 		mov	r2, #4096
 621 0082 0692     		str	r2, [sp, #24]
 176:Core/Src/main.c **** 
 622              		.loc 1 176 3 is_stmt 1 view .LVU170
 176:Core/Src/main.c **** 
 623              		.loc 1 176 36 is_stmt 0 view .LVU171
 624 0084 0793     		str	r3, [sp, #28]
 178:Core/Src/main.c ****   {
 625              		.loc 1 178 3 is_stmt 1 view .LVU172
 178:Core/Src/main.c ****   {
 626              		.loc 1 178 7 is_stmt 0 view .LVU173
 627 0086 03A8     		add	r0, sp, #12
 628 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 629              	.LVL33:
 178:Core/Src/main.c ****   {
 630              		.loc 1 178 6 view .LVU174
 631 008c 20B9     		cbnz	r0, .L29
 182:Core/Src/main.c **** 
 632              		.loc 1 182 1 view .LVU175
 633 008e 15B0     		add	sp, sp, #84
 634              	.LCFI9:
 635              		.cfi_remember_state
 636              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccwZeu25.s 			page 22


 637              		@ sp needed
 638 0090 5DF804FB 		ldr	pc, [sp], #4
 639              	.L28:
 640              	.LCFI10:
 641              		.cfi_restore_state
 167:Core/Src/main.c ****   }
 642              		.loc 1 167 5 is_stmt 1 view .LVU176
 643 0094 FFF7FEFF 		bl	Error_Handler
 644              	.LVL34:
 645              	.L29:
 180:Core/Src/main.c ****   }
 646              		.loc 1 180 5 view .LVU177
 647 0098 FFF7FEFF 		bl	Error_Handler
 648              	.LVL35:
 649              	.L31:
 650              		.align	2
 651              	.L30:
 652 009c 00380240 		.word	1073887232
 653 00a0 00700040 		.word	1073770496
 654              		.cfi_endproc
 655              	.LFE137:
 657              		.section	.text.main,"ax",%progbits
 658              		.align	1
 659              		.global	main
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 663              		.fpu fpv4-sp-d16
 665              	main:
 666              	.LFB136:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 667              		.loc 1 72 1 view -0
 668              		.cfi_startproc
 669              		@ Volatile: function does not return.
 670              		@ args = 0, pretend = 0, frame = 32
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672 0000 00B5     		push	{lr}
 673              	.LCFI11:
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 14, -4
 676 0002 89B0     		sub	sp, sp, #36
 677              	.LCFI12:
 678              		.cfi_def_cfa_offset 40
  80:Core/Src/main.c **** 
 679              		.loc 1 80 3 view .LVU179
 680 0004 FFF7FEFF 		bl	HAL_Init
 681              	.LVL36:
  87:Core/Src/main.c **** 
 682              		.loc 1 87 3 view .LVU180
 683 0008 FFF7FEFF 		bl	SystemClock_Config
 684              	.LVL37:
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
 685              		.loc 1 94 3 view .LVU181
 686 000c FFF7FEFF 		bl	MX_GPIO_Init
 687              	.LVL38:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 688              		.loc 1 95 3 view .LVU182
ARM GAS  /tmp/ccwZeu25.s 			page 23


 689 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 690              	.LVL39:
 118:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 691              		.loc 1 118 3 view .LVU183
 692 0014 0DF1040C 		add	ip, sp, #4
 693 0018 084C     		ldr	r4, .L35
 694 001a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 695 001c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 696 0020 94E80700 		ldm	r4, {r0, r1, r2}
 697 0024 8CE80700 		stm	ip, {r0, r1, r2}
 119:Core/Src/main.c **** 
 698              		.loc 1 119 3 view .LVU184
 119:Core/Src/main.c **** 
 699              		.loc 1 119 23 is_stmt 0 view .LVU185
 700 0028 0021     		movs	r1, #0
 701 002a 01A8     		add	r0, sp, #4
 702 002c FFF7FEFF 		bl	osThreadCreate
 703              	.LVL40:
 119:Core/Src/main.c **** 
 704              		.loc 1 119 21 view .LVU186
 705 0030 034B     		ldr	r3, .L35+4
 706 0032 1860     		str	r0, [r3]
 126:Core/Src/main.c **** 
 707              		.loc 1 126 3 is_stmt 1 view .LVU187
 708 0034 FFF7FEFF 		bl	osKernelStart
 709              	.LVL41:
 710              	.L33:
 131:Core/Src/main.c ****   {
 711              		.loc 1 131 3 discriminator 1 view .LVU188
 136:Core/Src/main.c ****   /* USER CODE END 3 */
 712              		.loc 1 136 3 discriminator 1 view .LVU189
 131:Core/Src/main.c ****   {
 713              		.loc 1 131 9 discriminator 1 view .LVU190
 714 0038 FEE7     		b	.L33
 715              	.L36:
 716 003a 00BF     		.align	2
 717              	.L35:
 718 003c 00000000 		.word	.LANCHOR1
 719 0040 00000000 		.word	.LANCHOR2
 720              		.cfi_endproc
 721              	.LFE136:
 723              		.global	defaultTaskHandle
 724              		.global	huart2
 725              		.section	.rodata
 726              		.align	2
 727              		.set	.LANCHOR1,. + 0
 728              	.LC4:
 729 0000 00000000 		.word	.LC0
 730 0004 00000000 		.word	StartDefaultTask
 731 0008 0000     		.short	0
 732 000a 0000     		.space	2
 733 000c 00000000 		.word	0
 734 0010 80000000 		.word	128
 735 0014 00000000 		.word	0
 736 0018 00000000 		.word	0
 737              		.section	.bss.defaultTaskHandle,"aw",%nobits
 738              		.align	2
ARM GAS  /tmp/ccwZeu25.s 			page 24


 739              		.set	.LANCHOR2,. + 0
 742              	defaultTaskHandle:
 743 0000 00000000 		.space	4
 744              		.section	.bss.huart2,"aw",%nobits
 745              		.align	2
 746              		.set	.LANCHOR0,. + 0
 749              	huart2:
 750 0000 00000000 		.space	64
 750      00000000 
 750      00000000 
 750      00000000 
 750      00000000 
 751              		.text
 752              	.Letext0:
 753              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 754              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 755              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 756              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 757              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 758              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 759              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 760              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 761              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 762              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 763              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 764              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 765              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 766              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 767              		.file 17 "Middlewares/Third_Party/wolfSSL_wolfSSL_wolfSSL/wolfssl/wolfssl/wolfcrypt/types.h"
 768              		.file 18 "Middlewares/Third_Party/wolfSSL_wolfSSL_wolfSSL/wolfssl/wolfssl/wolfcrypt/sha256.h"
 769              		.file 19 "Middlewares/Third_Party/wolfSSL_wolfSSL_wolfSSL/wolfssl/wolfssl/wolfcrypt/random.h"
 770              		.file 20 "Middlewares/Third_Party/wolfSSL_wolfSSL_wolfSSL/wolfssl/wolfssl/wolfcrypt/aes.h"
 771              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 772              		.file 22 "/usr/arm-none-eabi/include/string.h"
 773              		.file 23 "<built-in>"
ARM GAS  /tmp/ccwZeu25.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwZeu25.s:15     .rodata.str1.4:0000000000000000 $d
     /tmp/ccwZeu25.s:22     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccwZeu25.s:29     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccwZeu25.s:169    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/ccwZeu25.s:177    .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccwZeu25.s:184    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccwZeu25.s:191    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccwZeu25.s:337    .text.StartDefaultTask:00000000000000a8 $d
     /tmp/ccwZeu25.s:344    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccwZeu25.s:351    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccwZeu25.s:385    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccwZeu25.s:390    .text.Error_Handler:0000000000000000 $t
     /tmp/ccwZeu25.s:397    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccwZeu25.s:429    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccwZeu25.s:435    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccwZeu25.s:490    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccwZeu25.s:496    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwZeu25.s:503    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwZeu25.s:652    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccwZeu25.s:658    .text.main:0000000000000000 $t
     /tmp/ccwZeu25.s:665    .text.main:0000000000000000 main
     /tmp/ccwZeu25.s:718    .text.main:000000000000003c $d
     /tmp/ccwZeu25.s:742    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccwZeu25.s:749    .bss.huart2:0000000000000000 huart2
     /tmp/ccwZeu25.s:726    .rodata:0000000000000000 $d
     /tmp/ccwZeu25.s:738    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccwZeu25.s:745    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
strcpy
wc_InitRng
wc_RNG_GenerateBlock
HAL_UART_Transmit
wc_AesSetKey
wc_AesCbcEncrypt
wc_AesCbcDecrypt
osDelay
HAL_IncTick
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
